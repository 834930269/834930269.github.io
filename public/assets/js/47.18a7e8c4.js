(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{523:function(s,a,n){"use strict";n.r(a);var t=n(0),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#指令"}},[s._v("指令")])]),n("li",[n("a",{attrs:{href:"#浮点数"}},[s._v("浮点数")])]),n("li",[n("a",{attrs:{href:"#指令集"}},[s._v("指令集")])]),n("li",[n("a",{attrs:{href:"#第一个汇编程序"}},[s._v("第一个汇编程序")]),n("ul",[n("li",[n("a",{attrs:{href:"#if-else怎么写"}},[s._v("if-else怎么写")])]),n("li",[n("a",{attrs:{href:"#for-loop怎么写"}},[s._v("for-loop怎么写")])]),n("li",[n("a",{attrs:{href:"#求阶乘"}},[s._v("求阶乘")])])])]),n("li",[n("a",{attrs:{href:"#中断与中断向量"}},[s._v("中断与中断向量")])])])]),n("p"),s._v(" "),n("h1",{attrs:{id:"汇编入门"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#汇编入门"}},[s._v("#")]),s._v(" 汇编入门")]),s._v(" "),n("blockquote",[n("p",[s._v("所学的这些杂知识不是为了真的必须用到,而是为了补足基础的漏洞,然后要用到的时候就不会迷茫.当然,因为是架构性质的学习,所以不需要过于深入,只需要理解最基础的原理即可. "),n("code",[s._v("因为实际中不一定需要用到")])])]),s._v(" "),n("blockquote",[n("p",[s._v("但是牢记需要削减方向.对于一些补足性知识,"),n("strong",[s._v("适可而止")])])]),s._v(" "),n("h2",{attrs:{id:"指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[s._v("#")]),s._v(" 指令")]),s._v(" "),n("ul",[n("li",[s._v("CPU被时钟驱动,不断地读取PC指针指向的指令,并增加PC指针，从内存中读取指令并执行。(轮询)")]),s._v(" "),n("li",[s._v("不同的CPU架构不同，目前最广泛的RISC(Reduced instruction set computer, 精简指令集)")])]),s._v(" "),n("p",[s._v("机器循环:\n分析指令->执行指令->PC++->从PC位置获取指令->分析指令")]),s._v(" "),n("h2",{attrs:{id:"浮点数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[s._v("#")]),s._v(" 浮点数")]),s._v(" "),n("p",[s._v("浮点数怎么存的?")]),s._v(" "),n("p",[s._v("二进制:"),n("br"),s._v("\n0.1 = 一半-> 1/2"),n("br"),s._v("\n0.01 = 1/4")]),s._v(" "),n("p",[s._v("所以十进制的浮点数可以由二进制的浮点数组合而来")]),s._v(" "),n("p",[s._v("分为三个部分,sign(标记正负),exponent(0-2^11),fraction(即小数点后的二进制)"),n("br"),s._v("\n-1^sign*(1+b_51b_50...b_0)*2^(e-1023)")]),s._v(" "),n("p",[s._v("举例:")]),s._v(" "),n("p",[s._v("sign=0"),n("br"),s._v("\nexp=0b1111111110=1022"),n("br"),s._v("\nfraction=0b0101010101010.....=0.33...")]),s._v(" "),n("p",[s._v("值=-1^0 * (1+0.33...) * 2^(1022-1023) = 0.6666..")]),s._v(" "),n("p",[s._v("(具体见课程,暂时先不系统学)")]),s._v(" "),n("h2",{attrs:{id:"指令集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指令集"}},[s._v("#")]),s._v(" 指令集")]),s._v(" "),n("p",[s._v("一般分为三种,寄存器寻址,立即寻址,偏移量寻址和PC相对寻址")]),s._v(" "),n("p",[s._v("寄存器寻址："),n("br"),s._v("\n操作 目标寄存器,寄存器1,寄存器2")]),s._v(" "),n("p",[s._v("立即寻址:"),n("br"),s._v("\n操作 目标寄存器,寄存器1,立即数")]),s._v(" "),n("p",[s._v("偏移量寻址:"),n("br"),s._v("\n操作  目标寄存器,偏移量(寄存器1)"),n("br"),s._v("\n将寄存器1+偏移量内的数据打到目标寄存器中")]),s._v(" "),n("p",[s._v("PC相对寻址:"),n("br"),s._v("\n操作 比较目标1,比较目标2,下一个P指针的相对差"),n("br"),s._v("\n即将比较目标1与比较目标2进行比较,是否跳转到相对差的位置")]),s._v(" "),n("p",[s._v("正经的指令集:")]),s._v(" "),n("p",[s._v("内存读写:"),n("br"),s._v("\nload类: lw,lb,lh"),n("br"),s._v("\nstore类: sw,sb,sh")]),s._v(" "),n("p",[s._v("数学运算:")]),s._v(" "),n("ul",[n("li",[s._v("加减乘除:\n"),n("ul",[n("li",[s._v("立即寻址:addi,subi,divi,multi等")]),s._v(" "),n("li",[s._v("寄存器寻址: add,sub,div,mult")]),s._v(" "),n("li",[s._v("也有其他寻址方式")])])]),s._v(" "),n("li",[s._v("位运算XOR/AND/OR...")])]),s._v(" "),n("p",[s._v("比较运算:")]),s._v(" "),n("ul",[n("li",[s._v("slt(set if less than)\n"),n("ul",[n("li",[s._v("slt "),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[n("semantics",[n("mrow",[n("mi",[s._v("d")]),n("mo",{attrs:{separator:"true"}},[s._v(",")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("d,")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),n("span",{staticClass:"mord mathdefault"},[s._v("d")]),n("span",{staticClass:"mpunct"},[s._v(",")])])])]),s._v("rs,$rt  (d=1,如果rs<rt,d=0如果rs>=rt)")]),s._v(" "),n("li",[s._v("slti "),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[n("semantics",[n("mrow",[n("mi",[s._v("d")]),n("mo",{attrs:{separator:"true"}},[s._v(",")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("d,")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),n("span",{staticClass:"mord mathdefault"},[s._v("d")]),n("span",{staticClass:"mpunct"},[s._v(",")])])])]),s._v("rs,5 (r5和5比较)")])])])]),s._v(" "),n("p",[s._v("没有字符串比较,需要自己设计")]),s._v(" "),n("p",[s._v("条件跳转:")]),s._v(" "),n("ul",[n("li",[s._v("j Label(相对行号)")])]),s._v(" "),n("p",[s._v("寄存器间接寻址")]),s._v(" "),n("ul",[n("li",[s._v("jr $a0 (读出a0寄存器里的地址,然后跳转到寄存器内存的地址)")])]),s._v(" "),n("p",[s._v("多合一:")]),s._v(" "),n("ul",[n("li",[s._v("jal Label (也是跳到label)\n"),n("ul",[n("li",[s._v("但是它会先把PC+4存入$ra寄存器内")]),s._v(" "),n("li",[s._v("然后 j label")])])])]),s._v(" "),n("h2",{attrs:{id:"第一个汇编程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一个汇编程序"}},[s._v("#")]),s._v(" 第一个汇编程序")]),s._v(" "),n("p",[s._v("求阶乘的递归函数")]),s._v(" "),n("h3",{attrs:{id:"if-else怎么写"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#if-else怎么写"}},[s._v("#")]),s._v(" if-else怎么写")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("bne $r3,$r4,ELSE\nadd $r5,$r3,$r4\nj EXIT\nELSE:\nsub $r5,$r3,$r4\nEXIT:\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("其中EXIT会自动编译成一个寄存器的地址")]),s._v(" "),n("h3",{attrs:{id:"for-loop怎么写"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for-loop怎么写"}},[s._v("#")]),s._v(" for-loop怎么写")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[s._v("sum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tsum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v("i\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("addi $s3,$zero,0 #sum = 0\naddi $s4,$zero,0 #i = 0\naddi $s5,$zero,100 #常数100\nLOOP:\nbeq $s4,$s5,EXIT\nadd $s3,$s4,$s3 #sum=sum+i\naddi $s4,$s4,1\nj LOOP\nEXIT;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"求阶乘"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#求阶乘"}},[s._v("#")]),s._v(" 求阶乘")]),s._v(" "),n("p",[s._v("汇编会主动提供一个栈,所以可以利用这个栈来实现递归.")]),s._v(" "),n("p",[s._v("工具使用 "),n("code",[s._v("MARS")])]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("frac")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("frac")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language-mips line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 开始递归函数调用\naddiu $sp,$0,0x10010080 # 将sp的初始地址改成更方便观察的地址\n\naddiu $s0,$0,5 # n=5\n\nsw $s0,0($sp) # 将s0存到sp中(这句和下句合起来叫压栈)\naddiu $sp,$sp,-4 # 栈指针增加,压栈\n\n jal FACT # 先跳到FACT\n nop # FACT执行完会跳回第十行\n j END # 然后继续执行 直接跳到END\n nop # 就不继续了\n\nFACT:\n\n# 压栈返回地址\nsw $ra,0($sp)  #ra专门用来存放PC指针的,当jal跳到FACT后,ra就会存下PC指针的位置\naddiu $sp,$sp,-4 # 所以可以将ra作为当前递归函数层的指针\n\n# 读取入参\nlw $s0,8($sp) # 栈内每次存入两个值,一个是值,一个是返回地址的值\n\n#压栈返回值\nsw $0,0($sp)\naddiu $sp,$sp,-4\n\n# 递归base条件\n# if (a==0) {return 1}\nbne $s0,$0,RECURSION\nnop\n\n# 读取下返回地址\nlw $t1,8($sp)\n# 出栈,返回值,返回地址\naddiu $sp,$sp,8\n# 压栈返回值\naddiu $s0,$zero,1\nsw $s0,0($sp)\naddiu $sp,$sp,-4\n\njr $t1\nnop\n\nRECURSION: # recursion\n# 递归体\n# return fact(n-1)*n\n\n# 压栈参数\naddiu $s1,$s0,-1\nsw $s1,0($sp)\naddiu $sp,$sp,-4\n\njal FACT\nnop\n\n# 现在的站是什么样子的? |  参数  |  返回地址  |  返回值  | 子函数的参数 | 子函数的返回值  | sp\n# 当前参数\nlw $s0,20($sp)\n# 子函数的返回值\nlw $s1,4($sp)\n# 返回地址\nlw $t1,16($sp)\n\nmult $s1,$s0  # 32位*32位的可能一个寄存器存不下\nmflo $s2 # 这两句和起来是乘法的结果\n\n# 出栈\naddiu $sp,$sp,16\n\n# 返回值压栈\nsw $s2,0($sp)\naddiu $sp,$sp,-4\n\nEND:\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br")])]),n("h2",{attrs:{id:"中断与中断向量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中断与中断向量"}},[s._v("#")]),s._v(" 中断与中断向量")]),s._v(" "),n("p",[s._v("中断,应急响应,如正在忙的时候突然来了个电话")]),s._v(" "),n("ul",[n("li",[s._v("当外界发生变化时,通过中断通知CPU应该去注意某个信号(事件),这个时候,CPU当前执行的程序会被中断,当前的执行状态会被保存,中断响应程序会被执行.")])]),s._v(" "),n("p",[s._v("比如键盘按键的时候需要中断一下响应下键盘的按键.")]),s._v(" "),n("p",[s._v("中断向量表是所有中断的集合.当OS接到中断请求会触发中断响应程序.(接管中断).")]),s._v(" "),n("p",[s._v("如外设的所有操作都是中断.")]),s._v(" "),n("p",[s._v("还有硬件中断,软件中断.")]),s._v(" "),n("p",[s._v("中断的意义:")]),s._v(" "),n("p",[s._v("提高工作效率,故障恢复(如异常处理)")]),s._v(" "),n("p",[s._v("这里解释的都是非常浅显的,后面仍然需要具体的学习.")])])}),[],!1,null,null,null);a.default=r.exports}}]);