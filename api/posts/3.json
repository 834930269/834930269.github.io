{"total":369,"pageSize":10,"pageCount":37,"data":[{"title":"MyBatis - 数据持久化","slug":"mybatis","date":"2019-01-18T03:38:26.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/mybatis.json","excerpt":"","keywords":null,"cover":"http://be-sunshine.cn/wp-content/uploads/2019/01/Lusifer2018061304510002.png","content":"<h1><span id=\"学习网站\">学习网站</span></h1><blockquote>\n<p><a href=\"http://www.funtl.com/zh/mybatis/\" title=\"广州前锋\" target=\"_blank\" rel=\"noopener\">广州前锋</a></p>\n</blockquote>\n<h1><span id=\"脏读脏写\">脏读,脏写</span></h1><blockquote>\n<p>把之前本该不存在的值读,写入数据库</p>\n</blockquote>\n<h1><span id=\"mybatis\">MyBatis</span></h1><blockquote>\n<p>将数据库与应用解耦的中间件. <img src=\"http://be-sunshine.cn/wp-content/uploads/2019/01/Lusifer2018061304510002.png\" alt></p>\n</blockquote>\n<h1><span id=\"druid\">Druid</span></h1><blockquote>\n<p>阿里开源的一款框架,目前(?)连接池中最快.</p>\n</blockquote>\n<h1><span id=\"先放上一组示例\">先放上一组示例</span></h1><h2><span id=\"项目结构\">项目结构</span></h2><p><img src=\"http://be-sunshine.cn/wp-content/uploads/2019/01/%E6%8D%95%E8%8E%B7-1.png\" alt></p>\n<h2><span id=\"1-环境\">1 环境</span></h2><p>Idea + maven3.3.9 + mysql5.7</p>\n<h2><span id=\"2-开发过程\">2 开发过程</span></h2><h3><span id=\"建立数据表\">建立数据表</span></h3><p>在本地mysql数据库中建立名为test的database，并建立user表：</p>\n<pre><code>CREATE DATABASE test default charset=utf8;\n\nCREATE TABLE `user` (\n  `name` varchar(64) DEFAULT NULL,\n  `age` int(11) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\ninsert  into `user`(`name`,`age`) values (&apos;叶莜落&apos;,27),(&apos;张三丰&apos;,128);</code></pre><h3><span id=\"建立一个maven工程pom文件如下\">建立一个maven工程，POM文件如下：</span></h3><pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n  &lt;groupId&gt;com.yeyouluo.mybatis.druid&lt;/groupId&gt;\n  &lt;artifactId&gt;mybatis-druid&lt;/artifactId&gt;\n  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n\n  &lt;properties&gt;\n      &lt;myabtis.version&gt;3.4.1&lt;/myabtis.version&gt;\n  &lt;/properties&gt;\n\n  &lt;dependencies&gt;\n       &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n            &lt;version&gt;${myabtis.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;5.1.30&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid&lt;/artifactId&gt;\n            &lt;version&gt;1.0.14&lt;/version&gt;\n        &lt;/dependency&gt;\n  &lt;/dependencies&gt;\n&lt;/project&gt;</code></pre><h3><span id=\"配置文件\">配置文件</span></h3><p>①db.properties</p>\n<pre><code>driver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/test\nusername=root\npassword=root</code></pre><p>②mybatis-config.xml</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;\n&lt;configuration&gt;\n    &lt;!-- 引用db.properties配置文件 --&gt;\n    &lt;properties resource=&quot;db.properties&quot; /&gt;\n\n    &lt;typeAliases&gt;\n        &lt;typeAlias type=&quot;com.yeyouluo.mybatis.druid.utils.DruidDataSourceFactory&quot;\n            alias=&quot;DRUID&quot; /&gt;\n    &lt;/typeAliases&gt;\n\n    &lt;!-- development : 开发模式 work : 工作模式 --&gt;\n    &lt;environments default=&quot;work&quot;&gt;\n        &lt;environment id=&quot;work&quot;&gt;\n            &lt;transactionManager type=&quot;JDBC&quot; /&gt;\n            &lt;!-- 配置数据库连接信息 --&gt;\n            &lt;dataSource type=&quot;DRUID&quot;&gt;\n                &lt;!-- value属性值引用db.properties配置文件中配置的值 --&gt;\n                &lt;property name=&quot;driver&quot; value=&quot;${driver}&quot; /&gt;\n                &lt;property name=&quot;url&quot; value=&quot;${url}&quot; /&gt;\n                &lt;property name=&quot;username&quot; value=&quot;${username}&quot; /&gt;\n                &lt;property name=&quot;password&quot; value=&quot;${password}&quot; /&gt;\n            &lt;/dataSource&gt;\n        &lt;/environment&gt;\n    &lt;/environments&gt;\n\n    &lt;!-- mybatis的mapper文件，每个xml配置文件对应一个接口 --&gt;\n    &lt;mappers&gt;\n        &lt;mapper resource=&quot;mapper/userMapper.xml&quot; /&gt;\n    &lt;/mappers&gt;\n&lt;/configuration&gt;</code></pre><p>③在resources目录下建立userMapper.xml</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;  \n&lt;!DOCTYPE mapper PUBLIC &quot;-//ibatis.apache.org//DTD Mapper 3.0//EN&quot;      \n &quot;http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.yeyouluo.mybatis.druid.dao.userDao&quot;&gt;\n    &lt;select id=&quot;findAllUsers&quot; resultType=&quot;com.yeyouluo.mybatis.druid.pojo.User&quot;&gt;\n        select * from user\n    &lt;/select&gt;\n&lt;/mapper&gt;</code></pre><h3><span id=\"实体类-user\">实体类 User</span></h3><pre><code>package com.yeyouluo.mybatis.druid.pojo;\n\npublic class User {\n\n    private String name;\n    private int age;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;User [name=&quot; + name + &quot;, age=&quot; + age + &quot;]&quot;;\n    }\n\n}</code></pre><h3><span id=\"工具类\">工具类</span></h3><p>①DruidDataSourceFactory.java</p>\n<pre><code>package com.yeyouluo.mybatis.druid.utils;\n\nimport java.sql.SQLException;\nimport java.util.Properties;\nimport javax.sql.DataSource;\nimport org.apache.ibatis.datasource.DataSourceFactory;\nimport com.alibaba.druid.pool.DruidDataSource;\n\npublic class DruidDataSourceFactory implements DataSourceFactory {\n    private Properties props;\n\n    @Override\n    public DataSource getDataSource() {\n        DruidDataSource dds = new DruidDataSource();\n        dds.setDriverClassName(this.props.getProperty(&quot;driver&quot;));\n        dds.setUrl(this.props.getProperty(&quot;url&quot;));\n        dds.setUsername(this.props.getProperty(&quot;username&quot;));\n        dds.setPassword(this.props.getProperty(&quot;password&quot;));\n        // 其他配置可以根据MyBatis主配置文件进行配置\n        try {\n            dds.init();\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n        return dds;\n    }\n\n    @Override\n    public void setProperties(Properties props) {\n        this.props = props;\n    }\n}</code></pre><p>②MyBatisUtil.java</p>\n<pre><code>package com.yeyouluo.mybatis.druid.utils;\n\nimport java.io.InputStream;\n\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\n\npublic class MyBatisUtil {\n    private static final String configFile = &quot;mybatis-config.xml&quot;;\n\n    /**\n     * 创建连接\n     */\n    public static SqlSession getSession() {\n        SqlSession session = null;\n        try {\n            InputStream is = Resources.getResourceAsStream(configFile);\n            SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n            session = factory.openSession();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return session;\n    }\n\n    public static void closeSession(SqlSession session) {\n        session.close();\n    }\n\n    public static void main(String[] args) {\n        SqlSession session = MyBatisUtil.getSession();\n        System.out.println(session);\n        session.close();\n    }\n}</code></pre><h3><span id=\"dao\">DAO</span></h3><p>①接口IUserDao.java</p>\n<pre><code>package com.yeyouluo.mybatis.druid.dao;\n\nimport java.util.List;\n\nimport com.yeyouluo.mybatis.druid.pojo.User;\n\npublic interface IUserDao {\n    public List&lt;User&gt; findAllUsers();\n}</code></pre><p>②实现类UserDao.java</p>\n<pre><code>package com.yeyouluo.mybatis.druid.dao.impl;\n\nimport java.util.List;\n\nimport org.apache.ibatis.session.SqlSession;\n\nimport com.yeyouluo.mybatis.druid.dao.IUserDao;\nimport com.yeyouluo.mybatis.druid.pojo.User;\nimport com.yeyouluo.mybatis.druid.utils.MyBatisUtil;\n\npublic class UserDao implements IUserDao {\n\n    private static final String namespace = &quot;com.yeyouluo.mybatis.druid.dao.userDao.&quot;;\n\n    @Override\n    public List&lt;User&gt; findAllUsers() {\n        List&lt;User&gt; users = null;\n        SqlSession session = MyBatisUtil.getSession();\n        try {\n            users = session.selectList(namespace + &quot;findAllUsers&quot;, User.class);\n            //注意：此处有陷阱，如果做了更新、插入或删除操作，必须使用：\n            //session.commit();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }finally{\n            MyBatisUtil.closeSession(session);\n        }\n        return users;\n    }\n\n}</code></pre><h3><span id=\"测试类userdaotestjava\">测试类UserDaoTest.java</span></h3><pre><code>package com.yeyouluo.mybatis.druid.dao.test;\n\nimport java.util.List;\n\nimport com.yeyouluo.mybatis.druid.dao.IUserDao;\nimport com.yeyouluo.mybatis.druid.dao.impl.UserDao;\nimport com.yeyouluo.mybatis.druid.pojo.User;\n\npublic class UserDaoTest {\n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        IUserDao userDao = new UserDao();\n        List&lt;User&gt; users= userDao.findAllUsers();\n\n        for(User user : users){\n            System.out.println(user.toString());\n        }\n    }\n\n}</code></pre>","text":"学习网站广州前锋脏读,脏写把之前本该不存在的值读,写入数据库MyBatis将数据库与应用解耦的中间件.  [Figure] 1 环境Idea + maven3.3.9 + mysql5.72 开发过程建立数据表在本地mysql数据库中建立名为test的database，并建立us","link":"","raw":null,"photos":[],"categories":[{"name":"MyBatis","slug":"MyBatis","count":2,"path":"api/categories/MyBatis.json"}],"tags":[{"name":"MyBatis","slug":"MyBatis","count":2,"path":"api/tags/MyBatis.json"}]},{"title":"滴水穿石","slug":"constant-dripping-wears-away-a-stone","date":"2019-01-17T05:34:23.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/constant-dripping-wears-away-a-stone.json","excerpt":"","keywords":null,"cover":null,"content":"<h3><span id=\"constant-dripping-wears-away-a-stone\"><strong>Constant dripping wears away a stone.</strong></span></h3><blockquote>\n<p>有一些最好的选择是放在眼前.</p>\n<blockquote>\n<p>既然想要追随自己的欲望.</p>\n<blockquote>\n<p>那就让它一直存在,永远不消失.</p>\n</blockquote>\n<p>就像这样.</p>\n</blockquote>\n<p>始终爱着一切.</p>\n</blockquote>\n","text":"Constant dripping wears away a stone.有一些最好的选择是放在眼前.既然想要追随自己的欲望.那就让它一直存在,永远不消失.就像这样.始终爱着一切.","link":"","raw":null,"photos":[],"categories":[{"name":"随笔","slug":"随笔","count":28,"path":"api/categories/随笔.json"}],"tags":[]},{"title":"Java虚拟机","slug":"java-jvm","date":"2019-01-15T07:30:52.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/java-jvm.json","excerpt":"","keywords":null,"cover":"http://be-sunshine.cn/wp-content/uploads/2019/01/727331339920439686.jpg","content":"<h1><span id=\"jdk与jre和jvm关系\">JDK与JRE和JVM关系</span></h1><blockquote>\n<p>如图</p>\n</blockquote>\n<p><img src=\"http://be-sunshine.cn/wp-content/uploads/2019/01/727331339920439686.jpg\" alt></p>\n","text":"JDK与JRE和JVM关系如图 [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"Java虚拟机","slug":"Java虚拟机","count":1,"path":"api/categories/Java虚拟机.json"}],"tags":[{"name":"Java虚拟机","slug":"Java虚拟机","count":1,"path":"api/tags/Java虚拟机.json"}]},{"title":"近期在更","slug":"updating","date":"2019-01-15T04:09:32.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/updating.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>最后更新于 <code>2019/2/12</code></p>\n<blockquote>\n<p>本贴记录的是2019/1 以后所发的贴的整合</p>\n</blockquote>\n</blockquote>\n<h1><span id=\"闲时杂兴\">闲时杂兴</span></h1><hr>\n<h2><span id=\"gamemaker-studio-2-系列开坑\">《Gamemaker studio 2 系列开坑》</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/12/gamemaker-studio-2/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/12/gamemaker-studio-2/</a></p>\n<h2><span id=\"jeffe算法课程系列个人翻译\">JeffE算法课程系列个人翻译</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/04/08/jeffe-traslation/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/04/08/jeffe-traslation/</a></p>\n<hr>\n<h1><span id=\"技术\">技术</span></h1><hr>\n<h2><span id=\"1-神经网络nlp实现聊天机器人\">1 - 神经网络+NLP实现聊天机器人</span></h2><h3><span id=\"01-nlp与基础知识\">01 NLP与基础知识</span></h3><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/01/type-2/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/01/type-2/</a></p>\n<h3><span id=\"02-处理语料库\">02 处理语料库</span></h3><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/04/type-3/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/04/type-3/</a></p>\n<h3><span id=\"03-seq2seq\">03 Seq2Seq</span></h3><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/06/seq2seq/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/06/seq2seq/</a></p>\n<h2><span id=\"2-聊天室架构从0开始\">2 - 聊天室架构从0开始</span></h2><h3><span id=\"01-tcpampudp-基础知识\">01 TCP&amp;UDP 基础知识</span></h3><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/01/type-1/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/01/type-1/</a></p>\n<h3><span id=\"02-客户端udp请求服务端tcp端口\">02 客户端UDP请求服务端TCP端口</span></h3><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/14/ty2/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/14/ty2/</a></p>\n<h2><span id=\"3-java虚拟机\">3 - Java虚拟机</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/wp-admin/post.php?post=2384&action=edit\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/wp-admin/post.php?post=2384&amp;action=edit</a></p>\n<h2><span id=\"4-mybatis\">4 - MyBatis</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/18/mybatis/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/18/mybatis/</a></p>\n<h2><span id=\"5-maven\">5 - Maven</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2018/06/20/maven/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/06/20/maven/</a></p>\n<h2><span id=\"6-本地远程连接mysql\">6 - 本地远程连接Mysql</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/20/linke-mysql/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/20/linke-mysql/</a></p>\n<hr>\n<h1><span id=\"spring系列\">Spring系列</span></h1><hr>\n<h2><span id=\"单体应用-三层架构\">单体应用-三层架构</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/18/spring/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/18/spring/</a></p>\n<h2><span id=\"依赖注入和控制反转\">依赖注入和控制反转</span></h2><p>连接也是上面那个</p>\n<h2><span id=\"bean的装配\">Bean的装配</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/01/25/bean/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/01/25/bean/</a></p>\n<h2><span id=\"maven项目间依赖\">Maven项目间依赖</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/02/02/maven-modules/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/02/02/maven-modules/</a></p>\n<h2><span id=\"spring胶水框架粘贴druid\">Spring(胶水框架)粘贴Druid</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/02/03/spring-druid/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/02/03/spring-druid/</a></p>\n<h2><span id=\"spring-粘贴-mybatis\">Spring 粘贴 Mybatis</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/02/04/spring-cohesive-mybatis/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/02/04/spring-cohesive-mybatis/</a></p>\n<h2><span id=\"拦截器aop\">拦截器(AOP)</span></h2><p>Emmm…= =懒得写了.</p>\n<h2><span id=\"modelattribute\">@ModelAttribute</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/02/05/spring-annotation-modelattribute/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/02/05/spring-annotation-modelattribute/</a></p>\n<h2><span id=\"热部署\">热部署</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/02/05/asdasdas/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/02/05/asdasdas/</a></p>\n<h2><span id=\"spring-validation\">Spring Validation</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2019/02/09/spring-validation-spring/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/02/09/spring-validation-spring/</a></p>\n<hr>\n<h1><span id=\"闲时码题\">闲时码题</span></h1><hr>\n<h2><span id=\"1-lintcode1-11114\">1 - LintCode(1-11+114)</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2018/06/17/pl2-lintcode/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/06/17/pl2-lintcode/</a></p>\n<h2><span id=\"2-lintcode12-22\">2 - LintCode(12-22)</span></h2><p><a href=\"http://be-sunshine.cn/index.php/2019/02/10/lintcode12-22/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2019/02/10/lintcode12-22/</a></p>\n<hr>\n<h1><span id=\"整理java全部笔记\">整理Java(全部笔记)</span></h1><hr>\n<h2><span id=\"类与对象\">类与对象</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2018/01/12/java-class-object/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/12/java-class-object/</a></p>\n<p>包<br>-</p>\n<p><a href=\"http://be-sunshine.cn/index.php/2018/01/12/java-package/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/12/java-package/</a></p>\n<h2><span id=\"枚举类\">枚举类</span></h2><p><a href=\"http://be-sunshine.cn/index.php/2018/01/12/java-enum/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/12/java-enum/</a></p>\n<h2><span id=\"接口\">接口</span></h2><p><a href=\"http://be-sunshine.cn/index.php/2018/01/12/java-interface/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/12/java-interface/</a></p>\n<h2><span id=\"默认方法\">默认方法</span></h2><p><a href=\"http://be-sunshine.cn/index.php/2018/01/13/java-8-default/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/13/java-8-default/</a></p>\n<h2><span id=\"throwable\">Throwable</span></h2><p><a href=\"http://be-sunshine.cn/index.php/2018/01/15/java-throwable/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/15/java-throwable/</a></p>\n<h2><span id=\"java-io\">Java I/O</span></h2><p>:cyclone:<a href=\"http://be-sunshine.cn/index.php/2018/01/16/java-i-o/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/16/java-i-o/</a></p>\n<hr>\n<h1><span id=\"设计模式\">设计模式</span></h1><hr>\n<h2><span id=\"单例\">单例</span></h2><p><a href=\"http://be-sunshine.cn/index.php/2018/01/12/java-singleton/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/index.php/2018/01/12/java-singleton/</a></p>\n","text":"最后更新于 2019/2/12本贴记录的是2019/1 以后所发的贴的整合闲时杂兴《Gamemaker studio 2 系列开坑》:cyclone:http://be-sunshine.cn/index.php/2019/01/12/gamemaker-studio-2/Jef","link":"","raw":null,"photos":[],"categories":[{"name":"技术","slug":"技术","count":10,"path":"api/categories/技术.json"}],"tags":[{"name":"技术","slug":"技术","count":14,"path":"api/tags/技术.json"}]},{"title":"2019/1/15","slug":"2372","date":"2019-01-15T01:21:29.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/2372.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>昨天决战平安京一发免费单抽抽到了个史诗皮肤.今天狗子特写解锁，狗子超帅. :squirrel:</p>\n</blockquote>\n","text":"昨天决战平安京一发免费单抽抽到了个史诗皮肤.今天狗子特写解锁，狗子超帅. :squirrel:","link":"","raw":null,"photos":[],"categories":[{"name":"随笔","slug":"随笔","count":28,"path":"api/categories/随笔.json"}],"tags":[]},{"title":"聊天室架构从0开始 – 2 TCP+UDP 实现搜索IP与端口","slug":"ty2","date":"2019-01-14T14:17:07.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/ty2.json","excerpt":"","keywords":null,"cover":null,"content":"<h1><span id=\"root\">Root</span></h1><h1><span id=\"目录结构\">目录结构</span></h1><ul>\n<li>java<ul>\n<li>client<ul>\n<li>bean<ul>\n<li>ServerInfo.java(记录服务端所需信息model)</li>\n</ul>\n</li>\n<li>Client.java(客户端执行)</li>\n<li>ClientSearcher.java(客户端广播向服务端,并且接受服务端返回的地址)</li>\n<li>TCPClient.java(TCP连接客户端)</li>\n</ul>\n</li>\n<li>clink(工具包)<ul>\n<li>utils<ul>\n<li>ByteUtils.java</li>\n</ul>\n</li>\n<li>Clink.java</li>\n</ul>\n</li>\n<li>constants(常量)<ul>\n<li>TCPConstants.java</li>\n<li>UDPConstants.java</li>\n</ul>\n</li>\n<li>server<ul>\n<li>Server.java</li>\n<li>ServerProvider.java(服务提供者)</li>\n<li>TCPServer.java(TCP连接服务端)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"udp向服务端广播搜索tcp地址\">UDP向服务端广播搜索TCP地址</span></h2><blockquote>\n<p>老一套,先开启监听,再发送数据.</p>\n</blockquote>\n<h3><span id=\"方式和流程和传输数据结构\">方式和流程和传输数据结构</span></h3><blockquote>\n<p>方式,利用UDP独有的广播向服务端request地址和端口.并通过监听的端口等待服务端的回复. 报文格式:</p>\n<blockquote>\n<p>包裹层(HEADER,用于验证) IP - String 数据 - Byte[]</p>\n</blockquote>\n<p>数据格式:</p>\n<blockquote>\n<p>HEADER(验证字段,正式的数据要跳过这一段) cmd - 命令(1为客户端发送,2为服务端回送) LISTEN_PORT - 请求服务端后回复信息时的端口号,或客户端代连接服务端的端口号 - INT</p>\n</blockquote>\n</blockquote>\n<h3><span id=\"代码idea放在github上\">代码(IDEA,放在Github上)</span></h3><p><a href=\"https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5\" target=\"_blank\" rel=\"noopener\">https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5</a></p>\n<h2><span id=\"在上一步基础上建立tcp连接\">在上一步基础上建立TCP连接</span></h2><h3><span id=\"方式\">方式</span></h3><blockquote>\n<p>通过UDP获取到的服务端的IP和端口.</p>\n<blockquote>\n<p>用Socket连接之.</p>\n</blockquote>\n</blockquote>\n<h3><span id=\"通过键盘流输入\">通过键盘流输入</span></h3><pre><code>InputStream in=System.in;\nBufferedReader input=new BufferedReader(new InputStreamReader(in));\n//键盘读取一行\nString str=input.readLine();</code></pre><h3><span id=\"代码\">代码</span></h3><p><a href=\"https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-2/SocketDemo-L5\" target=\"_blank\" rel=\"noopener\">https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-2/SocketDemo-L5</a></p>\n<h2><span id=\"完成当前目标服务端与客户端发送与接收并行\">完成当前目标,服务端与客户端发送与接收并行</span></h2><h3><span id=\"方式\">方式</span></h3><blockquote>\n<p>将读写分开,读继承Thread,写重写Runnable. 广播： 用一个list记录,每当有客户端连接来时,就记录下那个客户端的Socket.</p>\n<blockquote>\n<p>遍历广播即可</p>\n</blockquote>\n</blockquote>\n<h3><span id=\"代码\">代码</span></h3><p><a href=\"https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-3/SocketDemo-L5\" target=\"_blank\" rel=\"noopener\">https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-3/SocketDemo-L5</a></p>\n","text":"Root目录结构javaclientbeanServerInfo.java(记录服务端所需信息model)Client.java(客户端执行)ClientSearcher.java(客户端广播向服务端,并且接受服务端返回的地址)TCPClient.java(TCP连接客户端)cl","link":"","raw":null,"photos":[],"categories":[{"name":"tcp","slug":"tcp","count":2,"path":"api/categories/tcp.json"},{"name":"网络编程","slug":"tcp/网络编程","count":2,"path":"api/categories/tcp/网络编程.json"},{"name":"随笔","slug":"tcp/网络编程/随笔","count":1,"path":"api/categories/tcp/网络编程/随笔.json"}],"tags":[{"name":"网络编程","slug":"网络编程","count":4,"path":"api/tags/网络编程.json"},{"name":"tcp","slug":"tcp","count":3,"path":"api/tags/tcp.json"}]},{"title":"Gamemaker studio 2 系列开坑","slug":"gamemaker-studio-2","date":"2019-01-12T13:52:23.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/gamemaker-studio-2.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>事先说好,这个坑不是2019今年的主要任务,但因为在之前对游戏制作的一些概念已经接触了许多(比如精灵,场景,碰撞检测等等),所以接触这个的压力并不是很大. 但仅做兴趣,目前有做独立游戏的想法,也有一个比较想要呈现出来的玩法和剧情,但因为快毕业刚开始学Java没多久(大学修.Net,不想做.Net),所以目前主要任务是学Java和做课程设计..</p>\n<blockquote>\n<p>目前仅仅以插块的方式进行填坑.慢慢完善</p>\n</blockquote>\n</blockquote>\n<h1><span id=\"egret龙骨导入到gms2中\">Egret龙骨导入到GMS2中</span></h1><h2><span id=\"龙骨是什么\">龙骨是什么?</span></h2><blockquote>\n<p>龙骨是方便制作动画的一种脚本+图片存储的制作方式. 以将精灵拆成几块+json文件存储动作作为基础来制作精灵的动作.</p>\n<blockquote>\n<p>精灵可以理解为场景中的可操作(你或电脑)物体.</p>\n</blockquote>\n</blockquote>\n<h2><span id=\"注意事项\">注意事项</span></h2><blockquote>\n<p>1.不可以直接导入,因为Egret的记录方式与GMS不同,即需要处理json文件以后才可以导入GMS中. 2.GML中,只有用draw_self才可以绘制龙骨动画,如果用draw_sprite_ext()函数来控制形变的话,就会只显示第一帧.</p>\n</blockquote>\n<h3><span id=\"软件\">软件</span></h3><p>龙骨软件在这里下载: <a href=\"http://dragonbones.com\" target=\"_blank\" rel=\"noopener\">http://dragonbones.com</a> 转换软件(将导出龙骨转换成GMS兼容格式)在这里下载: <a href=\"http://52gmk.com/thread-1835.htm\" target=\"_blank\" rel=\"noopener\">http://52gmk.com/thread-1835.htm</a></p>\n<h4><span id=\"软件使用方法\">软件使用方法</span></h4><blockquote>\n<p>1.先在龙骨软件中将制作好的龙骨</p>\n<blockquote>\n<p>文件 -&gt; 导出 -&gt; 数据类型设置为Spine -&gt; 保存(完成,注意调整比例)</p>\n</blockquote>\n<p>2.将转换文件copy到龙骨json所在文件夹,执行即可. 3.打开gms在项目中新建精灵,并import转换后的json文件即可. 4.添加物体,连接精灵,加入场景,运行后即可看到运动效果</p>\n</blockquote>\n","text":"事先说好,这个坑不是2019今年的主要任务,但因为在之前对游戏制作的一些概念已经接触了许多(比如精灵,场景,碰撞检测等等),所以接触这个的压力并不是很大. 但仅做兴趣,目前有做独立游戏的想法,也有一个比较想要呈现出来的玩法和剧情,但因为快毕业刚开始学Java没多久(大学修.Net","link":"","raw":null,"photos":[],"categories":[{"name":"Gamemaker","slug":"Gamemaker","count":1,"path":"api/categories/Gamemaker.json"},{"name":"游戏制作","slug":"Gamemaker/游戏制作","count":1,"path":"api/categories/Gamemaker/游戏制作.json"}],"tags":[{"name":"Gamemaker","slug":"Gamemaker","count":1,"path":"api/tags/Gamemaker.json"},{"name":"游戏制作","slug":"游戏制作","count":4,"path":"api/tags/游戏制作.json"}]},{"title":"Emmmm...","slug":"emmmm","date":"2019-01-11T12:23:56.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/emmmm.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>说一个笑话……千元机想训练聊天机器人的语料库…</p>\n</blockquote>\n","text":"说一个笑话……千元机想训练聊天机器人的语料库…","link":"","raw":null,"photos":[],"categories":[{"name":"随笔","slug":"随笔","count":28,"path":"api/categories/随笔.json"}],"tags":[]},{"title":"旁观，生活","slug":"e6-97-81-e8-a7-82-ef-bc-8c-e7-94-9f-e6-b4-bb","date":"2019-01-10T12:44:34.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/e6-97-81-e8-a7-82-ef-bc-8c-e7-94-9f-e6-b4-bb.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>若能让我开心，今后所做的一切，为你罢，帮你也罢，都行. 但若我坦然处事，得不到任何，只为成就，未来，生活，那才可悲. 且若开心二字，你若安好，便是晴天.你若得到你想要的生活，便是晴天.</p>\n</blockquote>\n","text":"若能让我开心，今后所做的一切，为你罢，帮你也罢，都行. 但若我坦然处事，得不到任何，只为成就，未来，生活，那才可悲. 且若开心二字，你若安好，便是晴天.你若得到你想要的生活，便是晴天.","link":"","raw":null,"photos":[],"categories":[{"name":"未分类","slug":"未分类","count":16,"path":"api/categories/未分类.json"}],"tags":[]},{"title":"2322","slug":"2322","date":"2019-01-10T06:21:34.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/2322.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>终于狠下心花了181买了Gamemaker studio2!!!(little (⊙︿⊙) little (<em>^▽^</em>))</p>\n</blockquote>\n<p>:yum: :yum: :yum:</p>\n","text":"终于狠下心花了181买了Gamemaker studio2!!!(little (⊙︿⊙) little (^▽^)):yum: :yum: :yum:","link":"","raw":null,"photos":[],"categories":[{"name":"未分类","slug":"未分类","count":16,"path":"api/categories/未分类.json"}],"tags":[]}]}