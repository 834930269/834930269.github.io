{"total":369,"pageSize":10,"pageCount":37,"data":[{"title":"Let's Gank Java - 8st","slug":"lets-gank-java-8st","date":"2017-11-20T12:56:05.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-8st.json","excerpt":"","keywords":null,"cover":"http://be-sunshine.cn/wp-content/uploads/2017/11/%E6%8D%95%E8%8E%B7-2.png","content":"<p>这次我们要用网络编程+正则+swing来实现获取百度显示关键字相关的功能. 首先,我们需要先在：<a href=\"http://hc.apache.org/downloads.cgi\" target=\"_blank\" rel=\"noopener\">http://hc.apache.org/downloads.cgi</a> 中下载 <code>4.5.3.zip</code>(根据平台选择,我这里选择的是Windows的)解压后,将lib中的所有jar包build到工程中,这样可以使用这个包内的网络操作相关方法. 然后就是另外一个问题,当我们使用String.replaceAll(regex,replacement)时,第一个参数为正则表达式,而第二个参数有三种情况: 1.替换目标正则得到的结果 2.${number} 符号表示目标正则得到的组(number为组数). 3.(暂时不知道,貌似是代表结束符) 官方文档: <strong>Note that backslashes () and dollar signs ($) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string.</strong></p>\n<pre><code>import org.apache.http.*;\nimport org.apache.http.client.*;\nimport org.apache.http.client.fluent.*;\nimport java.io.IOException;\nimport java.io.UnsupportedEncodingException;\nimport java.net.URLEncoder;\n\nimport java.awt.*;\nimport java.awt.event.KeyAdapter;\nimport java.awt.event.KeyEvent;\nimport javax.swing.JFrame;\nimport javax.swing.JList;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextField;\nimport javax.swing.SwingUtilities;\n\npublic class HttpSuggestion extends JFrame {\n    JTextField txtInput = new JTextField();\n    JList&lt;String&gt; lstSuggestion = new JList&lt;&gt;();\n\n    public HttpSuggestion(){\n        super(&quot;auto suggestion&quot;);//javax.swing.JFrame.JFrame(String title)\n        getContentPane().add(BorderLayout.NORTH,txtInput);\n        getContentPane().add(BorderLayout.CENTER,new JScrollPane(lstSuggestion));\n\n        setSize(300,200);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setVisible(true);\n\n        txtInput.addKeyListener(new KeyAdapter(){\n            public void keyPressed(KeyEvent arg0){\n                /*\n                  当按键被按下时调用。 \n                 Invoked when a key has been pressed.\n                 */\n                new Thread(()-&gt;{\n                    try{\n                        String word = txtInput.getText();\n                        String[] suggestion = fetchSuggestion(word);\n                        //还记得之前说的么,在swing中多线程的函数必须调用SwingUtilities.invokeLater执行\n                        SwingUtilities.invokeLater(()-&gt;{\n                            //每次获取新信息就更新一次JList\n                            lstSuggestion.removeAll();\n                            lstSuggestion.setListData(suggestion);\n                            lstSuggestion.updateUI();\n                        });\n                    }catch(Exception ex){\n                        ex.printStackTrace();\n                    }\n                }).start();\n            }\n        });\n\n        //每当JList被选中时,更新Text内的内容\n        lstSuggestion.addListSelectionListener(e -&gt; {\n            txtInput.setText(lstSuggestion.getSelectedValue());\n        });\n    }\n\n    public static void main(String[] args)\n        throws Exception\n    {\n        //String word=&quot;人&quot;;\n        //fetchSuggestion(word);\n\n        SwingUtilities.invokeLater(()-&gt;{\n            new HttpSuggestion();\n        });\n    }\n\n    public static String[] fetchSuggestion(String word)\n            throws UnsupportedEncodingException, \n            ClientProtocolException,\n            IOException\n    {\n        //安全机制\n        if(word == null || word.length() == 0)\n            return new String[0];\n\n        String url=&quot;http://suggestion.baidu.com/su?wd=&quot;\n                + URLEncoder.encode(word,&quot;utf-8&quot;);\n        url += &quot;&amp;rnd=&quot; + Math.random();\n        //输出拼接后的url\n        System.out.println(url);\n\n        String content = Request.Get(url)\n                .addHeader(&quot;cookie&quot;,&quot;BDUSS=Aadasdfsfee&quot;).execute()\n                .returnContent().asString();\n        //输出返回的值\n        System.out.println(content);\n        //最后会返回类似\n        // window.baidu.sug({q:&quot;人&quot;,p:false,s:[&quot;人体艺术&quot;,&quot;人体艺术图片&quot;,&quot;人人网&quot;,&quot;人体艺术摄影&quot;,&quot;人民币对美元汇率&quot;,&quot;人体&quot;,&quot;人人贷&quot;,&quot;人人影视&quot;]});\n        String[] sug = content.replaceAll(&quot;.*,s:\\\\[([^]]*)\\\\].*&quot;,&quot;$1&quot;)\n                .replaceAll(&quot;\\&quot;&quot;, &quot;&quot;).split(&quot;,&quot;);\n        //输出瞅一瞅每次都转换了什么\n        for(String a : sug){\n            System.out.println(a);\n        }\n        String ss=content.replaceAll(&quot;.*,s:\\\\[([^]]*)\\\\].*&quot;,&quot;$1&quot;);\n        System.out.println(ss);\n        return sug;\n    }\n}</code></pre><p>结果: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/11/捕获-2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/11/%E6%8D%95%E8%8E%B7-2.png\" alt></a></p>\n","text":"这次我们要用网络编程+正则+swing来实现获取百度显示关键字相关的功能. 首先,我们需要先在：http://hc.apache.org/downloads.cgi 中下载 4.5.3.zip(根据平台选择,我这里选择的是Windows的)解压后,将lib中的所有jar包buil","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"},{"name":"网络编程","slug":"Java/网络编程","count":1,"path":"api/categories/Java/网络编程.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"},{"name":"网络编程","slug":"网络编程","count":4,"path":"api/tags/网络编程.json"}]},{"title":"AOJ \tALDS1_11_D Connected Components","slug":"1464","date":"2017-11-19T13:15:58.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/1464.json","excerpt":"","keywords":null,"cover":null,"content":"<p>MathJax.Hub.Config({ tex2jax: { inlineMath: [[“$”,”$”], [“\\(“,”\\)“]], processEscapes: true }});</p>\n<h1 id=\"Connected-Components\"><a href=\"#Connected-Components\" class=\"headerlink\" title=\"Connected Components\"></a>Connected Components</h1><p>Write a program which reads relations in a SNS (Social Network Service), and judges that given pairs of users are reachable each other through the network.</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>In the first line, two integer $n$ and $m$ are given. $n$ is the number of users in the SNS and $m$ is the number of relations in the SNS. The users in the SNS are identified by IDs $0, 1, …, n-1$. In the following $m$ lines, the relations are given. Each relation is given by two integers $s$ and $t$ that represents $s$ and $t$ are friends (and reachable each other). In the next line, the number of queries $q$ is given. In the following $q$ lines, $q$ queries are given respectively. Each query consists of two integers $s$ and $t$ separated by a space character.</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>For each query, print “yes” if $t$ is reachable from $s$ through the social network, “no” otherwise.</p>\n<h2 id=\"Constraints\"><a href=\"#Constraints\" class=\"headerlink\" title=\"Constraints\"></a>Constraints</h2><ul>\n<li>$2 \\leq n \\leq 100,000$</li>\n<li>$0 \\leq m \\leq 100,000$</li>\n<li>$1 \\leq q \\leq 10,000$</li>\n</ul>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><p>10 9<br>0 1<br>0 2<br>3 4<br>5 7<br>5 6<br>6 7<br>6 8<br>7 8<br>8 9<br>3<br>0 1<br>5 9<br>1 3</p>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><p>yes<br>yes<br>no</p>\n<p>求连通分量,对每一个连通分量进行染色.不在同一个联通分量的肯定无法联系.</p>\n<pre><code>#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#include&lt;vector&gt;\n#include&lt;stack&gt;\n#include&lt;cstdio&gt;\nusing namespace std;\nconst int maxn=100000;\nconst int NIL=-1;\nint n;\nvector&lt;int&gt; G[maxn];\nint color[maxn];\n\nvoid dfs(int r,int c){\n    stack&lt;int&gt; S;\n    S.push(r);\n    color[r]=c;\n    while(!S.empty()){\n        int u=S.top();S.pop();\n        for(int i=0;i&lt;G[u].size();++i){\n            int v=G[u][i];\n            if(color[v]==NIL){\n                color[v]=c;\n                S.push(v);\n            }\n        }\n    }\n}\n\nvoid setColor(){\n    int id=1;\n    for(int i=0;i&lt;n;++i){\n        color[i]=NIL;\n    }\n    for(int u=0;u&lt;n;++u){\n        if(color[u]==NIL) dfs(u,id++);\n    }\n}\n\nint main(){\n    int s,t,m,q;\n\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=0;i&lt;m;++i){\n        cin&gt;&gt;s&gt;&gt;t;\n        G[s].push_back(t);\n        G[t].push_back(s);\n    }\n\n    setColor();\n\n    cin&gt;&gt;q;\n    for(int i=0;i&lt;q;++i){\n        cin&gt;&gt;s&gt;&gt;t;\n        if(color[s]==color[t]){\n            puts(&quot;yes&quot;);\n        }else{\n            puts(&quot;no&quot;);\n        }\n    }\n\n    return 0;\n}</code></pre>","text":"MathJax.Hub.Config({ tex2jax: { inlineMath: [[“$”,”$”], [“\\(“,”\\)“]], processEscapes: true }});Connected ComponentsWrite a program which rea","link":"","raw":null,"photos":[],"categories":[{"name":"AOJ","slug":"AOJ","count":5,"path":"api/categories/AOJ.json"},{"name":"图论","slug":"AOJ/图论","count":1,"path":"api/categories/AOJ/图论.json"},{"name":"连通分量","slug":"AOJ/图论/连通分量","count":1,"path":"api/categories/AOJ/图论/连通分量.json"}],"tags":[{"name":"AOJ","slug":"AOJ","count":5,"path":"api/tags/AOJ.json"},{"name":"图论","slug":"图论","count":6,"path":"api/tags/图论.json"},{"name":"连通分量","slug":"连通分量","count":2,"path":"api/tags/连通分量.json"}]},{"title":"AOJ DPL_3 B Largest Rectangle","slug":"aoj-dpl-3-b-largest-rectangle","date":"2017-11-19T08:22:23.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/aoj-dpl-3-b-largest-rectangle.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Largest-Rectangle\"><a href=\"#Largest-Rectangle\" class=\"headerlink\" title=\"Largest Rectangle\"></a>Largest Rectangle</h1><p>Given a matrix (H × W) which contains only 1 and 0, find the area of the largest rectangle which only contains 0s.</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>H W<br>c1,1 c1,2 … c1,W<br>c2,1 c2,2 … c2,W<br>:<br>cH,1 cH,2 … cH,W</p>\n<p>In the first line, two integers H and W separated by a space character are given. In the following H lines, ci,j, elements of the H × W matrix, are given.</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>Print the area (the number of 0s) of the largest rectangle.</p>\n<h2 id=\"Constraints\"><a href=\"#Constraints\" class=\"headerlink\" title=\"Constraints\"></a>Constraints</h2><ul>\n<li>1 ≤ H, W ≤ 1,400</li>\n</ul>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><p>4 5<br>0 0 1 0 0<br>1 0 0 0 0<br>0 0 0 1 0<br>0 0 0 1 0</p>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><p>6</p>\n<p>最大子矩阵(直方图)的变形. 首先需要把每一行都预处理成<code>距离第0行</code>的高度的表.然后每一行都相当于一个直方图,对每个直方图求可以围成的所有矩形面积,用<code>maxv维护</code>最大矩形的值.</p>\n<pre><code>例 处理前:\n    0 0 1 0 0\n    1 0 0 0 0\n    0 0 0 1 0\n    0 0 0 1 0\n\nAfter 处理后:\n    1 1 0 1 1\n    0 2 1 2 2\n    1 3 2 0 3\n    2 4 3 0 4</code></pre><p>Code:</p>\n<pre><code>#include&lt;cstdio&gt;\n#include&lt;stack&gt;\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#define MAX 1400\nusing namespace std;\n\nstruct Rectangle { int height; int pos; };\n\nint getLargestRectangle(int size,int buffer[]){\n    stack&lt;Rectangle&gt; S;\n    int maxv=0;\n    //通过后一位向前面的计算\n    //这里用到的DP大概是无参数getLargestRectangle里面的预处理\n    //这里用到的更多是思维吧,对每一行进行计算,最后求出最大值.\n    buffer[size]=0;\n\n    for(int i=0;i&lt;=size;++i){\n        Rectangle rect;\n        rect.height=buffer[i];\n        rect.pos=i;\n        if(S.empty()){\n            S.push(rect);\n        }else{\n            if(S.top().height &lt; rect.height){\n                S.push(rect);\n            }else if(S.top().height &gt; rect.height){\n                int target=i;\n                while(!S.empty() &amp;&amp; S.top().height &gt;= rect.height){\n                    Rectangle pre=S.top();S.pop();\n                    int area=pre.height*(i-pre.pos);\n                    maxv=max(maxv,area);\n                    target=pre.pos;\n                }\n                rect.pos=target;\n                S.push(rect);\n            }\n        }\n    }\n    //printf(&quot;\\nmaxv: %d\\n&quot;,maxv);\n    return maxv;\n}\n\nint H,W;\nint buffer[MAX][MAX];\nint T[MAX][MAX];\n\nint getLargestRectangle(){\n    //预处理每个点离他最近的上边未被污染地板的高度\n    for(int j=0;j&lt;W;++j){\n        for(int i=0;i&lt;H;++i){\n            if(buffer[i][j]){\n                T[i][j]=0;\n            }else{\n                T[i][j]=(i&gt;0)?T[i-1][j]+1:1;\n            }\n        }\n    }\n    /*\n    例:\n        0 0 1 0 0\n        1 0 0 0 0\n        0 0 0 1 0\n        0 0 0 1 0\n\n    After:\n        1 1 0 1 1\n        0 2 1 2 2\n        1 3 2 0 3\n        2 4 3 0 4\n    */\n    int maxv=0;\n    //传入两个值 W,列数,处理后T[i]第i行的首地址\n    for(int i=0;i&lt;H;++i){\n        maxv=max(maxv,getLargestRectangle(W,T[i]));\n    }\n\n    return maxv;\n}\n\nint main(){\n    scanf(&quot;%d %d&quot;,&amp;H,&amp;W);\n    for(int i=0;i&lt;H;++i){\n        for(int j=0;j&lt;W;++j){\n            scanf(&quot;%d&quot;,&amp;buffer[i][j]);\n        }\n    }\n\n    printf(&quot;%d\\n&quot;,getLargestRectangle());\n    return 0;\n}</code></pre>","text":"Largest RectangleGiven a matrix (H × W) which contains only 1 and 0, find the area of the largest rectangle which only contains 0s.InputH W<","link":"","raw":null,"photos":[],"categories":[{"name":"AOJ","slug":"AOJ","count":5,"path":"api/categories/AOJ.json"},{"name":"动态规划","slug":"AOJ/动态规划","count":1,"path":"api/categories/AOJ/动态规划.json"}],"tags":[{"name":"AOJ","slug":"AOJ","count":5,"path":"api/tags/AOJ.json"},{"name":"动态规划","slug":"动态规划","count":24,"path":"api/tags/动态规划.json"}]},{"title":"Let's Gank Java - 7st","slug":"lets-gank-java-7st","date":"2017-11-17T14:09:00.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-7st.json","excerpt":"","keywords":null,"cover":"http://be-sunshine.cn/wp-content/uploads/2017/11/%E6%8D%95%E8%8E%B7-1.png","content":"<p>Action : Thread Unit. Demo:</p>\n<pre><code>import java.util.*;\nimport java.text.*;\npublic class ThreadDemo {\n    public static void main(String[] args){\n        Counter c1 = new Counter(1);\n        Thread t1=new Thread(c1);\n        Thread t2=new Thread(c1);\n        Thread t3=new Thread(c1);\n        Counter c2=new Counter(2);\n        Thread t4=new Thread(c2);\n        Thread t5=new Thread(c2);\n        Thread t6=new Thread(c2);\n        TimeDisplay timer = new TimeDisplay();\n        Thread t7 = new Thread(timer);\n        t1.start();\n        t2.start();\n        t3.start();\n        t4.start();\n        t5.start();\n        t6.start();\n        t7.start();\n    }\n}\n\nclass Counter implements Runnable{\n    int id;\n    Counter(int id){//构造函数,为count指定id\n        this.id = id;\n    }\n\n    public void run(){//重写runnable的run()\n        int i=0;\n        while(i++&lt;10){\n            System.out.println(&quot;ID: &quot;+id+&quot; No.&quot; + i);\n            try{\n                Thread.sleep(10);\n            }catch(InterruptedException e){}\n        }\n    }\n}\n\nclass TimeDisplay implements Runnable{\n    public void run(){//重写runnable的run()\n        int i=0;\n        while(i++&lt;=3){\n            System.out.println(\n                    new SimpleDateFormat().format(new Date()));\n            try{\n                Thread.sleep(40);\n            }catch(InterruptedException e){}\n        }\n    }\n}</code></pre><p>Output:</p>\n<pre><code>ID: 1 No.1\nID: 1 No.1\nID: 2 No.1\nID: 2 No.1\nID: 2 No.1\nID: 1 No.1\nID: 2 No.2\nID: 1 No.2\nID: 2 No.2\nID: 1 No.2\nID: 1 No.2\nID: 2 No.2\nID: 2 No.3\nID: 1 No.3\nID: 2 No.3\nID: 1 No.3\nID: 1 No.3\nID: 2 No.3\nID: 1 No.4\nID: 2 No.4\nID: 2 No.4\nID: 1 No.4\nID: 1 No.4\nID: 2 No.4\nID: 2 No.5\nID: 1 No.5\nID: 1 No.5\nID: 1 No.5\nID: 2 No.5\nID: 2 No.5\nID: 1 No.6\nID: 1 No.6\nID: 1 No.6\nID: 2 No.6\nID: 2 No.6\nID: 2 No.6\nID: 1 No.7\nID: 1 No.7\nID: 2 No.7\nID: 1 No.7\nID: 2 No.7\nID: 2 No.7\nID: 1 No.8\nID: 2 No.8\nID: 2 No.8\nID: 1 No.8\nID: 1 No.8\nID: 2 No.8\n17-11-18 下午1:50\nID: 1 No.9\nID: 2 No.9\nID: 1 No.9\nID: 1 No.9\nID: 2 No.9\nID: 2 No.9\nID: 2 No.10\nID: 1 No.10\nID: 2 No.10\nID: 1 No.10\nID: 1 No.10\nID: 2 No.10\n17-11-18 下午1:50\n17-11-18 下午1:50\n17-11-18 下午1:50</code></pre><p>可以看到他们并不是一个运行完才继续运行下一个的.这就是多线程. Demo 2: 多线程下载文件</p>\n<pre><code>import java.util.*;\nimport java.io.*;\nimport java.net.*;\npublic class ThreadDownload {\n    public static void main(String[] args)\n        throws IOException\n    {\n        //网址变量\n        final URL[] urls = {\n                new URL(&quot;http://www.pku.edu.cn&quot;),\n                new URL(&quot;http://www.baidu.com&quot;),\n                new URL(&quot;http://www.sina.com.cn&quot;),\n                new URL(&quot;http://www.dstang.com&quot;)\n        };\n        //下载完成后存储的文件名\n        final String[] files = {\n                &quot;pku.htm&quot;, \n                &quot;baidu.htm&quot;,\n                &quot;sina.htm&quot;, \n                &quot;study.htm&quot;,\n        };\n\n        for(int i=0;i&lt;urls.length;++i){\n            final int idx=i;\n            new Thread(()-&gt;{\n                try{\n                    System.out.println(urls[idx]);\n                    download( urls[idx], files[idx]);\n                }catch(Exception ex){\n                    ex.printStackTrace();\n                }\n            }).start();\n        }\n    }\n    static void download(URL url,String file)\n        throws IOException\n    {\n        //创建度入流和写入文件流\n        try(InputStream input=url.openStream();\n            OutputStream output = new FileOutputStream(\n            file))\n        {\n            //每次存入的byte数组\n            byte[] data = new byte[1024];\n            int length;\n            //存入，第二个参数offset表示从data的下标为几开始写入\n            while((length=input.read(data))!=-1){\n                output.write(data, 0, length);\n            }\n        }\n    }\n}</code></pre><p>Output:</p>\n<pre><code>http://www.pku.edu.cn\nhttp://www.baidu.com\nhttp://www.sina.com.cn\nhttp://www.dstang.com\n\n文件在主目录下.</code></pre><p>Demo 3: 多线程画图 结果图: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/11/捕获-1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/11/%E6%8D%95%E8%8E%B7-1.png\" alt></a> Code:</p>\n<pre><code>import java.awt.*;\nimport java.applet.*;\nimport java.awt.event.*;\nimport javax.swing.*;\npublic class ThreadDrawJ extends JFrame {\n    MovingShape [] shapes;\n    public void init(){\n        setLayout(null);\n        setSize(426,266);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setVisible(true);\n\n        shapes = new MovingShape[10];\n        for(int i=0;i&lt;shapes.length;++i){\n            shapes[i] = new MovingShape(this);\n            shapes[i].start();\n        }\n    }\n    public static void main(String [] args) //加入main,使之能当Application应用\n    {\n        ThreadDrawJ f = new ThreadDrawJ();\n        f.init();\n    }\n}\n\nclass MovingShape extends Thread{\n    private int size = 100;\n    private int speed=10;\n    private Color color;\n    private int type;\n    private int x,y,w,h,dx,dy;\n    protected java.awt.Component app;\n\n    public boolean stopped;\n\n    MovingShape(JFrame app){\n        this.app=app;\n        x=(int)(Math.random()*app.getSize().width);\n        y=(int)(Math.random()*app.getSize().height);\n        w=(int)(Math.random()*size);\n        h=(int)(Math.random()*size);\n        dx = (int)(Math.random() * speed );\n        dy = (int)(Math.random() * speed );\n        color = new Color ( \n            (int)(Math.random()*128+128), \n            (int)(Math.random()*128+128),\n            (int)(Math.random()*128+128) );\n        type = (int)(Math.random() * 3 );\n    }\n\n    public void run(){\n        while(true){\n            if(stopped) break;\n\n            //draw(),多线程方法必须卸载invoke中\n            SwingUtilities.invokeLater( ()-&gt;{\n                draw(); \n            });\n\n            try{ Thread.sleep(130);}catch(InterruptedException e){}\n        }\n    }\n    void draw(){\n        x+=dx;\n        y+=dy;\n        //控制边界\n        if(x&lt;0 || x+w&gt;app.getSize().width) dx=-dx;\n        if(y&lt;0 || y+h&gt;app.getSize().height) dy=-dy;\n\n        Graphics g=app.getGraphics();\n        switch(type){\n            case 0:\n                //矩形\n                g.setColor(color);\n                g.fillRect( x,y,w,h ); \n                g.setColor( Color.black );\n                g.drawRect( x,y,w,h );\n                break;\n            case 1:\n                //椭圆\n                g.setColor(color);\n                g.fillOval( x,y,w,h ); \n                g.setColor( Color.black );\n                g.drawOval( x,y,w,h );\n                break;\n            case 2:\n                //圆角矩形\n                g.setColor(color);\n                g.fillRoundRect( x,y,w,h,w/5,h/5); \n                g.setColor( Color.black );\n                g.drawRoundRect( x,y,w,h,w/5,h/5 );\n                break;\n        }\n    }\n}</code></pre><p>针对线程全局变量不会因线程执行而改变混乱. JDK 1.5+ 提供了原子变量,以及并发的泛型类型.</p>\n","text":"Action : Thread Unit. Demo:import java.util.*;import java.text.*;public class ThreadDemo {    public static void main(String[] args){       ","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]},{"title":"Let's Gank Java - 6st","slug":"lets-gank-java-6st","date":"2017-11-17T13:14:56.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-6st.json","excerpt":"","keywords":null,"cover":null,"content":"<p>We can use the typeof <em>string</em> to instance a <em>object</em>. Demo</p>\n<pre><code>import java.util.*;\npublic class GeneraicMethod {\n    public static void main(String[] args){\n        Date date=BeanUtil.getInstance(&quot;java.util.Date&quot;);\n        System.out.println(date);\n    }\n\n}\n\nclass BeanUtil{//泛型方法\n    //&lt;T&gt; T 反馈类型//参数用到的T都需要放在函数前面\n    public static &lt;T&gt; T getInstance( String clzName ){\n        try{\n            Class c = Class.forName(clzName);\n            return (T) c.newInstance();\n        }\n        catch(ClassNotFoundException ex){}\n        catch (InstantiationException ex){}\n        catch (IllegalAccessException ex){}\n        return null;\n    }\n}</code></pre><p>Demo2</p>\n<pre><code>import java.util.*;\npublic class GenericTreeClass {\n    public static void main(String[] args){\n        TNode&lt;String&gt; t = new TNode&lt;&gt;(&quot;Roo&quot;);\n        t.add(&quot;Left&quot;); t.add(&quot;Middle&quot;);\n        t.getChild(0).add(&quot;aaa&quot;);\n        t.getChild(0).add(&quot;bbb&quot;);\n        t.traverse();\n    }\n}\n\nclass TNode&lt;T&gt;{\n    private T value;\n    private ArrayList&lt;TNode&lt;T&gt;&gt; children = new ArrayList&lt;&gt;();\n\n    TNode(T v){ this.value= v; }//构造函数\n    public T getValue(){\n        return this.value;\n    }\n    public void add(T v){\n        TNode&lt;T&gt; child=new TNode&lt;&gt;(v);\n        this.children.add(child);\n    }\n    public TNode&lt;T&gt; getChild(int i){\n        if((i&lt;0) || (i&gt;this.children.size())) return null;\n        return (TNode&lt;T&gt;)this.children.get(i);\n    }\n    public void traverse() {\n        //查找所有\n        System.out.println(this.value);\n        for (TNode child : this.children)\n            child.traverse();\n    }\n}</code></pre><p>Generaic Method Limitation.</p>\n<pre><code>reverse&lt;List&lt;?&gt; list&gt;//限定为Object(无限定)\naddAll(Collection&lt;? extends E&gt; col)//extends\nfill(List&lt;? super T&gt; list,T obj)//super</code></pre>","text":"We can use the typeof string to instance a object. Demoimport java.util.*;public class GeneraicMethod {    public static void main(String[] ","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]},{"title":"Let's Gank Java - 5st","slug":"lets-gank-java-5st","date":"2017-11-15T09:27:26.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-5st.json","excerpt":"","keywords":null,"cover":"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ%E6%88%AA%E5%9B%BE20171115171542.jpg","content":"<p>1.String Methods</p>\n<pre><code>class TestStringMethod\n{\n    public static void main(String[] args) \n    {\n        String s = new String( &quot;Hello World&quot; );\n\n        System.out.println( s.length() );\n        System.out.println( s.indexOf(&apos;o&apos;) );\n        System.out.println( s.indexOf(&quot;He&quot;) );\n        System.out.println( s.startsWith(&quot;He&quot;) );\n        System.out.println( s.equals(&quot;Hello world&quot;) );\n        System.out.println( s.equalsIgnoreCase(&quot;Hello world&quot;) );\n        System.out.println( s.compareTo(&quot;Hello Java&quot;) );\n        System.out.println( s.charAt(1) );\n        System.out.println( s.substring(0,2) );\n        System.out.println( s.substring(2) );\n        System.out.println( s.concat(&quot;!!!&quot;) );\n        System.out.println( s.trim() );\n        System.out.println( s.toUpperCase() );\n        System.out.println( s.toLowerCase() );\n        System.out.println( s.replace(&apos;o&apos;, &apos;x&apos; ) );\n\n        System.out.println( s );  //注意，s本身没有改变\n    }\n}</code></pre><p><a href=\"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ截图20171115171542.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ%E6%88%AA%E5%9B%BE20171115171542.jpg\" alt></a> 比较字符串相加和直接将字符串添加至尾部的时间: 第一个是字符串相加,在Java中,每次字符串相加都会生成一个StringBuilder,再append,最后tostring(). 而第二种方法直接append(),tostring().</p>\n<pre><code>import java.util.*;\nclass StringAndStringBuffer \n{\n    public static void main(String[] args) \n    {\n        String a = &quot;a&quot;;\n        String s = &quot;&quot;;\n        StringBuffer sb = new StringBuffer();\n\n        final int N = 10000;\n\n        long t0 = System.currentTimeMillis();\n        for( int i=0; i&lt;N; i++) s+=a;//每次相加都会新生成一个StringBuffer类\n        long t1 = System.currentTimeMillis();\n        for( int i=0; i&lt;N; i++) sb.append(a);//不生成SB类\n        long t2 = System.currentTimeMillis();\n\n        System.out.println(t1-t0);\n        System.out.println(t2-t1);\n    }\n}</code></pre><p><a href=\"http://be-sunshine.cn/wp-content/uploads/2017/11/518.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/11/518.jpg\" alt></a> StringTokenizer(字符串截取) <code>st.hasMoreTokens()</code>:存在下一个子串 <code>st.nextToken()</code>:下一个子串 <code>Double.parseDouble(string);</code>:将string转换为double 基本用法<code>StringTokenizer st = new StringTokenizer(string, 格式化字符(比如&quot; &quot;));</code></p>\n<pre><code>import java.util.*;\nclass TestStringTokenizer \n{\n    public static void main(String[] args) \n    {\n        StringTokenizer st = new StringTokenizer(&quot;this is a test&quot;, &quot; &quot;);\n        while (st.hasMoreTokens()) {\n            System.out.println(st.nextToken());\n        }\n        st = new StringTokenizer(&quot;253,197,546&quot;, &quot;,&quot;);\n        double sum = 0;\n        while (st.hasMoreTokens()) {\n            sum += Double.parseDouble(st.nextToken());\n        }\n        System.out.println( sum );\n    }\n}</code></pre><p><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/11/522.jpg\" alt=\"http://be-sunshine.cn/wp-content/uploads/2017/11/522.jpg\"></p>\n","text":"1.String Methodsclass TestStringMethod{    public static void main(String[] args)     {        String s = new String( &quot;Hello World&quot","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]},{"title":"Let's Gank Java - 4st","slug":"lets-gank-java-4","date":"2017-11-15T05:28:57.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-4.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Throw Exception.</p>\n<pre><code>public class ExceptionForNumber\n{\n    private static String output=&quot;&quot;;\n    public static void main(String[] args){\n        foo(1);//exceptionally\n        System.out.println(output);\n        output=&quot;&quot;;\n        foo(0);//normal\n        System.out.println(output);\n    }\n\n    public static void foo(int i){\n        try{\n            if(i==1){\n                throw new Exception();\n            }\n            output+=&quot;1&quot;;\n        }catch(Exception e){\n            output+=&quot;2&quot;;\n            return;\n        }finally{\n            output+=&quot;3&quot;;\n        }\n        output+=&quot;4&quot;;\n    }\n}</code></pre><p>For instance, <code>foo(0)</code> result is <code>&quot;134&quot;</code> and <code>foo(1)</code> is <code>&quot;23&quot;</code>.</p>\n","text":"Throw Exception.public class ExceptionForNumber{    private static String output=&quot;&quot;;    public static void main(String[] args){   ","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]},{"title":"Let's Gank Java - 3st","slug":"lets-gank-java-3st","date":"2017-11-12T12:13:01.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-3st.json","excerpt":"","keywords":null,"cover":"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ%E6%88%AA%E5%9B%BE20171112201102.jpg","content":"<p>Draw Circle.</p>\n<pre><code>import java.awt.*;\nimport javax.swing.*;\n\npublic class Circle99 extends JFrame{\n    public static void main(String args[]){\n        JFrame frame = new Circle99();\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.setSize(600,600);\n        frame.setVisible(true);\n    }\n    public void paint(Graphics g){\n        g.drawString(&quot;circle 99&quot;,20,20);\n        int x0=getSize().width&gt;&gt;1;\n        int y0=getSize().height&gt;&gt;1;\n\n        for(int r=0;r&lt;getSize().height/2;r+=10){\n            g.drawOval(x0,y0,r*2,r*2);//前两个参数是圆左上角的坐标\n        }\n        for(int r=0;r&lt;getSize().height/2;r+=10){\n            g.drawOval(0,0,r*2,r*2);\n        }\n    }\n}</code></pre><h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p><a href=\"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ截图20171112201102.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ%E6%88%AA%E5%9B%BE20171112201102.jpg\" alt></a></p>\n","text":"Draw Circle.import java.awt.*;import javax.swing.*;public class Circle99 extends JFrame{    public static void main(String args[]){        J","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]},{"title":"Let's Gank Java - 2st","slug":"lets-gank-java-2st","date":"2017-11-12T09:44:14.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-2st.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Bitwise Operation.</p>\n<pre><code>public class BitwiseOperators\n{\n    public static void main(String args[]){\n        int a = 0b1100;//二进制\n        int b = 0b1010;\n        print(&quot;a  &quot;,a);\n        print(&quot;a&amp;b&quot;,a&amp;b);\n        print(&quot;a|b&quot;,a|b);\n        print(&quot;a^b&quot;,a^b);\n        print(&quot;~a&quot;,~a);\n        print(&quot;a&lt;&lt;2&quot;,a&lt;&lt;2);\n        print(&quot;a&gt;&gt;2&quot;,a&gt;&gt;2);\n        print(&quot;无符号移位运算: a&gt;&gt;&gt;2&quot;,a&gt;&gt;&gt;2);\n    }\n    static void print(String prefix,int n){\n        String s = Integer.toBinaryString(n);//转二进制\n        while(s.length()&lt;4) s=&quot;0&quot;+s;//补0\n        System.out.println(prefix+&quot; &quot;+s);\n    }\n}</code></pre><p><code>&gt;&gt;&gt;</code> means unsigned bitwise operation.</p>\n","text":"Bitwise Operation.public class BitwiseOperators{    public static void main(String args[]){        int a = 0b1100;//二进制        int b = 0b101","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]},{"title":"Let's Gank Java - 1st","slug":"lets-gank-java-1st","date":"2017-11-12T08:51:22.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/lets-gank-java-1st.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Graphical interfaces Output and Input.</p>\n<pre><code>import java.awt.*;\nimport java.awt.event.*;\nimport javax.swing.*;\n\npublic class AppGraphInOut{\n    public static void main(String args[]){\n        new AppFrame();\n    }\n}\nclass AppFrame extends JFrame\n{\n    JTextField in = new JTextField(10);\n    JButton btn = new JButton(&quot;求平方&quot;);\n    JLabel out = new JLabel(&quot;用于显示结果的标签&quot;);\n\n    public AppFrame(){\n        setLayout(new FlowLayout());\n        getContentPane().add(in);\n        getContentPane().add(btn);\n        getContentPane().add(out);\n        btn.addActionListener(new BtnActionAdapter());\n        //事件监听对象\n        setSize(400,100);\n        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n        setVisible(true);\n    }\n    class BtnActionAdapter implements ActionListener\n    {\n        public void actionPerformed(ActionEvent e){\n            String s = in.getText();\n            double d = Double.parseDouble(s);\n            double sq = d*d;\n            out.setText(d+&quot;的平方是: &quot;+sq);\n        }\n    }\n}</code></pre><p><code>implements</code> is meaning interface. Your need to implement a method - <code>actionPerformed(ActionEvent e)</code> in this interface. <code>getContentPane</code> is Window object?(Maybe…) 2st <code>Java8 : Lambda</code> You can use lambda expression to solve it.</p>\n<pre><code>import java.awt.*;\nimport java.awt.event.*;\nimport javax.swing.*;\n\npublic class AppGraphInOut{\n    public static void main(String args[]){\n        new AppFrame();\n    }\n}\nclass AppFrame extends JFrame\n{\n    JTextField in = new JTextField(10);\n    JButton btn = new JButton(&quot;求平方&quot;);\n    JLabel out = new JLabel(&quot;用于显示结果的标签&quot;);\n\n    public AppFrame(){\n        setLayout(new FlowLayout());\n        getContentPane().add(in);\n        getContentPane().add(btn);\n        getContentPane().add(out);\n        btn.addActionListener(e-&gt;{\n            String s = in.getText();\n            double d = Double.parseDouble(s);\n            double sq = d*d;\n            out.setText(d+&quot;的平方是: &quot;+sq);\n        });\n        setSize(400,100);\n        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n        setVisible(true);\n    }\n}</code></pre>","text":"Graphical interfaces Output and Input.import java.awt.*;import java.awt.event.*;import javax.swing.*;public class AppGraphInOut{    public s","link":"","raw":null,"photos":[],"categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]}]}