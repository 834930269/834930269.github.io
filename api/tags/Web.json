{"name":"Web","slug":"Web","count":7,"postlist":[{"title":"ASP.NET MVC Filter 登录限制-类Python装饰器","slug":"asp-net-mvc-filter-python","date":"2017-12-10T10:12:21.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/asp-net-mvc-filter-python.json","excerpt":"","keywords":null,"cover":null,"content":"<p>想必学过Flask编写Web服务端的都对 <strong>@login_required</strong> 很熟悉吧,一个语句决定了访问者是否有权限访问当前页面. 那么疑问来了,ASP.NET MVC中是否有类似于Python装饰器一类的语法呢? 答案是有的,如果仅仅是权限以及登录确认的判断的话,ASP.NET MVC 有一个 <strong>AuthorizeAttribute</strong> 类,这个类的结构以及用法可以替代 <strong>@login_required</strong>,接下来编写实现代码. 首先新建一个ASP.NET MVC 项目,新建一个Filter文件夹,该文件夹下存放网站允许访问一类的类. 新建<strong>MyAuthorizeAttribute</strong>类,继承<strong>AuthorizeAttribute</strong> 类,重写AuthorizeCore和HandleUnauthorizedRequest方法. 第一个方法是授权检察,第二个方法是权限判断失败时执行的操作. 接下来实现当时间分钟是偶数时允许登录.</p>\n<pre><code>//MyAuthorizeAttribute.cs\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\n\nnamespace WebApplication3.Filter\n{\n    public class MyAuthorizeAttribute :AuthorizeAttribute\n    {\n        protected override bool AuthorizeCore(HttpContextBase httpContext)\n        {\n            return DateTime.Now.Minute % 2 == 0;  \n        }\n        protected override void HandleUnauthorizedRequest(AuthorizationContext filterContext)\n        {\n            filterContext.HttpContext.Response.Redirect(&quot;/Home/ShowTip&quot;);\n\n            //base.HandleUnauthorizedRequest(filterContext);  \n        }  \n    }\n}\n\n\n//HomeController.cs\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\nusing WebApplication3.Filter;\n\nnamespace WebApplication3.Controllers\n{\n    public class HomeController : Controller\n    {\n        public ActionResult Index()\n        {\n            return View();\n        }\n\n        [MyAuthorizeAttribute]\n        public ActionResult ShowDetails2()\n        {\n            return View();\n        }\n        public ActionResult ShowTip()\n        {\n            return View();\n        }  \n    }\n}</code></pre>","text":"想必学过Flask编写Web服务端的都对 @login_required 很熟悉吧,一个语句决定了访问者是否有权限访问当前页面. 那么疑问来了,ASP.NET MVC中是否有类似于Python装饰器一类的语法呢? 答案是有的,如果仅仅是权限以及登录确认的判断的话,ASP.NET ","link":"","raw":null,"photos":[],"categories":[{"name":"ASP.Net","slug":"ASP-Net","count":3,"path":"api/categories/ASP-Net.json"},{"name":"C#","slug":"ASP-Net/C","count":2,"path":"api/categories/ASP-Net/C.json"},{"name":"MVC","slug":"ASP-Net/C/MVC","count":1,"path":"api/categories/ASP-Net/C/MVC.json"},{"name":"Web","slug":"ASP-Net/C/MVC/Web","count":1,"path":"api/categories/ASP-Net/C/MVC/Web.json"}],"tags":[{"name":"ASP.NET","slug":"ASP-NET","count":6,"path":"api/tags/ASP-NET.json"},{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"},{"name":"MVC","slug":"MVC","count":1,"path":"api/tags/MVC.json"},{"name":"Web","slug":"Web","count":7,"path":"api/tags/Web.json"}]},{"title":"ASP.NET MVC 搭建博客 Song Of The Sea","slug":"asp-net-mvc-song-of-the-sea","date":"2017-12-26T01:01:15.000Z","updated":"2019-07-03T13:51:36.860Z","comments":true,"path":"api/articles/asp-net-mvc-song-of-the-sea.json","excerpt":"","keywords":null,"cover":"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ%E6%88%AA%E5%9B%BE20171225232801.jpg","content":"<h1><span id=\"第五个博客上线了\">第五个博客上线了!</span></h1><p>这次使用的是ASP.NET MVC + Bootstrap3 + SignalR + 百度地图api + ajax无刷新更新页面等等…. 目标: Demo : <a href=\"http://hsdog.be-sunshine.cn\" target=\"_blank\" rel=\"noopener\">http://hsdog.be-sunshine.cn</a> ASP搭建的一个博客(部分重构之前python写的博客,大部分新添加的内容):一只划水狗 但本网站仅供交流和娱乐学习用,因为没有对标签进行处理,所以很容易就会被攻陷的.回头有空了在添加标签过滤功能. :) 代码等回头有空的时候放上来~ 预览: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ截图20171225232801.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ%E6%88%AA%E5%9B%BE20171225232801.jpg\" alt></a> <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ截图20171225232601.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ%E6%88%AA%E5%9B%BE20171225232601.jpg\" alt></a> <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ截图20171225232333.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ%E6%88%AA%E5%9B%BE20171225232333.jpg\" alt></a> <a href=\"http://hsdog.be-sunshine.cn\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ%E6%88%AA%E5%9B%BE20171225232359.jpg\" alt></a> <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ截图20171225232410.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/12/QQ%E6%88%AA%E5%9B%BE20171225232410.jpg\" alt></a></p>\n","text":"第五个博客上线了!这次使用的是ASP.NET MVC + Bootstrap3 + SignalR + 百度地图api + ajax无刷新更新页面等等…. 目标: Demo : http://hsdog.be-sunshine.cn ASP搭建的一个博客(部分重构之前python","link":"","raw":null,"photos":[],"categories":[{"name":"ajax","slug":"ajax","count":4,"path":"api/categories/ajax.json"},{"name":"ASP.Net","slug":"ajax/ASP-Net","count":3,"path":"api/categories/ajax/ASP-Net.json"},{"name":"Bootstrap","slug":"ajax/ASP-Net/Bootstrap","count":1,"path":"api/categories/ajax/ASP-Net/Bootstrap.json"},{"name":"C#","slug":"ajax/ASP-Net/Bootstrap/C","count":1,"path":"api/categories/ajax/ASP-Net/Bootstrap/C.json"},{"name":"JS","slug":"ajax/ASP-Net/Bootstrap/C/JS","count":1,"path":"api/categories/ajax/ASP-Net/Bootstrap/C/JS.json"},{"name":"MVC","slug":"ajax/ASP-Net/Bootstrap/C/JS/MVC","count":1,"path":"api/categories/ajax/ASP-Net/Bootstrap/C/JS/MVC.json"}],"tags":[{"name":"ajax","slug":"ajax","count":4,"path":"api/tags/ajax.json"},{"name":"ASP.NET","slug":"ASP-NET","count":6,"path":"api/tags/ASP-NET.json"},{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"},{"name":"Web","slug":"Web","count":7,"path":"api/tags/Web.json"}]},{"title":"HTML+CSS基础复习完毕","slug":"htmlcss","date":"2017-05-14T07:56:46.000Z","updated":"2019-07-03T13:51:36.848Z","comments":true,"path":"api/articles/htmlcss.json","excerpt":"","keywords":null,"cover":null,"content":"<p>准备开JS <a href=\"http://be-sunshine.cn/study/\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/study/</a></p>\n","text":"准备开JS http://be-sunshine.cn/study/","link":"","raw":null,"photos":[],"categories":[{"name":"Web","slug":"Web","count":3,"path":"api/categories/Web.json"}],"tags":[{"name":"Web","slug":"Web","count":7,"path":"api/tags/Web.json"}]},{"title":"Javascript入门学习完毕","slug":"javascriptsdy","date":"2017-05-17T02:47:10.000Z","updated":"2019-07-03T13:51:36.848Z","comments":true,"path":"api/articles/javascriptsdy.json","excerpt":"","keywords":null,"cover":null,"content":"<p><a href=\"http://be-sunshine.cn/study/2/\" target=\"_blank\" rel=\"noopener\">4-1编程挑战在开头</a></p>\n","text":"4-1编程挑战在开头","link":"","raw":null,"photos":[],"categories":[{"name":"Web","slug":"Web","count":3,"path":"api/categories/Web.json"}],"tags":[{"name":"Web","slug":"Web","count":7,"path":"api/tags/Web.json"}]},{"title":"把大一HTML课撸的网站Copy上来了","slug":"lalaland","date":"2017-05-14T07:49:25.000Z","updated":"2019-07-03T13:51:36.848Z","comments":true,"path":"api/articles/lalaland.json","excerpt":"","keywords":null,"cover":null,"content":"<p>…突然感觉大一好像也不是那么差劲…下面的是链接.如果屏幕中间出现绿色加载,刷新一下就好啦. <a href=\"http://be-sunshine.cn/study/other\" target=\"_blank\" rel=\"noopener\">这个Zone在大一</a> 或者直接复制我-&gt;:<a href=\"http://be-sunshine.cn/study/other\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn/study/other</a></p>\n","text":"…突然感觉大一好像也不是那么差劲…下面的是链接.如果屏幕中间出现绿色加载,刷新一下就好啦. 这个Zone在大一 或者直接复制我-&gt;:http://be-sunshine.cn/study/other","link":"","raw":null,"photos":[],"categories":[{"name":"Web","slug":"Web","count":3,"path":"api/categories/Web.json"}],"tags":[{"name":"Web","slug":"Web","count":7,"path":"api/tags/Web.json"}]},{"title":"python web django","slug":"python-web-django","date":"2018-01-07T13:39:23.000Z","updated":"2019-07-03T13:51:36.860Z","comments":true,"path":"api/articles/python-web-django.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Django的模板语法，如下:</p>\n<pre><code>{ {}} :用于变量替换。\n{%for i in content%}{ {i}}{%endfor%} : for 循环\n{%extends \"base.html\"%} : 用于指定父模板文件\n{%block name %} ··· {%endblock%} :用于指定被替换的内容,内容名称为 name.\n{%if 条件%} .....{% elif 条件%} ....{%else%}... {%endif%} :用于 if 语句</code></pre><p>常用的 ORM 查询操作:</p>\n<pre><code>ModelName.object.all() #返回 model 的所有数据集\n\nModelName.object.filter(**kwargs) #返回符合筛选条件的数据集\n\nModelName.object.exclude(**kwargs) #返回不符合筛选条件的数据集\n\nModelName.object.get(**kwargs) #用于查询单条记录</code></pre><h1><span id=\"创建数据\">创建数据</span></h1><pre><code># 第一种方式\n# models.UserInfo.objects.create(username=&quot;root&quot;,password=&quot;123&quot;)\n# 第二种方式\n# obj = models.UserInfo(username=&apos;fzh&apos;, password=&quot;iajtag&quot;)\n# obj.save()\n# 第三种方式\n# dic = {&apos;username&apos;:&apos;fgf&apos;, &apos;password&apos;:&apos;666&apos;}\n# models.UserInfo.objects.create(**dic)</code></pre><h1><span id=\"查询数据\">查询数据</span></h1><pre><code># result = models.UserInfo.objects.all()  # 查询所有，为QuerySet类型，可理解成列表\n# result = models.UserInfo.objects.filter(username=&quot;fgf&quot;,password=&quot;666&quot;)  # 列表\n# result = models.UserInfo.objects.filter(username=&quot;fgf&quot;).first()  # 对象\n# 条件查询。filter 相当于where查询条件，里面的&quot;，&quot;会组成and条件\n# for row in result:  # 打印查询到数据。\n#     print(row.id,row.username,row.password)\n\n# 查看QuerySet类型具体做了什么事情，可以： print(result.query)</code></pre><h1><span id=\"删除数据\">删除数据</span></h1><pre><code># models.UserInfo.objects.all().delete()  # 删除所有\n# models.UserInfo.objects.filter(id=4).delete()  # 删除所有</code></pre><h1><span id=\"更新数据\">更新数据</span></h1><pre><code># models.UserInfo.objects.all().update(password=8888)\n# models.UserInfo.objects.filter(id=3).update(password=888888)</code></pre><p>数据库(ORM)操作相关: 如果想要完全删除migrations(使用sqllite时),需要将所有缓存文件/夹都删掉 然后新建一个空的migrations</p>\n<blockquote>\n<p>python manage.py makemigrations –empty (你的app名字) python manage.py makemigrations python manage.py migrate 解决!</p>\n</blockquote>\n","text":"Django的模板语法，如下:{ {}} :用于变量替换。{%for i in content%}{ {i}}{%endfor%} : for 循环{%extends \"base.html\"%} : 用于指定父模板文件{%block name %} ··· {%endblock%","link":"","raw":null,"photos":[],"categories":[{"name":"django","slug":"django","count":2,"path":"api/categories/django.json"},{"name":"Python","slug":"django/Python","count":2,"path":"api/categories/django/Python.json"},{"name":"Web","slug":"django/Python/Web","count":2,"path":"api/categories/django/Python/Web.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"},{"name":"Web","slug":"Web","count":7,"path":"api/tags/Web.json"},{"name":"django","slug":"django","count":2,"path":"api/tags/django.json"}]},{"title":"使用django搭建的文件上传系统","slug":"use-django-fileshare","date":"2018-01-08T02:17:42.000Z","updated":"2019-07-03T13:51:36.860Z","comments":true,"path":"api/articles/use-django-fileshare.json","excerpt":"","keywords":null,"cover":null,"content":"<p>link -&gt; <a href=\"http://be-sunshine.cn:9011\" title=\"http://be-sunshine.cn:9011\" target=\"_blank\" rel=\"noopener\">http://be-sunshine.cn:9011</a></p>\n<h1><span id=\"关于-这个仓库\"><strong>关于</strong> 这个仓库…</span></h1><ol>\n<li><p>上传文件大小最大不能超过… 5M</p>\n</li>\n<li><p>请妥善保存文件的备份连接.</p>\n</li>\n</ol>\n","text":"link -&gt; http://be-sunshine.cn:9011关于 这个仓库…上传文件大小最大不能超过… 5M请妥善保存文件的备份连接.","link":"","raw":null,"photos":[],"categories":[{"name":"django","slug":"django","count":2,"path":"api/categories/django.json"},{"name":"Python","slug":"django/Python","count":2,"path":"api/categories/django/Python.json"},{"name":"Web","slug":"django/Python/Web","count":2,"path":"api/categories/django/Python/Web.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"},{"name":"Web","slug":"Web","count":7,"path":"api/tags/Web.json"},{"name":"django","slug":"django","count":2,"path":"api/tags/django.json"}]}]}