{"title":"UVa 213","slug":"uva-213","date":"2017-03-26T08:09:55.000Z","updated":"2019-07-03T13:51:36.846Z","comments":true,"path":"api/articles/uva-213.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【生词】</strong> <strong>schemes 计划,阴谋,方案</strong> ** require 需求,要求,指令** <strong>pattern 模式,图案,样品,模仿</strong> <strong>represents 代表,表现,表示</strong> <strong>The heart of 称心的,乱了粉粹的,中心的,核心的</strong> <strong>adjacent 邻近的,毗邻的</strong> <strong>obtained 获得(obtain)</strong> <strong>Notice 通知,布告,公告</strong> <strong>consist 由什么组成</strong> <strong>mapped 映射</strong> <strong>in order 整齐,秩然有序</strong> <strong>That is 即,就是说,换言之</strong> <strong>suppose 假设</strong> <strong>segment 片段</strong> <strong>binary 二进制的</strong> <strong>representation 表示法</strong> <strong>of …的</strong> <strong>terminated 终止，结束</strong> <strong>entire 全部的,整个的</strong> <strong>signify 表示,意味</strong> <strong>one-at-a-time 一次一个</strong> <strong>extend 扩展</strong> <strong>111 in binary 111的二进制表示</strong> <strong>There be 有</strong> <strong>multiple 倍数的,几倍的</strong> <strong>copies 复制品</strong> <strong>legitimate 合法的,正当的</strong> <strong>appropriate 适当的,恰当的,合适的</strong> <strong>correspond 符合,一致,相应,通信</strong> <strong>separate 单独的</strong> <strong>【题面】</strong> <strong>粉书P83，这个自己看的时候有点迷糊..</strong> <strong>【问题】</strong> <strong>粉书的读入代码(AC)</strong></p>\n<blockquote>\n<p><strong>inline int readText(){</strong> **    fill(code);** <strong>code[1][0]=readchar();//因为</strong> **    for(int plie=2;plie&lt;=7;++plie) {** **        for(int i=0;i&lt;(1&lt;&lt;plie)-1;++i){** <strong>int c=getchar();</strong> <strong>if(c==EOF) return 0;</strong> **            if(c==’\\n’ || c==’\\r’) return 1;** **            code[plie][i]=c;** **        }** **    }    ** <strong>return 1;</strong> <strong>}</strong></p>\n</blockquote>\n<p><strong>我的读入代码(WA)</strong></p>\n<blockquote>\n<p><strong>inline int readText(){</strong> **    int plie=2;** **    int max=3,cnt=0;** **    fill(code);** **    code[1][0]=readchar();//因为** **    for(;;) {** **        int c=getchar();** **        if(c==EOF) return 0;** **        if(c==’\\n’ || c==’\\r’) return 1;** **        code[plie][cnt++]=c;** **        if(cnt==max){** **            max=1&lt;&lt;(plie+1)-1;** **            cnt=0;** **            plie++;** **        }** **    }    ** **    return 1;** <strong>}</strong></p>\n</blockquote>\n<p><strong>【Code】</strong></p>\n<blockquote>\n<p>**`#include<iostream></iostream></p>\n<p>#include<algorithm></algorithm></p>\n<p>#include<cstdio></cstdio></p>\n<p>#include<cstring></cstring></p>\n<p>#include<cstdlib></cstdlib></p>\n<p>#define fill(x) memset(x,0,sizeof(x))<br>using namespace std;<br>int code[8][1&lt;&lt;8];<br>inline char readchar(){<br>    char sta;<br>    while(~scanf(“%c”,&amp;sta) &amp;&amp; sta==’\\n’ || sta==’\\r’){}<br>        //这里的scanf()不要忘了加取反符,否则督导EOF不会存下来.<br>    return sta;<br>}<br>inline int readint(int l){<br>    int v=0;<br>    while(l–) v=v*2+readchar()-‘0’;<br>    return v;<br>}<br>inline int readText(){<br>    fill(code);<br>    code[1][0]=readchar();//因为<br>    for(int plie=2;plie&lt;=7;++plie) {<br>        for(int i=0;i&lt;(1&lt;&lt;plie)-1;++i){<br>            int c=getchar();<br>            if(c==EOF) return 0;<br>            if(c==’\\n’ || c==’\\r’) return 1;<br>            code[plie][i]=c;<br>        }<br>    }<br>    return 1;<br>}</p>\n<p>int main(){<br>    while(readText()){<br>        int digit;<br>        char dig[3],slist;<br>        for(;;){<br>            int len=readint(3);<br>            if(len==0) break;<br>            for(;;){<br>                digit=readint(len);<br>                if(digit==(1&lt;&lt;len)-1)<br>                    break;<br>                putchar(code[len][digit]);<br>            }<br>        }<br>        putchar(‘\\n’);<br>    }<br>    return 0;<br>}`**</p>\n</blockquote>\n","categories":[{"name":"UVa","slug":"UVa","count":35,"path":"api/categories/UVa.json"}],"tags":[{"name":"UVa","slug":"UVa","count":39,"path":"api/tags/UVa.json"}]}