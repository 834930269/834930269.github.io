{"title":"51nod 1201 整数划分","slug":"51nod-1201-int-pagi","date":"2018-03-06T01:33:53.000Z","updated":"2019-07-03T13:51:36.862Z","comments":true,"path":"api/articles/51nod-1201-int-pagi.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1><span id=\"typedp思维\">Type:DP,思维</span></h1><h1><span id=\"题意\">题意</span></h1><p>将N分为若干个不同整数的和，有多少种不同的划分方式，例如：n = 6，{6} {1,5} {2,4} {1,2,3}，共4种。由于数据较大，输出Mod 10^9 + 7的结果即可。</p>\n<h1><span id=\"input\">Input</span></h1><p>输入1个数N(1 &lt;= N &lt;= 50000)。</p>\n<h1><span id=\"output\">Output</span></h1><p>输出划分的数量Mod 10^9 + 7。</p>\n<h1><span id=\"input示例\">Input示例</span></h1><p>6</p>\n<h1><span id=\"output示例\">Output示例</span></h1><p>4</p>\n<h1><span id=\"题解\">题解</span></h1><blockquote>\n<p>首先我们可以由</p>\n<blockquote>\n<p>1+2+3+…+m=n 估算出 大概只有sqrt(2*n)个数字左右</p>\n</blockquote>\n<p>我们设当前状态为 dp[i][j]</p>\n<blockquote>\n<p>dp[i][j] 代表当前数字为 j ,被划分成了 i 部分. 状态转移推倒:</p>\n<blockquote>\n<p>我们假设已知所有 dp 的划分数序列. (1) 我们将 dp[i][j-i] 每个 划分数每个数字 +1 ,我们将得到 不存在1 的划分数. (2) 我们将 dp[i-1][j-i] 每个 划分数每个数字(共 i-1 个) +1 ,我们将得到 不存在1 的且长度为 i-1 ,和为 j-1 的划分数,然后我们将 1 放到划分数中,即得到全部 有1 的划分数.</p>\n</blockquote>\n<p>即 dp[i][j]=(dp[i][j-i]+dp[i-1][j-i])%mod</p>\n</blockquote>\n<p>正确性证明:</p>\n<blockquote>\n<p>假设已知 dp[i][j] 的全部序列. 我们只需要一直对每个数字 -1 就可以将所有序列置为 全0.</p>\n</blockquote>\n</blockquote>\n<h1><span id=\"给一个例子自己倒着推一下也成立\">给一个例子自己倒着推一下也成立</span></h1><pre><code>组成1的 有 {1} \n\n组成2的 有 {2} \n\n组成3的 有 {1,2} {3}\n\n组成4的 有 {1,3} {4}\n\n组成5的 有 {1,4} {2,3} {5}\n\n组成6的 有 {1,5} {2,4} {1,2,3} {6}\n\n组成7的 有 {1,6} {2,5} {3,4} {1,2,4} {7}</code></pre><h1><span id=\"code\">Code</span></h1><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long LL;\nconst int maxn=50010;\nconst LL mod=1e9+7;\nint N;\nLL dp[330][maxn];\n\nint main(){\n    scanf(&quot;%d&quot;,&amp;N);\n    dp[1][1]=1ll;\n    for(int i=2;i&lt;=N;++i){\n        for(int j=1;j&lt;=(int)sqrt(2*i);++j){\n            dp[j][i]=(dp[j][i-j]+dp[j-1][i-j])%mod;\n        }\n    }\n    LL ans=0;\n    for(int i=1;i&lt;=(int)sqrt(2*N);++i) ans=(ans+dp[i][N])%mod;\n    printf(&quot;%lld\\n&quot;,ans);\n    return 0;\n}</code></pre>","categories":[{"name":"51nod","slug":"51nod","count":12,"path":"api/categories/51nod.json"},{"name":"动态规划","slug":"51nod/动态规划","count":3,"path":"api/categories/51nod/动态规划.json"}],"tags":[{"name":"51nod","slug":"51nod","count":12,"path":"api/tags/51nod.json"},{"name":"动态规划","slug":"动态规划","count":24,"path":"api/tags/动态规划.json"}]}