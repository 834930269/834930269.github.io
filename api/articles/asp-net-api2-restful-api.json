{"title":"ASP.NET API2 设计 RESTful API","slug":"asp-net-api2-restful-api","date":"2017-11-26T04:12:55.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/asp-net-api2-restful-api.json","photos":[],"link":"","excerpt":null,"covers":["http://be-sunshine.cn/wp-content/uploads/2017/11/QQ%E6%88%AA%E5%9B%BE20171126121235.jpg"],"content":"<p>Copyright @ <a href=\"https://docs.microsoft.com/en-us/aspnet/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api\" title=\"DocsASP.NETASP.NET Web API\" target=\"_blank\" rel=\"noopener\">DocsASP.NETASP.NET Web API</a> 微软的官方文档</p>\n<blockquote>\n<p>首先是新建ASP.NET api项目 然后是设计Model</p>\n<blockquote>\n<p>Product.cs</p>\n</blockquote>\n</blockquote>\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\n\nnamespace WAPI.Models\n{\n    public class Product\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public string Category { get; set; }\n        public decimal Price { get; set; }\n    }\n}</code></pre><blockquote>\n<p>编写Controller(路由)</p>\n<blockquote>\n<p>ProductsController.cs</p>\n</blockquote>\n</blockquote>\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Net;\nusing System.Net.Http;\nusing System.Web.Http;\n\nusing WAPI.Models;\n\nnamespace WAPI.Controllers\n{\n    public class ProductsController : ApiController\n    {\n        // XXM =&gt; decimal类型小数\n        Product[] products = new Product[]{\n            new Product{ Id=1,Name=&quot;Tomato Soup&quot;,Category=&quot;Groceries&quot;,Price=1},\n            new Product{ Id=2,Name=&quot;Yo-yo&quot;,Category=&quot;Toys&quot;,Price=3.75M},\n            new Product{ Id=3,Name=&quot;Hammer&quot;,Category=&quot;Hardware&quot;,Price=16.99M}\n        };\n\n        public IEnumerable&lt;Product&gt; GetAllProducts()\n        {\n            return products;\n        }\n\n        public IHttpActionResult GetProduct(int id)\n        {\n            //容器.FirstOrDefault(Boolean) 返回满足条件的第一个元素,如未找到,返回默认值\n            var product = products.FirstOrDefault((p) =&gt; p.Id == id);\n            if (product == null)\n            {\n                //ApiController.NotFound()\n                //即404界面\n                return NotFound();\n            }\n            //正常返回\n            return Ok(product);\n        }\n    }\n}</code></pre><blockquote>\n<p>最后通过编写前端界面,并使用JQuery来实现ajax传输,显示</p>\n<blockquote>\n<p>index.html</p>\n</blockquote>\n</blockquote>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head&gt;\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;\n    &lt;title&gt;Product App&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;\n        &lt;h2&gt;All Products&lt;/h2&gt;\n        &lt;ul id=&quot;products&quot;/&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;h2&gt;Search by ID&lt;/h2&gt;\n        &lt;input type=&quot;text&quot; id=&quot;prodId&quot; size=&quot;5&quot;/&gt;\n        &lt;input type=&quot;button&quot; value=&quot;Search&quot; onclick=&quot;find();&quot;/&gt;\n        &lt;p id=&quot;product&quot;/&gt;\n    &lt;/div&gt;\n\n    &lt;script src=&quot;http://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n        var uri = &apos;api/products&apos;;\n\n        $(document).ready(function () {\n            //Send an AJAX request\n            $.getJSON(uri)\n                .done(function (data) {\n                    //On success,&apos;data&apos; contains a list of products.\n                    $.each(data, function (key, item) {\n                        //Add a list item for the product。\n                        $(&apos;&lt;li&gt;&apos;, { text: formatItem(item) }).appendTo($(&apos;#products&apos;));\n                    });\n                });\n        });\n\n\n        function formatItem(item) {\n            return item.Name + &apos;: $&apos; + item.Price;\n        }\n\n        function find() {\n            var id = $(&apos;#prodId&apos;).val();\n            $.getJSON(uri + &apos;/&apos; + id)\n                .done(function (data) {\n                    $(&apos;#product&apos;).text(formatItem(data));\n                })\n                .fail(function (jqXHR, textStatus, err) {\n                    $(&apos;#product&apos;).text(&apos;Error: &apos; + err);\n                });\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre><blockquote>\n<p>结果如下所示</p>\n</blockquote>\n<p><a href=\"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ截图20171126121235.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/11/QQ%E6%88%AA%E5%9B%BE20171126121235.jpg\" alt></a></p>\n","categories":[{"name":"ajax","slug":"ajax","count":4,"path":"api/categories/ajax.json"},{"name":"ASP.Net","slug":"ajax/ASP-Net","count":3,"path":"api/categories/ajax/ASP-Net.json"},{"name":"JS","slug":"ajax/ASP-Net/JS","count":1,"path":"api/categories/ajax/ASP-Net/JS.json"},{"name":"RestFul_API","slug":"ajax/ASP-Net/JS/RestFul-API","count":1,"path":"api/categories/ajax/ASP-Net/JS/RestFul-API.json"}],"tags":[{"name":"ajax","slug":"ajax","count":4,"path":"api/tags/ajax.json"},{"name":"ASP.NET","slug":"ASP-NET","count":6,"path":"api/tags/ASP-NET.json"},{"name":"RestFul_API","slug":"RestFul-API","count":2,"path":"api/tags/RestFul-API.json"},{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"}]}