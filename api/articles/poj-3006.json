{"title":"POJ 3006","slug":"poj-3006","date":"2017-04-03T04:06:39.000Z","updated":"2019-07-03T13:51:36.847Z","comments":true,"path":"api/articles/poj-3006.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【生词】</strong> <strong>Dirichlet’s Theorem  狄利赫勒定理</strong> <strong>Arithmetic 算术,等差数列</strong> <strong>Progressions 级数,推进</strong> <strong>Arithmetic Progressions 等差数列</strong> <strong>Arithmetic Progressions of prime 质数等差数列</strong> <strong>If <em>a</em> and <em>d</em> are relatively prime… 如果a和b是互质数</strong> <strong>arithmetic sequence 等差数列</strong> <strong>increasing by 增加了</strong> <strong><a href=\"http://dict.youdao.com/search?q=increasing%20monotonically%20by%20degree&keyfrom=chrome.extensioneng\" target=\"_blank\" rel=\"noopener\">increasing monotonically by degree</a> 单调递增</strong> <strong>infinitely 无穷,无限的</strong> <strong>is known as 被称为</strong> <strong>your mission 你的使命/任务</strong> <strong>Your mission, should you decide to accept it, 你的使命使你决定去接受(证明？)它</strong> <strong>datasets 数据集</strong> <strong>separated by 用…来分隔？</strong> <strong>assume 假定</strong> <strong>composed of 由…组成</strong> <strong>extra 临时的,特别的,额外的</strong> <strong>characters 特性,字符</strong> <strong>corresponding 相应的,一致的</strong> <strong>【Tip】</strong> <strong>为啥都是素数？</strong> <strong>【Code】</strong></p>\n<blockquote>\n<p><strong>#include&lt;bits/stdc++.h&gt;</strong> <strong>using namespace std;</strong> <strong>const int maxn=1000010;</strong> <strong>bool is_prime[maxn];</strong> <strong>int prime[maxn],p,a,b,n;</strong> <strong>inline void sieve(){</strong> **    memset(is_prime,true,sizeof(is_prime));** **    p=0;** **    is_prime[0]=is_prime[1]=false;** **    for(int i=2;i&lt;maxn;++i)** **        if(is_prime[i]){** **            prime[p++]=i;** **            for(int j=2<em>i;j&lt;maxn;j+=i)*</em> **                is_prime[j]=false;** **        }** <strong>}</strong> <strong>int main(){</strong> **    sieve();** **    while(~scanf(“%d%d%d”,&amp;a,&amp;b,&amp;n) &amp;&amp; a+b+n){** **        int sum=0,c;** **        for(int i=0,t=0;t&lt;n;++i){** **            c=a+i<em>b;*</em> **            if(is_prime[c]) t++;** **        }** **        printf(“%d\\n”,c);** **    }** **    return 0;** <strong>}</strong></p>\n</blockquote>\n","categories":[{"name":"POJ","slug":"POJ","count":21,"path":"api/categories/POJ.json"}],"tags":[{"name":"POJ","slug":"POJ","count":22,"path":"api/tags/POJ.json"}]}