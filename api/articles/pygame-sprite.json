{"title":"pygame sprite","slug":"pygame-sprite","date":"2017-12-30T09:20:40.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/pygame-sprite.json","photos":[],"link":"","excerpt":null,"covers":["http://be-sunshine.cn/wp-content/uploads/2017/12/mdm.png"],"content":"<p>自定义Sprite类: 让嗷大喵动起来! <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/12/mdm.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/12/mdm.png\" alt></a> 以上图片叫做帧图,背景为空,和二维数组一样的用法. 这个帧图的行为4,列为1. 对网上别人自定义的MySprite类做了修改,使其变成列行同时循环. 学习项目地址: <a href=\"https://github.com/834930269/Pygame-Learn/tree/master/second\" title=\"pygame-learn-sprite\" target=\"_blank\" rel=\"noopener\">pygame-learn-sprite</a> <code>class MySprite</code></p>\n<pre><code>class MySprite(pygame.sprite.Sprite):\n    def __init__(self,target):\n        pygame.sprite.Sprite.__init__(self)\n        self.target_surface = target\n        self.image = None\n        self.master_image = None\n        self.rect = None\n        self.topleft = 0,0\n        self.frame = 0\n        self.old_frame = -1\n        self.frame_width = 1\n        self.frame_height = 1\n        self.first_frame = 0\n        self.last_frame = 0\n        self.columns = 1\n        self.last_time = 0\n        self.row = 1\n\n    # filename 帧图宽度,帧图高度,帧图行,帧图列\n    def load(self,filename,width,height,columns,row):\n        self.master_image = pygame.image.load(filename).convert_alpha()\n        self.frame_width = width\n        self.frame_height = height\n        self.rect = 0,0,width,height\n        self.columns = columns\n        self.row = row\n        rect = self.master_image.get_rect()\n        self.last_frame = (rect.width // width)*(rect.height // height) - 1\n\n    def update(self,current_time,rate=60):\n        if current_time &gt; self.last_time +rate:\n            self.frame += 1\n            if self.frame &gt; self.last_frame:\n                self.frame = self.first_frame\n            self.last_frame = current_time\n\n        if self.frame != self.old_frame:\n            frame_x = (self.frame % self.columns) * self.frame_width\n            #添加了row以后每次计算对row取余即可计算出当前列数\n            frame_y = (self.frame // self.columns) % self.row * self.frame_height\n            #如果把frame_y置为0,则表示始终都是在位图的第一行\n            # 多行的话,可以通过frame_y来解决,但是要注意,y=0则返回\n            rect = (frame_x, frame_y, self.frame_width, self.frame_height)\n            self.image = self.master_image.subsurface(rect)\n            self.old_frame = self.frame</code></pre><p>让嗷大喵动起来吧!!</p>\n<pre><code>import pygame\nfrom pygame import *\n\nclass MySprite(pygame.sprite.Sprite):\n    def __init__(self,target):\n        pygame.sprite.Sprite.__init__(self)\n        self.target_surface = target\n        self.image = None\n        self.master_image = None\n        self.rect = None\n        self.topleft = 0,0\n        self.frame = 0\n        self.old_frame = -1\n        self.frame_width = 1\n        self.frame_height = 1\n        self.first_frame = 0\n        self.last_frame = 0\n        self.columns = 1\n        self.last_time = 0\n        self.row = 1\n\n    # filename 帧图宽度,帧图高度,帧图行,帧图列\n    def load(self,filename,width,height,columns,row):\n        self.master_image = pygame.image.load(filename).convert_alpha()\n        self.frame_width = width\n        self.frame_height = height\n        self.rect = 0,0,width,height\n        self.columns = columns\n        self.row = row\n        rect = self.master_image.get_rect()\n        self.last_frame = (rect.width // width)*(rect.height // height) - 1\n\n    def update(self,current_time,rate=60):\n        if current_time &gt; self.last_time +rate:\n            self.frame += 1\n            if self.frame &gt; self.last_frame:\n                self.frame = self.first_frame\n            self.last_frame = current_time\n\n        if self.frame != self.old_frame:\n            frame_x = (self.frame % self.columns) * self.frame_width\n            #添加了row以后每次计算对row取余即可计算出当前列数\n            frame_y = (self.frame // self.columns) % self.row * self.frame_height\n            #如果把frame_y置为0,则表示始终都是在位图的第一行\n            # 多行的话,可以通过frame_y来解决,但是要注意,y=0则返回\n            rect = (frame_x, frame_y, self.frame_width, self.frame_height)\n            self.image = self.master_image.subsurface(rect)\n            self.old_frame = self.frame\n\npygame.init()\nscreen = pygame.display.set_mode((800,600),0,32)\npygame.display.set_caption(&quot;精灵测试&quot;)\nfont = pygame.font.Font(None,18)\nframerate = pygame.time.Clock()\n\ncat = MySprite(screen)\ncat.load(&quot;mdm.png&quot;,100,100,4,1)\ngroup = pygame.sprite.Group()\ngroup.add(cat)\n\nwhile True:\n    framerate.tick(100)\n    ticks = pygame.time.get_ticks()\n\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            exit()\n    key = pygame.key.get_pressed()\n    if key[pygame.K_ESCAPE]:\n        exit()\n\n    screen.fill((0,0,100))\n\n    group.update(ticks)\n    group.draw(screen)\n    pygame.display.update()</code></pre>","categories":[{"name":"pygame","slug":"pygame","count":3,"path":"api/categories/pygame.json"},{"name":"Python","slug":"pygame/Python","count":3,"path":"api/categories/pygame/Python.json"},{"name":"游戏制作","slug":"pygame/Python/游戏制作","count":3,"path":"api/categories/pygame/Python/游戏制作.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"},{"name":"游戏制作","slug":"游戏制作","count":4,"path":"api/tags/游戏制作.json"},{"name":"pygame","slug":"pygame","count":3,"path":"api/tags/pygame.json"}]}