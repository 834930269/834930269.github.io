{"title":"Java 类与对象","slug":"java-class-object","date":"2018-01-12T12:08:47.000Z","updated":"2019-07-03T13:51:36.860Z","comments":true,"path":"api/articles/java-class-object.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>这里仅记录学习过程中与其他语言相差较大的部分.</p>\n<pre><code>//简单类\npublic class Hero {\n    String name;//姓名\n    float hp;//血量\n    float armor;//护甲\n    int moveSpeed;//移动速度\n    // 方法名和类名一样（包括大小写）\n    // 没有返回类型\n    public Hero() {\n        System.out.println(&quot;实例化一个对象的时候，必然调用构造方法&quot;);\n    }\n\n    //构造方法重载\n    //带一个参数的构造方法\n    public Hero(String heroname){ \n        name = heroname;\n    }\n\n    //带两个参数的构造方法\n    public Hero(String heroname,float herohp){ \n        this.name = heroname;\n        this.hp = herohp;\n    }\n\n    //复活\n    //这里一个问题,传进来的引用指向哪个示例?\n    public void revive(Hero h){\n        h = new Hero(&quot;提莫&quot;,383);\n    }\n\n    public static void main(String[] args){\n        //创建一个对象\n        new Hero();\n        //创建一个引用来指向这个对象\n        Hero h = new Hero(&quot;提莫&quot;,383);    \n        //挂了\n        h.hp -=400;\n        //复活\n        h.revive(h);\n        System.out.println(h.hp);\n        //输出 -17.0,证明指向的实例没变\n    }\n}\n\n\n\n//类继承\n//物品类\npublic class Item{\n    String name;\n    int price;\n}\n\n\n\n//武器类,继承Item\npublic class Weapon extends Item{\n    int damage;//攻击力\n    public static void main(String[] args){\n        Weapon  infinityEdge= new Weapon();\n        infinityEdge.damage = 65; //damage属性在类Weapon中新设计的\n\n        infinityEdge.name = &quot;无尽之刃&quot;;//name属性，是从Item中继承来的，就不需要重复设计了\n        infinityEdge.price = 3600;      \n    }\n}</code></pre><p>Java属性初始化与其他相比不同的几个方式: 1.对象属性(实例化后的类)</p>\n<pre><code>//块初始化\n\npackage charactor;\n\npublic class Hero {\n    //直接初始化\n    public String name = &quot;some hero&quot;; //声明该属性的时候初始化\n    protected float hp;\n    //块初始化\n    float maxHP;\n\n    {\n        maxHP = 200; //初始化块\n    }  \n    //构造方法初始化\n    public Hero(){\n        hp = 100; //构造方法中初始化\n    }\n}</code></pre><p>2.类属性初始化</p>\n<pre><code>package charactor;\n\npublic class Hero {\n    public String name;\n    protected float hp;\n    float maxHP;\n\n    //物品栏的容量\n    public static int itemCapacity=8; //声明的时候 初始化\n\n    //通过静态块初始化\n    static{\n        itemCapacity = 6;//静态初始化块 初始化\n    }\n\n    public Hero(){\n\n    }\n\n    public static void main(String[] args) {\n        System.out.println(Hero.itemCapacity);\n    }\n\n}</code></pre>","categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]}