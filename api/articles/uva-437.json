{"title":"UVa 437","slug":"uva-437","date":"2017-04-16T14:34:35.000Z","updated":"2019-07-03T13:51:36.847Z","comments":true,"path":"api/articles/uva-437.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【类型】</strong> <strong>DAG上的DP</strong> <strong>下面的代码一是转换成最长单增子序列LIS做的</strong> <strong>【Code】</strong></p>\n<blockquote>\n<p><strong>#include &lt;bits/stdc++.h&gt;</strong> <strong>using namespace std;</strong> <strong>typedef long long ll;</strong> <strong>const int INF = 0x3f3f3f3f;</strong> <strong>#define cle(a,val) memset(a,(val),sizeof(a))</strong> <strong>#define SI(N) scanf(“%d”,&amp;(N))</strong> <strong>#define SII(N,M) scanf(“%d %d”,&amp;(N),&amp;(M))</strong> <strong>#define SIII(N,M,K) scanf(“%d %d %d”,&amp;(N),&amp;(M),&amp;(K))</strong> <strong>#define rep(i,b) for(int i=0;i&lt;(b);i++)</strong> <strong>#define rez(i,a,b) for(int i=(a);i&lt;=(b);i++)</strong> <strong>#define red(i,a,b) for(int i=(a);i&gt;=(b);i–)</strong> <strong>const ll LINF = 0x3f3f3f3f3f3f3f3f;</strong> <strong>#define PU(x) puts(#x);</strong> <strong>#define PI(A) cout&lt;&lt;(A)&lt;&lt;endl;</strong> <strong>#define DG(x) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;endl;</strong> <strong>#define DGG(x,y) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;” “&lt;&lt;#y&lt;&lt;”=”&lt;&lt;(y)&lt;&lt;endl;</strong> <strong>#define DGGG(x,y,z) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;” “&lt;&lt;#y&lt;&lt;”=”&lt;&lt;(y)&lt;&lt;” “&lt;&lt;#z&lt;&lt;”=”&lt;&lt;(z)&lt;&lt;endl;</strong> <strong>#define PIar(a,n) rep(i,n)cout&lt;&lt;a[i]&lt;&lt;” “;cout&lt;&lt;endl;</strong> <strong>#define PIarr(a,n,m) rep(aa,n){rep(bb, m)cout&lt;&lt;a[aa][bb]&lt;&lt;” “;cout&lt;&lt;endl;}</strong> <strong>const double EPS = 1e-9 ;</strong> <strong>/*  ////////////////////////   C o d i n g  S p a c e   ////////////////////////  */</strong> <strong>const int maxn=300;</strong> <strong>struct star{</strong> **    int a,b,c;** **    bool operator&lt;(const star &amp;A)const{** **        return a==A.a?b&lt;A.b:a&lt;A.a;** **    }** <strong>};</strong> <strong>star S[maxn];</strong> <strong>int N,kase=1;</strong> <strong>int main(){</strong> **    while(SI(N)&amp;&amp;N){** **        int x,y,z,k=0;** **        rep(i,N){** **            SIII(x,y,z);** **            S[k].a=x;S[k].b=y;S[k++].c=z;** **            S[k].a=x;S[k].c=y;S[k++].b=z;** **            S[k].b=x;S[k].a=y;S[k++].c=z;** **            S[k].b=x;S[k].c=y;S[k++].a=z;** **            S[k].c=x;S[k].b=y;S[k++].a=z;** **            S[k].c=x;S[k].a=y;S[k++].b=z;** **        }** **        sort(S,S+k);** **        int ans=-INF,dp[maxn];** **        rep(i,k){** **            dp[i]=S[i].c;** **            rep(j,i){** **                if(S[j].a&lt;S[i].a &amp;&amp; S[j].b&lt;S[i].b){** **                    dp[i]=max(dp[i],dp[j]+S[i].c);** **                }** **            }** **            ans=max(ans,dp[i]);** **        }** **        printf(“Case %d: maximum height = %d\\n”,kase++,ans);** **    }** **    return 0;** <strong>}</strong></p>\n</blockquote>\n<p><strong>代码二</strong></p>\n<blockquote>\n<p><strong>#include &lt;bits/stdc++.h&gt;</strong> <strong>using namespace std;</strong> <strong>typedef long long ll;</strong> <strong>const int INF = 0x3f3f3f3f;</strong> <strong>#define cle(a,val) memset(a,(val),sizeof(a))</strong> <strong>#define SI(N) scanf(“%d”,&amp;(N))</strong> <strong>#define SII(N,M) scanf(“%d %d”,&amp;(N),&amp;(M))</strong> <strong>#define SIII(N,M,K) scanf(“%d %d %d”,&amp;(N),&amp;(M),&amp;(K))</strong> <strong>#define rep(i,b) for(int i=0;i&lt;(b);i++)</strong> <strong>#define rez(i,a,b) for(int i=(a);i&lt;=(b);i++)</strong> <strong>#define red(i,a,b) for(int i=(a);i&gt;=(b);i–)</strong> <strong>const ll LINF = 0x3f3f3f3f3f3f3f3f;</strong> <strong>#define PU(x) puts(#x);</strong> <strong>#define PI(A) cout&lt;&lt;(A)&lt;&lt;endl;</strong> <strong>#define DG(x) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;endl;</strong> <strong>#define DGG(x,y) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;” “&lt;&lt;#y&lt;&lt;”=”&lt;&lt;(y)&lt;&lt;endl;</strong> <strong>#define DGGG(x,y,z) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;” “&lt;&lt;#y&lt;&lt;”=”&lt;&lt;(y)&lt;&lt;” “&lt;&lt;#z&lt;&lt;”=”&lt;&lt;(z)&lt;&lt;endl;</strong> <strong>#define PIar(a,n) rep(i,n)cout&lt;&lt;a[i]&lt;&lt;” “;cout&lt;&lt;endl;</strong> <strong>#define PIarr(a,n,m) rep(aa,n){rep(bb, m)cout&lt;&lt;a[aa][bb]&lt;&lt;” “;cout&lt;&lt;endl;}</strong> <strong>const double EPS = 1e-9 ;</strong> <strong>/*  ////////////////////////   C o d i n g  S p a c e   ////////////////////////  */</strong> <strong>const int maxn=30+5;</strong> <strong>int N,kase=1,blocks[maxn][3],d[maxn][3];</strong> <strong>void get_dimensions(int* v,int b,int dim){</strong> **    int idx=0;** **    rep(i,3) if(i!=dim) v[idx++]=blocks[b][i];** <strong>}</strong> <strong>int dp(int i,int j){</strong> **    int&amp; ans=d[i][j];** **    if(ans&gt;0) return ans;** **    ans=0;** **    int v[2],v2[2];** **    get_dimensions(v,i,j);** **    rep(a,N) rep(b,3){** **        get_dimensions(v2,a,b);** **        if(v2[0]&lt;v[0] &amp;&amp; v2[1]&lt;v[1]) ans=max(ans,dp(a,b));** **    }** **    ans+=blocks[i][j];** **    return ans;** <strong>}</strong> <strong>int main(){</strong> **    while(SI(N)&amp;&amp;N){** **        rep(i,N){** **            rep(j,3) SI(blocks[i][j]);** **            sort(blocks[i],blocks[i]+3);** **        }** **        cle(d,0);** **        int ans=0;** **        rep(i,N) rep(j,3) ans=max(ans,dp(i,j));** **        printf(“Case %d: maximum height = %d\\n”,kase++,ans);** **    }** **    return 0;** <strong>}</strong></p>\n</blockquote>\n","categories":[{"name":"UVa","slug":"UVa","count":35,"path":"api/categories/UVa.json"},{"name":"动态规划","slug":"UVa/动态规划","count":4,"path":"api/categories/UVa/动态规划.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":24,"path":"api/tags/动态规划.json"},{"name":"UVa","slug":"UVa","count":39,"path":"api/tags/UVa.json"}]}