{"title":"Maven","slug":"maven","date":"2018-06-20T15:27:49.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/maven.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<blockquote>\n<p>总而言之说下吧,Maven其实就类似于.Net的NuGet和Python-Anaconda 的pip和conda.包的管理工具更贴切?</p>\n</blockquote>\n<h1 id=\"Maven下载地址\"><a href=\"#Maven下载地址\" class=\"headerlink\" title=\"Maven下载地址\"></a>Maven下载地址</h1><p><a href=\"http://maven.apache.org/download.cgi\" target=\"_blank\" rel=\"noopener\">http://maven.apache.org/download.cgi</a></p>\n<h1 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h1><p>mvn -v (查看版本) mvn archetype:generate -DgroupId=com.how2java -DartifactId=j2se -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false -archetype: generate 表示创建个项目 -DgroupId 项目包名: com.how2java -DartifactId 项目名称: j2se -DarchetypeArtifactId 项目类型: maven-archetype-quickstart -DinteractiveMode: false 表示前面参数都给了，就不用一个一个地输入了 mvn package (打包成jar) java -cp target/j2se-1.0-SNAPSHOT.jar com.how2java.App (执行jar) mvn archetype: generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=com.how2java -DartifactId=j2ee -DinteractiveMode=false 创建Web App,可以发现其中是maven-archetype-webapp</p>\n<h1 id=\"仓库\"><a href=\"#仓库\" class=\"headerlink\" title=\"仓库\"></a>仓库</h1><p>仓库就是来存放项目需要的jar包的。 maven采用一个仓库，多个项目的方式，让多个项目共享一个仓库里的相同jar包。 仓库默认位置: .\\apache-maven-3.5.3\\conf\\settings.xml 第53行</p>\n<pre><code>Default: ${user.home}/.m2/repository</code></pre><h1 id=\"修改下载路径\"><a href=\"#修改下载路径\" class=\"headerlink\" title=\"修改下载路径\"></a>修改下载路径</h1><p>这里用阿里的. 这里修改仓库默认地址(随便,好找): D:/Software/maven/repository 然后修改maven的镜像(mirrors)</p>\n<pre><code>&lt;mirrors&gt;\n  &lt;!-- mirror\n   | Specifies a repository mirror site to use instead of a given repository. The repository that\n   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n   |\n  &lt;mirror&gt;\n    &lt;id&gt;mirrorId&lt;/id&gt;\n    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;\n    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;\n    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;\n  &lt;/mirror&gt;\n   --&gt;\n   &lt;mirror&gt;\n   &lt;id&gt;alimaven&lt;/id&gt;\n       &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;\n       &lt;name&gt;aliyun maven&lt;/name&gt;\n       &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt;\n   &lt;mirror&gt;\n&lt;/mirrors&gt;</code></pre><h1 id=\"Maven风格的Java项目-听说很少用\"><a href=\"#Maven风格的Java项目-听说很少用\" class=\"headerlink\" title=\"Maven风格的Java项目(听说很少用)\"></a>Maven风格的Java项目(听说很少用)</h1><blockquote>\n<p>莫名其妙的东东,运行jar???多个入口怎么处理啊?迷,不过用来封jar包挺方便的/大概</p>\n</blockquote>\n<p>给个链接:<a href=\"http://how2j.cn/k/maven/maven-create-maven-project/1331.html#nowhere\" target=\"_blank\" rel=\"noopener\">http://how2j.cn/k/maven/maven-create-maven-project/1331.html#nowhere</a></p>\n<h2 id=\"windows-盘符跳转\"><a href=\"#windows-盘符跳转\" class=\"headerlink\" title=\"windows 盘符跳转\"></a>windows 盘符跳转</h2><p>cd /d D:\\Java 要在中间加上/d 或者直接 :e</p>\n<h1 id=\"配置安装以及接下来\"><a href=\"#配置安装以及接下来\" class=\"headerlink\" title=\"配置安装以及接下来\"></a>配置安装以及接下来</h1><p>配置见how2j 之后再Maven中添加包,直接在pom.xml下的Depen…中点Add 如果无法自动搜索 菜单-&gt;Window-&gt;Show View-&gt;Other-&gt;Maven-&gt;Maven Repositories-&gt;Local Repository-&gt;Rebuild Index 没有run on server 解决办法: <a href=\"https://blog.csdn.net/mr_yzko/article/details/78458873\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/mr_yzko/article/details/78458873</a> 然后可能出现jsp报错:导包即可 <a href=\"http://how2j.cn/k/maven/maven-eclipse-web-project/1334.html\" target=\"_blank\" rel=\"noopener\">http://how2j.cn/k/maven/maven-eclipse-web-project/1334.html</a></p>\n<h1 id=\"总结一下新建maven-webapp所出现的所有问题\"><a href=\"#总结一下新建maven-webapp所出现的所有问题\" class=\"headerlink\" title=\"总结一下新建maven webapp所出现的所有问题\"></a>总结一下新建maven webapp所出现的所有问题</h1><ol>\n<li><p>创建项目后的JDK版本错误</p>\n<blockquote>\n<p>右键-&gt;属性-&gt;Build Path-&gt;Libraries-&gt;JRE System…-&gt;Edit-&gt;Default JRE</p>\n</blockquote>\n</li>\n<li><p>无Run on server</p>\n<blockquote>\n<p>右键-&gt;属性-&gt;Project Facets-&gt;点那个蓝条-&gt;选中Dynamic Web Module和Javascript-&gt;OK</p>\n</blockquote>\n</li>\n<li><p>.jsp报错</p>\n<blockquote>\n<p>双击pom.xml-&gt;Dependencies-&gt;Add-&gt;javax.servlet-api</p>\n</blockquote>\n</li>\n<li><p>无法找到web文件夹和主页(初始404)</p>\n<blockquote>\n<p>完成第二步后-&gt;Deployment Assembly-&gt;查看Deploy Path为/的那一条的源路径是否正确-&gt;不正确,删除后修改为index.jsp所在目录-&gt;添加Maven Dependencies-&gt;OK</p>\n</blockquote>\n</li>\n<li><p>完成!</p>\n</li>\n</ol>\n<h1 id=\"pom-xml-基础模板\"><a href=\"#pom-xml-基础模板\" class=\"headerlink\" title=\"pom.xml 基础模板\"></a>pom.xml 基础模板</h1><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.funtl&lt;/groupId&gt;\n    &lt;artifactId&gt;hello-maven&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n            &lt;version&gt;4.0.1&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;</code></pre><h1 id=\"Maven统一架构\"><a href=\"#Maven统一架构\" class=\"headerlink\" title=\"Maven统一架构\"></a>Maven统一架构</h1><pre><code>├─src\n│  ├─main\n│  │  ├─java\n│  │  ├─resources\n│  │  └─webapp\n│  │      └─WEB-INF\n│  └─test\n│      └─java</code></pre><blockquote>\n<p>src：源码目录</p>\n<blockquote>\n<p>src/main/java：Java 源码目录 src/main/resources：资源文件目录 src/main/webapp：Web 相关目录 src/test：单元测试</p>\n</blockquote>\n</blockquote>\n","categories":[{"name":"Maven","slug":"Maven","count":2,"path":"api/categories/Maven.json"},{"name":"技术","slug":"Maven/技术","count":1,"path":"api/categories/Maven/技术.json"}],"tags":[{"name":"技术","slug":"技术","count":14,"path":"api/tags/技术.json"},{"name":"Maven","slug":"Maven","count":2,"path":"api/tags/Maven.json"}]}