{"title":"深入分析Java Web技术内幕-第一章","slug":"javaweb-first","date":"2018-06-20T09:58:36.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/javaweb-first.json","photos":[],"link":"","excerpt":null,"covers":["http://be-sunshine.cn/wp-content/uploads/2018/06/2713303ae852b2a4f191b57ad8872441.png","http://be-sunshine.cn/wp-content/uploads/2018/06/DNS.png","http://be-sunshine.cn/wp-content/uploads/2018/06/68e30bf436883aac699fb1f2dc6a31b4.png","http://be-sunshine.cn/wp-content/uploads/2018/06/32a0ba63290137ab8b526df51e354bae.png"],"content":"<h1><span id=\"cdn架构图\">CDN架构图</span></h1><p><img src=\"http://be-sunshine.cn/wp-content/uploads/2018/06/2713303ae852b2a4f191b57ad8872441.png\" alt></p>\n<h1><span id=\"发起请求\">发起请求</span></h1><p>一句话,发起一个HTTP请求的过程就是建立一个Socket通信的过程. 既然本质上就是建立一个Socket连接,那么我们完全可以模拟浏览器发出HTTP请求.(比如PostMan) -而HTTP协议的内容之前学过了,不再赘述(详见图灵的那本HTTP)</p>\n<h1><span id=\"http协议解析\">HTTP协议解析</span></h1><h2><span id=\"常见http请求头\">常见HTTP请求头:</span></h2><p>Accept-Charset: 用于指定<strong>客户端接受</strong>的字符集 Accept-Encoding: 用于指定<strong>可接受</strong>的<strong>内容编码</strong>如Accept-Encoding: gzip.deflate Accept-Language: 用于指定一种自然语言如 zh-cn Host: 用于指定被请求资源的主机和端口号 User-Agent: <strong>客户端</strong>将他的操作系统、浏览器和其他属性告诉服务器 Connection: 当前连接是否保持,如:Keep-Alive</p>\n<h2><span id=\"常见的http响应头\">常见的HTTP响应头</span></h2><p>Server: 使用的<strong>服务器</strong>名称,如 Server: Apache/1.3.6(Unix) Content-Type: 用于指定发送给<strong>接受者</strong>的实体正文的媒体类型 如: text/html;charset=GBK Content-Encoding: 与Accept-Encoding对应,告诉服务端采用什么压缩编码 Content-Language: 描述了资源所用的自然语言,与Accept-Language对应 Content-Length: 指明了实体正文长度.用以字节方存储的十进制数字来表示. Keep-Alive: 保持连接的时间,如-Keep-Alive: timeout=5,max=120</p>\n<h2><span id=\"创建http状态码\">创建HTTP状态码</span></h2><p>200 OK 302 临时跳转/缓存 400 请求有语法错误 403 拒绝 404 不存在 500 不可预期错误</p>\n<h2><span id=\"查看http工具\">查看HTTP工具</span></h2><p>F12</p>\n<h2><span id=\"拒绝缓存载入页面\">拒绝缓存载入页面</span></h2><p>Ctrl+F5</p>\n<h2><span id=\"dns域名解析\">DNS域名解析</span></h2><p>分十步进行: <img src=\"http://be-sunshine.cn/wp-content/uploads/2018/06/DNS.png\" alt=\"Aaron\"> 但可能不知这十步,因为name server可能会有多级,或者有一个GTM来负载均衡控制. <strong>nslookup</strong>可以来看域名的解析结果 linux 可以用dig来查询DNS解析过程</p>\n<h2><span id=\"清除缓存的域名\">清除缓存的域名</span></h2><p>windows下: ipconfig /flushdns Linux下: /etc/init.d/nscd restart</p>\n<h2><span id=\"其他的\">其他的</span></h2><p>JVM也会缓存一些DNS,这个缓存是在InetAddress类中完成的. <img src=\"http://be-sunshine.cn/wp-content/uploads/2018/06/68e30bf436883aac699fb1f2dc6a31b4.png\" alt> <img src=\"http://be-sunshine.cn/wp-content/uploads/2018/06/97fed91e3b53394a68b9a38125e2142f.png\" alt></p>\n<h1><span id=\"几种域名解析方式\">几种域名解析方式</span></h1><blockquote>\n<p>有服务器的童鞋一定接触过 A记录</p>\n<blockquote>\n<p>Address,可将多个域名解析到一个地址</p>\n</blockquote>\n<p>MX记录</p>\n<blockquote>\n<p>Mail Exchange,将某域名下的邮件服务器指向自己的Mail Server，DNS会将邮件发向对应的邮件路由</p>\n</blockquote>\n<p>CNAME记录</p>\n<blockquote>\n<p>Canonical Name(别名解析),为一个域名设置一个或多个别名,如,taobao.com解析到xulingbo.net.则xulingbo.net是taobao.net的别名.</p>\n</blockquote>\n<p>NS记录</p>\n<blockquote>\n<p>为某域名指定DNS解析服务器.</p>\n</blockquote>\n<p>TXT记录</p>\n<blockquote>\n<p>为某个主机名或域名设置说明.</p>\n</blockquote>\n</blockquote>\n<h1><span id=\"cdn工作机制\">CDN工作机制</span></h1><blockquote>\n<p>Content Delivery Network,内容分布网络. 将信息发布到最接近用户的”边缘”,使用户可以就近取得所需的内容. CDN=镜像(Mirror)+缓存(Cache)+整体负载均衡(GSLB). CDN可以明显提高Internet中信息流动的效率.</p>\n</blockquote>\n<p>目前CDN都以缓存静态数据为主,如CSS,JS,图片和静态页面等. 淘宝有90%的数据由CDN提供. 通常来说CDN要完成以下几个目标:</p>\n<blockquote>\n<p>可扩展 安全性 可靠性,响应和执行</p>\n</blockquote>\n<h2><span id=\"通常的cdn架构\">通常的CDN架构</span></h2><p><img src=\"http://be-sunshine.cn/wp-content/uploads/2018/06/32a0ba63290137ab8b526df51e354bae.png\" alt></p>\n<h1><span id=\"负载均衡load-balance\">负载均衡(Load Balance)</span></h1><p>负载均衡就是对工作任务进行平衡,分摊到多个操作单元上执行,如图片服务器,应用服务器等,共同完成工作任务。它可以提高服务器响应速度及利用效率. 负载均衡是有DNS解析来完成的. 常用在集群中,分为软件/硬件负载均衡.</p>\n","categories":[{"name":"技术","slug":"技术","count":10,"path":"api/categories/技术.json"}],"tags":[{"name":"技术","slug":"技术","count":14,"path":"api/tags/技术.json"}]}