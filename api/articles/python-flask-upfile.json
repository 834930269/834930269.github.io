{"title":"Python Flask 10.0.1上传文件","slug":"python-flask-upfile","date":"2017-10-17T13:55:17.000Z","updated":"2019-07-03T13:51:36.858Z","comments":true,"path":"api/articles/python-flask-upfile.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><code>1.</code> <code>os模块</code>:</p>\n<pre><code>#获取指定文件目录\nos.path.abspath(os.path.join(os.getcwd(),&quot;static/Gravatar&quot;))</code></pre><p><code>2.``Flask_wtf.file包</code>:里面放着各种处理文件上传的处理表单类. <code>3.</code>获取当前文件的<code>url</code>:</p>\n<pre><code>if filename is None:\n    fn=&apos;default.jpg&apos;\nelse:\n    fn=filename\nfn = os.path.abspath(os.path.join(app.config[&apos;UPLOADED_PHOTOS_DEST&apos;],fn))</code></pre><p><code>代码</code>:</p>\n<pre><code>#app.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask, render_template\nfrom flask_uploads import UploadSet, configure_uploads, IMAGES, patch_request_class\nfrom flask_wtf import FlaskForm\nfrom flask_wtf.file import FileField, FileRequired, FileAllowed\nfrom wtforms import SubmitField\nimport os\n\napp = Flask(__name__)\napp.config[&apos;SECRET_KEY&apos;] = &apos;I have a dream&apos;\napp.config[&apos;UPLOADED_PHOTOS_DEST&apos;] = os.path.abspath(os.path.join(os.getcwd(),&quot;static/Gravatar&quot;))\n\nphotos = UploadSet(&apos;photos&apos;,IMAGES)\nconfigure_uploads(app,photos)\npatch_request_class(app)\n\n#创建Form\nclass UploadForm(FlaskForm):\n    photo = FileField(validators=[FileAllowed(photos,u&apos;只能上传图片哦!&apos;),\n                                  FileRequired(u&apos;文件为选择!&apos;)])\n    submit = SubmitField(u&apos;上传&apos;)\n\n@app.route(&apos;/&apos;,methods=[&apos;GET&apos;,&apos;POST&apos;])\ndef upload_file():\n    form = UploadForm()\n    if form.validate_on_submit():\n        filename = photos.save(form.photo.data)\n        file_url = photos.url(filename)\n    else:\n        file_url = None\n        filename = None\n    if filename is None:\n        fn=&apos;default.jpg&apos;\n    else:\n        fn=filename\n    fn = os.path.abspath(os.path.join(app.config[&apos;UPLOADED_PHOTOS_DEST&apos;],fn))\n    return render_template(&apos;index.html&apos;,form=form,file_url=file_url,filename=fn)\n\nif __name__ == &apos;__main__&apos;:\n    app.run()</code></pre><p><code>前台-app/templates</code>:</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;title&gt;Upload File&lt;/title&gt;\n&lt;h1&gt;图片上传&lt;/h1&gt;\n&lt;form method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;\n     { { form.hidden_tag() }}\n     { { form.photo }}\n     {% for error in form.photo.errors %}\n             <span style=\"color: red;\">{ { error }}</span>\n         {% endfor %}\n     { { form.submit }}\n&lt;/form&gt;\n{ { filename }}\n{% if file_url %}\n    <br><img src=\"{ { file_url }}\">\n    {% endif %}</code></pre>","categories":[{"name":"Flask","slug":"Flask","count":18,"path":"api/categories/Flask.json"},{"name":"Python","slug":"Flask/Python","count":16,"path":"api/categories/Flask/Python.json"}],"tags":[{"name":"Flask","slug":"Flask","count":20,"path":"api/tags/Flask.json"},{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}