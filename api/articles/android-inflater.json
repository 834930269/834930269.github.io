{"title":"Android Inflater","slug":"android-inflater","date":"2017-04-09T02:16:24.000Z","updated":"2019-07-03T13:51:36.847Z","comments":true,"path":"api/articles/android-inflater.json","photos":[],"link":"","excerpt":null,"covers":["http://common.cnblogs.com/images/copycode.gif","http://common.cnblogs.com/images/copycode.gif"],"content":"<p>在 实际开发中LayoutInflater这个类还是非常有用的，它的作用类似于findViewById()。不同点是LayoutInflater是用 来找res/layout/下的xml布局文件，并且实例化；而findViewById()是找xml布局文件下的具体widget控件(如 Button、TextView等)。 具体作用： 1、对于一个没有被载入或者想要动态载入的界面，都需要使用LayoutInflater.inflate()来载入； 2、对于一个已经载入的界面，就可以使用Activiyt.findViewById()方法来获得其中的界面元素。 LayoutInflater 是一个抽象类，在文档中如下声明：</p>\n<blockquote>\n<p>public abstract class LayoutInflater extends Object</p>\n</blockquote>\n<p><strong>获得 LayoutInflater 实例的三种方式</strong> <strong>1.</strong></p>\n<blockquote>\n<p>LayoutInflater inflater = getLayoutInflater();  //调用Activity的getLayoutInflater()</p>\n</blockquote>\n<p>2.</p>\n<blockquote>\n<p>LayoutInflater localinflater =(LayoutInflater)context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);</p>\n</blockquote>\n<p>3.</p>\n<blockquote>\n<p> LayoutInflater inflater = LayoutInflater.from(context);</p>\n</blockquote>\n<p>其实，这三种方式本质是相同的，从源码中可以看出： <strong>getLayoutInflater()：</strong> Activity 的 getLayoutInflater() 方法是调用 PhoneWindow 的getLayoutInflater()方法，看一下该源代码：  </p>\n<blockquote>\n<p> public PhoneWindow(Context context) {<br>        super(context);<br>        mLayoutInflater = LayoutInflater.from(context);<br>}</p>\n</blockquote>\n<p>  可以看出它其实是调用 LayoutInflater.from(context)。 <strong>LayoutInflater.from(context)：</strong></p>\n<p><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p>\n<blockquote>\n<p>public static LayoutInflater from(Context context) {<br>    LayoutInflater LayoutInflater =<br>            (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<br>    if (LayoutInflater == null) {<br>        throw new AssertionError(“LayoutInflater not found.”);<br>    }<br>    return LayoutInflater;<br>}</p>\n</blockquote>\n<p><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p>\n<p>可以看出它其实调用 context.getSystemService()。 <strong>结论：所以这三种方式最终本质是都是调用的Context.getSystemService()。</strong> <strong>inflate 方法 通过 sdk 的 api 文档，可以知道该方法有以下几种过载形式，返回值均是 View 对象，如下</strong></p>\n<blockquote>\n<p>public View inflate (int resource, ViewGroup root)<br>public View inflate (XmlPullParser parser, ViewGroup root)<br>public View inflate (XmlPullParser parser, ViewGroup root, boolean attachToRoot)<br>public View inflate (int resource, ViewGroup root, boolean attachToRoot)</p>\n</blockquote>\n<p>示意代码：  </p>\n<blockquote>\n<p>LayoutInflater inflater = (LayoutInflater)getSystemService(LAYOUT_INFLATER_SERVICE);<br>View view = inflater.inflate(R.layout.custom, (ViewGroup)findViewById(R.id.test));<br>//EditText editText = (EditText)findViewById(R.id.content);// error<br>EditText editText = (EditText)view.findViewById(R.id.content);</p>\n</blockquote>\n<p>  <strong>对于上面代码，指定了第二个参数 ViewGroup root，当然你也可以设置为 null 值。</strong> <strong>注意：</strong></p>\n<ul>\n<li>·inflate 方法与 findViewById 方法不同；</li>\n<li>·inflater 是用来找 res/layout 下的 xml 布局文件，并且实例化；</li>\n<li>·findViewById() 是找具体 xml 布局文件中的具体 widget 控件(如:Button、TextView 等)。</li>\n</ul>\n<p>############## <a href=\"http://blog.sina.com.cn/s/blog_48a45b950100u8ax.html\" target=\"_blank\" rel=\"noopener\">http://blog.sina.com.cn/s/blog_48a45b950100u8ax.html</a></p>\n","categories":[{"name":"Android","slug":"Android","count":5,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":5,"path":"api/tags/Android.json"}]}