{"title":"第八届ACM省赛 K CF","slug":"acm-k-cf","date":"2018-01-18T07:35:38.000Z","updated":"2019-07-03T13:51:36.860Z","comments":true,"path":"api/articles/acm-k-cf.json","photos":[],"link":"","excerpt":null,"covers":["http://acm.sdut.edu.cn/image/3903.png"],"content":"<h3><span id=\"cf\">CF</span></h3><p><strong>sdut 3903</strong> Time Limit: 1000MS Memory Limit: 65536KB</p>\n<h4><span id=\"problem-description\">Problem Description</span></h4><p><img src=\"http://acm.sdut.edu.cn/image/3903.png\" alt> LYD loves codeforces since there are many Russian contests. In an contest lasting for <em>T</em> minutes there are <em>n</em> problems, and for the <em>i__th</em> problem you can get <em>a__i_−_d__i_∗_t__i</em> points, where <em>a__i</em> indicates the initial points, <em>d__i</em> indicates the points decreased per minute (count from the beginning of the contest), and <em>t__i</em> stands for the passed minutes when you solved the problem (count from the begining of the contest).<br>Now you know LYD can solve the <em>i__th</em> problem in <em>c__i</em> minutes. He can’t perform as a multi-core processor, so he can think of only one problem at a moment. Can you help him get as many points as he can?</p>\n<h4><span id=\"input\">Input</span></h4><p>The first line contains two integers <em>n</em>,<em>T</em>(0≤<em>n</em>≤2000,0≤<em>T</em>≤5000).<br>The second line contains <em>n</em> integers <em>a</em>1,<em>a</em>2,..,<em>a__n</em>(0&lt;<em>a__i_≤6000).<br>The third line contains _n</em> integers <em>d</em>1,<em>d</em>2,..,<em>d__n</em>(0&lt;<em>d__i_≤50).<br>The forth line contains _n</em> integers <em>c</em>1,<em>c</em>2,..,<em>c__n</em>(0&lt;_c__i_≤400).</p>\n<h4><span id=\"output\">Output</span></h4><p>Output an integer in a single line, indicating the maximum points LYD can get.</p>\n<h4><span id=\"example-input\">Example Input</span></h4><p>3 10<br>100 200 250<br>5 6 7<br>2 4 10</p>\n<h4><span id=\"example-output\">Example Output</span></h4><p>254</p>\n<h4><span id=\"题意\"><strong>题意</strong></span></h4><p>有 n 道题目，每一道题都有一个初始分值 ai ，每个单位时间这道题的分数便会减少 di ，而我们可以在 ci 时间内做出这道题而得到分数，求在时间 T 内最多可以获得的分数。</p>\n<h4><span id=\"题解\"><strong>题解</strong></span></h4><p>首先可以感觉出这是道0-1背包问题,然后我们需要知道,当我们做题时,会一两个角度来选择题目,其一是选择做题速度最快的,其二是选择做分值降低速度最快的.那么我们的衡量标准就可以看成先做单位时间内做题最多的那道. 然后我们根据上述规则排一下序. 在用排序后的数组进行0-1背包.在背包过程中记录最大值,即为最后的结果.</p>\n<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int maxn=3000;\n\nstruct pro{\n    int a,d,c;\n    //按单位时间内减少分值排序\n    bool operator &lt;(const pro &amp;pt)const{\n        return 1.0*d/c&gt;(1.0*pt.d/pt.c);\n    }\n};\n\nint n,T;\npro p[maxn];\nint dp[5010];\nint main(){\n    while(~scanf(&quot;%d%d&quot;,&amp;n,&amp;T)){\n        memset(dp,0,sizeof(dp));\n        for(int i=0;i&lt;n;++i){\n            scanf(&quot;%d&quot;,&amp;p[i].a);\n        }\n        for(int i=0;i&lt;n;++i){\n            scanf(&quot;%d&quot;,&amp;p[i].d);\n        }\n        for(int i=0;i&lt;n;++i){\n            scanf(&quot;%d&quot;,&amp;p[i].c);\n        }\n        sort(p,p+n);\n        int mx=-1;\n        for(int i=0;i&lt;n;++i){\n            for(int j=T;j&gt;=0;--j){\n                if(j&gt;=p[i].c){\n                    dp[j]=max(dp[j],dp[j-p[i].c]+p[i].a-j*p[i].d);\n                }\n                mx=max(mx,dp[j]);\n            }\n        }\n        printf(&quot;%d\\n&quot;,mx);\n    }\n    return 0;\n}</code></pre>","categories":[{"name":"Sdut","slug":"Sdut","count":11,"path":"api/categories/Sdut.json"},{"name":"动态规划","slug":"Sdut/动态规划","count":2,"path":"api/categories/Sdut/动态规划.json"},{"name":"第八届ACM山东省赛","slug":"Sdut/动态规划/第八届ACM山东省赛","count":1,"path":"api/categories/Sdut/动态规划/第八届ACM山东省赛.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":24,"path":"api/tags/动态规划.json"},{"name":"sdut","slug":"sdut","count":11,"path":"api/tags/sdut.json"},{"name":"第八届ACM山东省赛","slug":"第八届ACM山东省赛","count":3,"path":"api/tags/第八届ACM山东省赛.json"}]}