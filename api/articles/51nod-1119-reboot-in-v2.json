{"title":"51nod 1119 机器人走方格V2","slug":"51nod-1119-reboot-in-v2","date":"2018-03-07T07:42:36.000Z","updated":"2019-07-03T13:51:36.862Z","comments":true,"path":"api/articles/51nod-1119-reboot-in-v2.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"Type-组合数学-二项式定理-逆元\"><a href=\"#Type-组合数学-二项式定理-逆元\" class=\"headerlink\" title=\"Type: 组合数学,二项式定理,逆元\"></a>Type: 组合数学,二项式定理,逆元</h1><h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>M * N的方格，一个机器人从左上走到右下，只能向右或向下走。有多少种不同的走法？由于方法数量可能很大，只需要输出Mod 10^9 + 7的结果。</p>\n<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><p>第1行，2个数M,N，中间用空格隔开。（2 &lt;= m,n &lt;= 1000000)</p>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><p>输出走法的数量 Mod 10^9 + 7。</p>\n<h1 id=\"Input示例\"><a href=\"#Input示例\" class=\"headerlink\" title=\"Input示例\"></a>Input示例</h1><p>2 3</p>\n<h1 id=\"Output示例\"><a href=\"#Output示例\" class=\"headerlink\" title=\"Output示例\"></a>Output示例</h1><p>3</p>\n<h1 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h1><blockquote>\n<p>画一下图会发现这就是杨辉三角,而我们需要求的是C(N+M-2,N-1) 用逆元和递推公式算一下就可以了</p>\n</blockquote>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long LL;\nconst int mod=1e9+7;\nconst int maxn=1000000+10;\nint m,n;\n\nLL inv[maxn];\nvoid init(){\n    inv[1]=1;\n    for(int i=2;i&lt;maxn;++i){\n        inv[i]=(mod-mod/i)*1ll*inv[mod%i]%mod;\n    }\n}\n\nLL solve(int N,int M){\n    ///ans=C(N,M)\n    //cout&lt;&lt;N&lt;&lt;&quot; &quot;&lt;&lt;M&lt;&lt;endl;\n    LL ans=1;\n    for(int i=1;i&lt;=M;++i){\n        ans=ans*(N-i+1)*1ll%mod*inv[i]%mod;\n    }\n    return ans;\n}\n\nint main(){\n    init();\n    while(cin&gt;&gt;m&gt;&gt;n){\n        cout&lt;&lt;solve(n+m-2,n-1)&lt;&lt;endl;\n    }\n    return 0;\n}</code></pre>","categories":[{"name":"51nod","slug":"51nod","count":12,"path":"api/categories/51nod.json"},{"name":"二项式定理","slug":"51nod/二项式定理","count":1,"path":"api/categories/51nod/二项式定理.json"},{"name":"组合数学","slug":"51nod/二项式定理/组合数学","count":1,"path":"api/categories/51nod/二项式定理/组合数学.json"},{"name":"逆元","slug":"51nod/二项式定理/组合数学/逆元","count":1,"path":"api/categories/51nod/二项式定理/组合数学/逆元.json"}],"tags":[{"name":"51nod","slug":"51nod","count":12,"path":"api/tags/51nod.json"},{"name":"二项式定理","slug":"二项式定理","count":1,"path":"api/tags/二项式定理.json"},{"name":"组合数学","slug":"组合数学","count":12,"path":"api/tags/组合数学.json"},{"name":"逆元","slug":"逆元","count":4,"path":"api/tags/逆元.json"}]}