{"title":"Java 接口","slug":"java-interface","date":"2018-01-12T13:20:38.000Z","updated":"2019-07-03T13:51:36.860Z","comments":true,"path":"api/articles/java-interface.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>接口(interface)的继承需要使用实现(implements)关键词,可以多继承 首先我们新建一个AD类型英雄的接口:</p>\n<pre><code>package charactor;\n\npublic interface AD {\n    //声明一个接口方法\n    //物理伤害\n    public void physicAttack();\n}</code></pre><p>然后我们新建一个AD英雄:</p>\n<pre><code>package charactor;\n\npublic class ADHero extends Hero implements AD{\n    @Override\n    public void physicAttack(){\n        System.out.print(&quot;进行物理攻击&quot;);\n    }\n}</code></pre><p>然后我们新建一个AP类型英雄的接口:</p>\n<pre><code>package charactor;\n\npublic interface AP {\n    public void magicAttack();\n}</code></pre><p>然后我们实现一个AP英雄:</p>\n<pre><code>package charactor;\n\npublic class APHero extends Hero implements AP{\n    @Override\n    public void magicAttack(){\n        System.out.println(&quot;魔法攻击&quot;);\n    }\n}</code></pre><p>然后我们实现一个既可以魔法攻击,又可以物理攻击的英雄:</p>\n<pre><code>package charactor;\n\npublic class ADAPHero extends Hero implements AD,AP{\n    @Override\n    public void physicAttack(){\n        System.out.println(&quot;物理攻击&quot;);\n    }\n    public void magicAttack(){\n        System.out.println(&quot;魔法攻击&quot;);\n    }\n}</code></pre>","categories":[{"name":"Java","slug":"Java","count":21,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":21,"path":"api/tags/Java.json"}]}