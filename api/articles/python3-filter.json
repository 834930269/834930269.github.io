{"title":"python3学习 筛选器filter+筛回文数+艾氏筛法filter写法","slug":"python3-filter","date":"2017-07-13T08:47:07.000Z","updated":"2019-07-03T13:51:36.849Z","comments":true,"path":"api/articles/python3-filter.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【Source Code】</strong> <strong><a href=\"https://github.com/834930269/python_study/blob/master/filter/filter.py\" target=\"_blank\" rel=\"noopener\">filter.py</a></strong></p>\n<hr>\n<p> **# coding: utf-8</p>\n<p># In[1]:</p>\n<p>‘’’<br>Python内建的filter()函数用于过滤序列。</p>\n<p>和map()类似，filter()也接收一个函数和一个序列。和map()不同的是，filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。</p>\n<p>例如，在一个list中，删掉偶数，只保留奇数，可以这么写：<br>‘’’<br>def is_odd(x):<br>    return x&amp;1==1<br>print(list(filter(is_odd,[1,2,4,5,6,9,10,15])))</p>\n<p># In[2]:</p>\n<p>#把一个序列中的空字符串删掉，可以这么写：<br>def not_empty(s):<br>    return s and s.strip()<br>print(list(filter(not_empty, [‘A’, ‘’, ‘B’, None, ‘C’, ‘  ‘])))</p>\n<p># In[8]:</p>\n<p>#filter实现无穷数的艾筛</p>\n<p>#暂未明白多个filter是怎么筛的<br>def _odd_iter():<br>    n = 1<br>    while True:<br>        n = n + 2<br>        yield n<br>def _not_divisible(n):<br>    return lambda x: x % n &gt; 0<br>def primes():<br>    yield 2<br>    it = _odd_iter() # 初始序列<br>    while True:<br>        n = next(it) # 返回序列的第一个数<br>        yield n<br>        it = filter(_not_divisible(n), it) # 构造新序列<br># 打印1000以内的素数:<br>for n in primes():<br>    if n &lt; 10:<br>        print(n)<br>    else:<br>        break</p>\n<p># In[9]:</p>\n<p>#去除非回文数<br>def is_palindrome(n):<br>    return str(n)==str(n)[::-1]<br># 测试:<br>output = filter(is_palindrome, range(1, 1000))<br>print(list(output))</p>\n<p># In[ ]:</p>\n<p>【前面的问题】<br>果然是嵌套<br>形同:it = filter(_not_divisible(n), it)只是给“奇数生成器”嵌套了一个过滤规则。执行了几次循环之后，这个生成器就成了：<br>(剔除能被7整除的(剔除能被5整除的(剔除能被3整除的(剔除能被2整除的(奇数生成器)))))<br>效率特别差= =**</p>\n","categories":[{"name":"Python","slug":"Python","count":41,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}