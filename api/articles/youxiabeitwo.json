{"title":"「游族杯」上海市高校程序设计邀请赛暨华东师范大学第九届 ECNU Coder 程序设计竞赛 (重现) F","slug":"youxiabeitwo","date":"2017-05-21T10:01:25.000Z","updated":"2019-07-03T13:51:36.848Z","comments":true,"path":"api/articles/youxiabeitwo.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【思路】</strong> <strong>因为时间是个天然的序,所以我们只需要去考虑蚂蚁的朝向和位置即可.而蚂蚁是否被吃也可以通过是否有和他相向而行的蚂蚁来判断.</strong> <strong>用栈来边输入(输入是向右进行的,所以我们就让右行的蚂蚁固定,用左行的蚂蚁来吃与被吃..好残忍= =)边模拟这一过程.(其实只要是链表形式的都可以用来模拟,因为这样会节省时间</strong> <strong>【Code】</strong></p>\n<blockquote>\n<p><strong>#include &lt;bits/stdc++.h&gt;</strong> <strong>using namespace std;</strong> <strong>typedef long long ll;</strong> <strong>const int INF = 0x3f3f3f3f;</strong> <strong>#define cle(a,val) memset(a,(val),sizeof(a))</strong> <strong>#define SI(N) scanf(“%d”,&amp;(N))</strong> <strong>#define SII(N,M) scanf(“%d %d”,&amp;(N),&amp;(M))</strong> <strong>#define SIII(N,M,K) scanf(“%d %d %d”,&amp;(N),&amp;(M),&amp;(K))</strong> <strong>#define rep(i,b) for(int i=0;i&lt;(b);i++)</strong> <strong>#define rez(i,a,b) for(int i=(a);i&lt;=(b);i++)</strong> <strong>#define red(i,a,b) for(int i=(a);i&gt;=(b);i–)</strong> <strong>const ll LINF = 0x3f3f3f3f3f3f3f3f;</strong> <strong>#define PU(x) puts(#x);</strong> <strong>#define PI(A) cout&lt;&lt;(A)&lt;&lt;endl;</strong> <strong>#define DG(x) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;endl;</strong> <strong>#define DGG(x,y) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;” “&lt;&lt;#y&lt;&lt;”=”&lt;&lt;(y)&lt;&lt;endl;</strong> <strong>#define DGGG(x,y,z) cout&lt;&lt;#x&lt;&lt;”=”&lt;&lt;(x)&lt;&lt;” “&lt;&lt;#y&lt;&lt;”=”&lt;&lt;(y)&lt;&lt;” “&lt;&lt;#z&lt;&lt;”=”&lt;&lt;(z)&lt;&lt;endl;</strong> <strong>#define PIar(a,n) rep(i,n)cout&lt;&lt;a[i]&lt;&lt;” “;cout&lt;&lt;endl;</strong> <strong>#define PIarr(a,n,m) rep(aa,n){rep(bb, m)cout&lt;&lt;a[aa][bb]&lt;&lt;” “;cout&lt;&lt;endl;}</strong> <strong>const double EPS = 1e-9 ;</strong> <strong>struct Star{</strong> **    int A,B;** <strong>};</strong> <strong>stack<star> Inti;</star></strong> <strong>int N,A,B;</strong> <strong>int main(){</strong> **    freopen(“in.txt”, “r”, stdin);** **    freopen(“out.txt”, “w”, stdout);** **    while(~scanf(“%d”,&amp;N)){** **        while(!Inti.empty()){** **            Inti.pop();** **        }** **        rep(i,N){** **            scanf(“%d%d”,&amp;A,&amp;B);** **            //Inti.push_back((Star){A,B,true});** **            if(B==1 || (!Inti.empty() &amp;&amp; Inti.top().B==0)){** **                Inti.push((Star){A,B});** **            }else{** **                int flag=0;** **                while(!Inti.empty()){** **                    if(Inti.top().B==1){** **                        if(Inti.top().A&lt;A){** **                            Inti.pop();** **                        }else{** **                            flag=1;** **                        }** **                        if(flag) break;** **                    }else break;** **                }** **                if(!flag){** **                    Inti.push((Star){A,B});** **                }** **            }** **        }** **        printf(“%d\\n”,Inti.size());** **    }** **    return 0;** <strong>}</strong></p>\n</blockquote>\n<p><strong>【输入数据 in.txt】</strong> <strong>12</strong> <strong>8 1</strong> <strong>5 0</strong> <strong>3 1</strong> <strong>6 0</strong> <strong>7 1</strong> <strong>4 0</strong> <strong>1 1</strong> <strong>9 0</strong> <strong>2 1</strong> <strong>13 0</strong> <strong>15 1</strong> <strong>32 0</strong> <strong>5</strong> <strong>4 0</strong> <strong>3 1</strong> <strong>2 0</strong> <strong>1 0</strong> <strong>5 0</strong> <strong>12</strong> <strong>8 0</strong> <strong>5 1</strong> <strong>3 0</strong> <strong>6 1</strong> <strong>7 0</strong> <strong>4 1</strong> <strong>1 0</strong> <strong>9 1</strong> <strong>2 0</strong> <strong>13 1</strong> <strong>15 0</strong> <strong>32 1</strong> <strong>【输出数据】</strong> <strong>3</strong> <strong>2</strong> <strong>4</strong></p>\n","categories":[{"name":"ECNU","slug":"ECNU","count":2,"path":"api/categories/ECNU.json"},{"name":"思维","slug":"ECNU/思维","count":2,"path":"api/categories/ECNU/思维.json"}],"tags":[{"name":"思维","slug":"思维","count":17,"path":"api/tags/思维.json"},{"name":"ECNU","slug":"ECNU","count":2,"path":"api/tags/ECNU.json"}]}