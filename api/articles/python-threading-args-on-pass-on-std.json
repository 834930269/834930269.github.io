{"title":"关于Python-threading中的args参数传递到std中","slug":"python-threading-args-on-pass-on-std","date":"2017-10-05T05:32:23.000Z","updated":"2019-07-03T13:51:36.858Z","comments":true,"path":"api/articles/python-threading-args-on-pass-on-std.json","photos":[],"link":"","excerpt":null,"covers":["http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171005132855.png"],"content":"<p>示例代码及标注如下</p>\n<pre><code>import threading\n\n# 创建全局ThreadLocal对象:\nlocal_school = threading.local()\n\ndef process_student():\n    # 获取当前线程关联的student:\n    std = local_school.student\n    #以下这句证明了std是args的第一个元素的值\n    if isinstance(std,list):\n        print(std[2][&apos;Hello&apos;])\n    print(&apos;Hello, %s (in %s)&apos; % (std, threading.current_thread().name))\n\ndef process_thread(name):\n    # 绑定ThreadLocal的student:\n    local_school.student = name\n    process_student()\n\nt1 = threading.Thread(target= process_thread, args=([&apos;Alice&apos;,123,{&quot;Hello&quot;:&quot;seek&quot;}],), name=&apos;Thread-A&apos;)\nt2 = threading.Thread(target= process_thread, args=(&apos;Bob&apos;,), name=&apos;Thread-B&apos;)\nt1.start()\nt2.start()\nt1.join()\nt2.join()</code></pre><p>结果如下: <img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171005132855.png\" alt=\"Aaron\"> 可以看到,第一个参数的第三个参数是dict类型,,不是string. 而且所有的参数都是在args的第一个元素内传递的.</p>\n","categories":[{"name":"Process","slug":"Process","count":2,"path":"api/categories/Process.json"}],"tags":[{"name":"Process","slug":"Process","count":2,"path":"api/tags/Process.json"}]}