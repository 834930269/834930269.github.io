{"title":"C++操作CMD并返回结果","slug":"c-cmd","date":"2017-09-12T10:53:51.000Z","updated":"2019-07-03T13:51:36.852Z","comments":true,"path":"api/articles/c-cmd.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<pre><code>#include &lt;iostream&gt;  \nusing namespace std ;  \n// 描述:execmd函数执行命令，并将结果存储到result字符串数组中   \n// 参数:cmd表示要执行的命令  \n// result是执行的结果存储的字符串数组  \n// 函数执行成功返回1，失败返回0    \nint execmd(char* cmd,char* result) {  \n    char buffer[128];                         //定义缓冲区                          \n    FILE* pipe = _popen(cmd, &quot;r&quot;);            //打开管道，并执行命令   \n    if (!pipe)  \n        return 0;                      //返回0表示运行失败   \n\n    while(!feof(pipe)) {  \n        if(fgets(buffer, 128, pipe)){             //将管道输出到result中   \n            strcat(result,buffer);  \n        }  \n    }  \n    _pclose(pipe);                            //关闭管道   \n    return 1;                                 //返回1表示运行成功   \n}  \n\nint main(){  \n    char result[1024*4]=&quot;&quot;;                   //定义存放结果的字符串数组   \n    if(1==execmd(&quot;ipconfig&quot;,result)){  \n        printf(result);  \n    }  \n    system(&quot;pause&quot;);                          //暂停以查看结果   \n}</code></pre>","categories":[{"name":"未分类","slug":"未分类","count":16,"path":"api/categories/未分类.json"}],"tags":[]}