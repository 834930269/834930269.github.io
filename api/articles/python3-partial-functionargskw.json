{"title":"python3学习 偏函数Partial_function+args+kw","slug":"python3-partial-functionargskw","date":"2017-07-14T07:20:06.000Z","updated":"2019-07-03T13:51:36.849Z","comments":true,"path":"api/articles/python3-partial-functionargskw.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【Source Code】</strong> <strong><a href=\"https://github.com/834930269/python_study/blob/master/Partial_function/Partial_function.py\" target=\"_blank\" rel=\"noopener\">github: Partial_Function.py</a></strong></p>\n<hr>\n<p> **# coding: utf-8</p>\n<p># In[2]:</p>\n<p>#Partial function包含在functools中</p>\n<p>#int可以将字符串转换成整形<br>print(‘十进制: ‘,int(‘123456’),’\\n’)</p>\n<p># In[12]:</p>\n<p>#但int()函数还提供额外的base参数，默认值为10。</p>\n<p>#如果传入base参数，就可以做N进制的转换：<br>print(‘十六进制转十进制: ‘,int(‘E123456’,16),’\\n’)</p>\n<p># In[13]:</p>\n<p>#假设要转换大量的二进制字符串，每次都传入int(x, base=2)</p>\n<p>#非常麻烦，于是，我们想到，可以定义一个int2()的函数，默</p>\n<p>#认把base=2传进去：<br>def int2(x, base=2):<br>    return int(x, base)<br>print(‘二进制转十进制: ‘,int2(‘1000000’))<br>print(‘二进制转十进制: ‘,int2(‘1010101’))</p>\n<p># In[14]:</p>\n<p>#functools.partial就是帮助我们创建一个偏函数的，不需要我</p>\n<p>#们自己定义int2()，可以直接使用下面的代码创建一个新的函数int2：<br>import functools<br>int3=functools.partial(int,base=2)<br>print(‘二进制转十进制: ‘,int3(‘1000000’))<br>print(‘二进制转十进制: ‘,int3(‘1010101’))</p>\n<p># In[22]:</p>\n<p>‘’’<br>创建偏函数时，实际上可以接收函数对象、*args和**kw这3个参数，当传入：</p>\n<p>int2 = functools.partial(int, base=2)</p>\n<p>实际上固定了int()函数的关键字参数base，也就是：</p>\n<p>int2(‘10010’)</p>\n<p>相当于：</p>\n<p>kw = { ‘base’: 2 }<br>int(‘10010’, **kw)</p>\n<p>当传入：</p>\n<p>max2 = functools.partial(max, 10)</p>\n<p>实际上会把10作为*args的一部分自动加到左边，也就是：</p>\n<p>max2(5, 6, 7)</p>\n<p>相当于：</p>\n<p>args = (10, 5, 6, 7)<br>max(*args)</p>\n<p>‘’’</p>\n<p>max2 = functools.partial(max)<br>args = (10, 5, 6, 7)<br>print(max2(*args))</p>\n<p>#out:10<br>max3 = functools.partial(max,102)<br>args = (10, 5, 6, 7)<br>print(max3(*args))</p>\n<p>#OUT:102**</p>\n","categories":[{"name":"Python","slug":"Python","count":41,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}