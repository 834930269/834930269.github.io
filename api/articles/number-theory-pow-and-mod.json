{"title":"数论 -  幂乘以及取模相关推导","slug":"number-theory-pow-and-mod","date":"2017-11-25T06:21:18.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/number-theory-pow-and-mod.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>幂乘都很熟悉了.将n的乘法降为lgn的乘法次数.</p>\n<blockquote>\n<p>mod相关</p>\n<blockquote>\n<p>:arrow_forward:计算加法时,每项加一次执行一次%M :arrow_forward:计算减法时,给被减数加上M之后先算减法后算%M :arrow_forward:计算乘法时,每相乘一次执行一次%M,这样做的理由如下</p>\n</blockquote>\n</blockquote>\n<pre><code>设a除以M的余数和商分别为ar,aq.\nb除以M的余数和商分别为br,bq.\na*b =(aq*M+ar)*(bq*M+br)\n    =aq*bq*M^2+ar*bq*M+aq*br*M+ar*br\n    =(aq*bq*M^+ar*bq+aq*br)*M+ar*br\n\n故 (a*b)%M = ar*br\n             = a%M*b%M</code></pre><blockquote>\n<blockquote>\n<p>:arrow_forward:除法相对复杂,具体可以通过费小马定理求解.</p>\n</blockquote>\n</blockquote>\n<p>幂乘模板题: <code>NTL_1_B:Power</code></p>\n<pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nconst ull md=1000000007;\n\nll mod_pow(ull x,ull n,ull mod){\n    ull res=1;\n    while(n&gt;0){\n        if(n&amp;1) res=res*x%mod;\n        x=x*x%mod;\n        n&gt;&gt;=1;\n    }\n    return res;\n}\n\nint main(){\n    ull m,n;\n    scanf(&quot;%llu %llu&quot;,&amp;m,&amp;n);\n    printf(&quot;%lld\\n&quot;,mod_pow(m,n,md));\n    return 0;\n}</code></pre>","categories":[{"name":"AOJ","slug":"AOJ","count":5,"path":"api/categories/AOJ.json"},{"name":"数论","slug":"AOJ/数论","count":2,"path":"api/categories/AOJ/数论.json"}],"tags":[{"name":"AOJ","slug":"AOJ","count":5,"path":"api/tags/AOJ.json"},{"name":"数论","slug":"数论","count":28,"path":"api/tags/数论.json"}]}