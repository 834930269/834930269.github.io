{"title":"2018年全国多校算法寒假训练营练习比赛（第五场） H,F,B","slug":"2018-5-h","date":"2018-02-25T10:46:49.000Z","updated":"2019-07-03T13:51:36.861Z","comments":true,"path":"api/articles/2018-5-h.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<blockquote>\n<p>H,和B是树状数组.F是水题,其实前两个也算水(模板)了.</p>\n<blockquote>\n<p>需要提的是,H用的是树状数组的区间更新和区间查询.</p>\n</blockquote>\n</blockquote>\n<p>H<br>=</p>\n<pre><code>#include&lt;bits/stdc++.h&gt;\n\n#define lowbit(i) (i &amp; (-i))\n\nusing namespace std;\ntypedef long long LL;\nconst int Nmax = 100100;\nint N,Q;\nLL delta[Nmax];//delta的前缀和\nLL deltai[Nmax];//delta*i的前缀和\nLL sum[Nmax];//原始前缀和\n\nLL query(LL *arr,int pos){\n    LL temp=0ll;\n    while(pos&gt;0){\n        temp+=arr[pos];\n        pos-=lowbit(pos);\n    }\n    return temp;\n}\n\nvoid update(LL *arr,int pos,int x){\n    while(pos&lt;=N){\n        arr[pos]+=x;\n        pos+=lowbit(pos);\n    }\n}\n\nint main(){\n    scanf(&quot;%d%d&quot;,&amp;N,&amp;Q);\n    LL nw;\n    char opt;\n    for(int i=1;i&lt;=N;++i){\n        scanf(&quot;%lld&quot;,&amp;nw);\n        sum[i]=sum[i-1]+nw;\n    }\n    while(Q--){\n        getchar();\n        scanf(&quot;%c&quot;,&amp;opt);\n        if(opt==&apos;C&apos;){\n            int l,r,x;\n            scanf(&quot;%d%d%d&quot;,&amp;l,&amp;r,&amp;x);\n            update(delta, l, x);\n            update(delta, r+1, -x);\n            update(deltai, l, x * l);\n            update(deltai, r+1, -x * (r+1));\n        }else{\n            int l,r;\n            scanf(&quot;%d%d&quot;,&amp;l,&amp;r);\n            LL suml = sum[l - 1] + l * query(delta, l - 1) - query(deltai, l - 1);\n            LL sumr = sum[r] + (r + 1) * query(delta, r) - query(deltai, r);\n            printf(&quot;%lld\\n&quot;, sumr - suml);\n        }\n    }\n    return 0;\n}</code></pre><p>B<br>=</p>\n<pre><code>#include&lt;bits/stdc++.h&gt;\n#define lowbit(i) (i&amp;(-i))\nusing namespace std;\ntypedef long long LL;\nconst int maxn=100100;\nLL Tree[maxn];\n\nvoid add(int x,int value){\n    for(int i=x;i&lt;=maxn;i+=lowbit(i)){\n        Tree[i]+=value;\n    }\n}\n\nLL get(int x){\n    LL sum=0ll;\n    for(int i=x;i;i-=lowbit(i)){\n        sum+=Tree[i];\n    }\n    return sum;\n}\n\nint main(){\n    int n,m;\n    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i){\n        LL q;\n        scanf(&quot;%lld&quot;,&amp;q);\n        add(i,q);\n    }\n    for(int i=0;i&lt;m;++i){\n        int ck;\n        scanf(&quot;%d&quot;,&amp;ck);\n        if(ck==1){\n            int x,k;\n            scanf(&quot;%d%d&quot;,&amp;x,&amp;k);\n            add(x,k);\n        }else{\n            int l,r;\n            scanf(&quot;%d%d&quot;,&amp;l,&amp;r);\n            printf(&quot;%lld\\n&quot;,get(r)-get(l-1));\n        }\n    }\n    return 0;\n}</code></pre><p>F<br>=</p>\n<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n;\nint main(){\n    while(cin&gt;&gt;n){\n        while(n/10){\n            int nn=0;\n            while(n&gt;0){\n                nn+=(n%10);\n                n/=10;\n            }\n            n=nn;\n        }\n        cout&lt;&lt;n&lt;&lt;endl;\n    }\n    return 0;\n}</code></pre>","categories":[{"name":"树状数组","slug":"树状数组","count":2,"path":"api/categories/树状数组.json"},{"name":"牛客练习赛","slug":"树状数组/牛客练习赛","count":2,"path":"api/categories/树状数组/牛客练习赛.json"}],"tags":[{"name":"树状数组","slug":"树状数组","count":3,"path":"api/tags/树状数组.json"},{"name":"牛客练习赛","slug":"牛客练习赛","count":10,"path":"api/tags/牛客练习赛.json"}]}