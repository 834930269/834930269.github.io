{"title":"python3学习 UDP+TCP-IP编程","slug":"python3-udptcp-ip","date":"2017-07-26T14:19:14.000Z","updated":"2019-07-03T13:51:36.850Z","comments":true,"path":"api/articles/python3-udptcp-ip.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>【Source Code】 github: —-TCP: 1.:point_right:<a href=\"https://github.com/834930269/python_study/blob/master/TCP-IP/echo-server.py\" title=\"服务端: echo-server.py\" target=\"_blank\" rel=\"noopener\">服务端: echo-server.py</a> 2.:point_right:<a href=\"https://github.com/834930269/python_study/blob/master/TCP-IP/echo-client.py\" title=\"客户端: echo-client.py\" target=\"_blank\" rel=\"noopener\">客户端: echo-client.py</a> —-UDP: 1.:point_right:<a href=\"https://github.com/834930269/python_study/blob/master/UDP/echo-server.py\" title=\"服务端: echo-server.py\" target=\"_blank\" rel=\"noopener\">服务端: echo-server.py</a> 2.:point_right:<a href=\"https://github.com/834930269/python_study/blob/master/UDP/echo-client.py\" title=\"客户端: echo-client.py\" target=\"_blank\" rel=\"noopener\">客户端: echo-client.py</a> 【TCP】 服务端:</p>\n<pre><code>import socket,threading,time\n\n#协议IPV4 后者是基于流的TCP\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n\n#绑定,监听端口\ns.bind((&apos;127.0.0.1&apos;,9999))\n\n#最大连接数为5\ns.listen(5)\nprint(&apos;Watting for connection...&apos;)\n\ndef tcplink(sock,addr):\n    print(&apos;Accpet new connection from %s:%s...&apos; % addr)\n    sock.send(b&apos;Welcome!&apos;)\n    while True:\n        data=sock.recv(1024)\n        time.sleep(1)\n        if not data or data.decode(&apos;utf-8&apos;)==&apos;exit&apos;:\n            break\n        sock.send((&apos;Hello, %s!&apos; % data.decode(&apos;utf-8&apos;)).encode(&apos;utf-8&apos;))\n    sock.close()\n    print(&apos;Connection from %s:%s closed.&apos; % addr)\n\nwhile True:\n    #接受一个连接\n    sock,addr=s.accept()\n    #创建新线程来处理TCP连接\n    t=threading.Thread(target=tcplink,args=(sock,addr))\n    t.start()</code></pre><p>客户端:</p>\n<pre><code>import socket\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n#建立连接\ns.connect((&apos;127.0.0.1&apos;,9999))\n#接受欢迎消息\nprint(s.recv(1024).decode(&apos;utf-8&apos;))\nfor data in [b&apos;Michael&apos;,b&apos;Tracy&apos;,b&apos;Sarah&apos;]:\n    #发送数据:\n    s.send(data)\n    print(s.recv(1024).decode(&apos;utf-8&apos;))\ns.send(b&apos;exit&apos;)\ns.close</code></pre><p>【UDP】 服务端:</p>\n<pre><code>import socket,threading,time\n\n#IPV4,UDP\ns=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)\n#绑定端口\ns.bind((&apos;127.0.0.1&apos;,9999))\nprint(&apos;Bind UDP on 9999...&apos;)\n\ndef udplink(data,addr):\n    s.sendto(b&apos;Hello, %s!&apos; % data,addr)\n\nwhile True:\n    #接收数据\n    #recvfrom()方法返回数据和客户端的地址与端口\n    data,addr=s.recvfrom(1024)\n    t=threading.Thread(target=udplink,args=(data,addr))\n    time.sleep(1)\n    t.start()</code></pre><p>客户端:</p>\n<pre><code>import socket\n\ns=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)\n\nfor data in [b&apos;Michael&apos;,b&apos;Tracy&apos;,b&apos;Sarah&apos;]:\n    #发送数据\n    s.sendto(data,(&apos;127.0.0.1&apos;,9999))\n    #接收数据\n    print(s.recv(1024).decode(&apos;utf-8&apos;))\ns.close()</code></pre>","categories":[{"name":"Python","slug":"Python","count":41,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}