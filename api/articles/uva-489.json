{"title":"UVa 489","slug":"uva-489","date":"2017-03-26T02:13:52.000Z","updated":"2019-07-03T13:51:36.846Z","comments":true,"path":"api/articles/uva-489.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【生词】</strong> <strong>series 系列,连续,串联</strong> <strong>Hangman 侩子手</strong> <strong>puzzle 使…疑惑,迷惑,难题,为难</strong> <strong>as well as 也,和,一样,不但…而且</strong> <strong>guesses 猜测</strong> <strong>be the same as 与..一样</strong> <strong>classic 名著,经典著作</strong> <strong>Follows 跟随,遵照</strong> <strong>contestant 竞争者,参赛人</strong> <strong>try-&gt;tries 尝试</strong> <strong>characters 特性,角色.V.描述</strong> <strong>match 比赛,竞赛,对手,匹配</strong> <strong>counted 认为</strong> <strong>as 因为,随着,虽然,依照,当…时,如同,当做</strong> <strong>stroke 划,画一道</strong> <strong>chicken out &lt;美俚&gt;</strong></p>\n<ul>\n<li><strong>因害怕而停止做某事，因胆小而放弃</strong></li>\n<li><strong>临阵退缩</strong></li>\n<li><strong>怯步</strong></li>\n<li><strong>由于胆怯而收兵</strong></li>\n</ul>\n<p><strong>determine 下定决心</strong> <strong>or fails to finish a game 或未能完成比赛</strong> <strong>status 地位,状态</strong> <strong>lower 下游的,下级的,下等的</strong> <strong>section 截面,部分,部门,地区,章节</strong> <strong>indicate 表明,指出,预示,象征</strong> <strong>currently 一般的,当前的</strong> <strong>【题意】</strong> <strong>你在和侩子手玩一个游戏,侩子手有一个单词,你需要猜测单词中有哪些字母,当你猜中一个字母时,正确单词里所有该字母都被标记为correct,(如果你再猜就被认为是错的),当你猜错时侩子手将会划一道,当侩子手划到第7道时,你就挂了,如果在侩子手之前你猜中了全部字母,You win.当然,如果最终你猜测的结果在正确和错误之间,You chickened out.</strong> <strong>【Code】</strong> <strong>好像数组开得太大memset也会耗费不少时间.或者是一开始的cin(关了同步)仍然很慢,第一次TLE了.</strong></p>\n<blockquote>\n<p><strong>#include<iostream></iostream></strong> <strong>#include<algorithm></algorithm></strong> <strong>#include<cstdio></cstdio></strong> <strong>#include<cstring></cstring></strong> <strong>#include<cstdlib></cstdlib></strong> <strong>#define fill(A) memset(A,0,sizeof(A))</strong> <strong>using namespace std;</strong> <strong>char contestant[10000],correct[10000];</strong> <strong>int Round,T[30],C[30],flag,fcnt,pcnt,ccnt;</strong> <strong>int main(){</strong> **    while(~scanf(“%d”,&amp;Round) &amp;&amp; Round!=-1){** **        fcnt=pcnt=ccnt=0;flag=3;** **        fill(T);fill(C);** **        scanf(“\\n%s\\n%s”,correct,contestant);** **        printf(“Round %d\\n”,Round);** **        for(int i=0;correct[i]!=’\\0’;++i){** **            int t=correct[i]-‘a’;** **            if(C[t]==0)** **                C[t]=1,pcnt++;** **        }** **        for(int i=0;contestant[i]!=’\\0’;++i){** **            int t=contestant[i]-‘a’;** **            if(!T[t] &amp;&amp; C[t])** **                ccnt++,T[t]=1;** **            else** **                fcnt++;** **            if(fcnt==7 &amp;&amp; ccnt&lt;pcnt){** **                puts(“You lose.”),flag=2;** **                break;** **            }** **            if(fcnt&lt;7 &amp;&amp; ccnt&gt;=pcnt){** **                puts(“You win.”),flag=1;** **                break;** **            }    ** **        }** **        if(flag==3)** **            puts(“You chickened out.”);** **    }** **    return 0;** <strong>}</strong></p>\n</blockquote>\n","categories":[{"name":"UVa","slug":"UVa","count":35,"path":"api/categories/UVa.json"}],"tags":[{"name":"UVa","slug":"UVa","count":39,"path":"api/tags/UVa.json"}]}