{"title":"python3学习 __slots__","slug":"python3-slots","date":"2017-07-16T04:40:11.000Z","updated":"2019-07-03T13:51:36.849Z","comments":true,"path":"api/articles/python3-slots.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【Source Code】</strong> <strong>github: <a href=\"https://github.com/834930269/python_study/blob/master/oop/slots.py\" target=\"_blank\" rel=\"noopener\">slots.py</a></strong></p>\n<hr>\n<p> **# coding: utf-8</p>\n<p># In[6]:</p>\n<p>class Student(object):<br>    pass<br>s=Student()<br>s.name=’Michael’<br>print(s.name)</p>\n<p>#还可以尝试给实例绑定一个方法：<br>def set_age(self,age):<br>    self.age=age<br>from types import MethodType<br>s.set_age=MethodType(set_age,s)#绑定方法<br>s.set_age(25)<br>print(s.age)</p>\n<p>#但是，给一个实例绑定的方法，对另一个实例是不起作用的：<br>s2=Student()</p>\n<p>#s2.set_age(25)</p>\n<p># In[8]:</p>\n<p>#为了给所有实例都绑定方法，可以给class绑定方法：<br>def set_score(self,score):<br>    self.score=score<br>Student.set_score=set_score</p>\n<p>#给class绑定方法后，所有实例均可调用：<br>s.set_score(20)<br>s2.set_score(30)<br>print(s.score,s2.score)</p>\n<p># In[9]:</p>\n<p>#使用__slots__</p>\n<p>#但是，如果我们想要限制实例的属性怎么办？比如，</p>\n<p>#只允许对Student实例添加name和age属性。</p>\n<p>#为了达到限制的目的，Python允许在定义class的时候，</p>\n<p>#定义一个特殊的__slots__变量，来限制该class实例能添加的属性：<br>class student(object):<br>    __slots__ = (‘name’, ‘age’) # 用tuple定义允许绑定的属性名称<br>s=student()<br>s.name=’Michael’<br>s.age=8</p>\n<p>#s.score=20#AttributeError</p>\n<p># In[10]:</p>\n<p>#使用__slots__要注意，__slots__定义的属性仅</p>\n<p>#对当前类实例起作用，对继承的子类是不起作用的：<br>class GraduateStudent(student):<br>    pass<br>g = GraduateStudent()<br>g.score=9999#没抛异常</p>\n<p># In[ ]:**</p>\n","categories":[{"name":"Python","slug":"Python","count":41,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}