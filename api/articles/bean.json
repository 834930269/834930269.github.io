{"title":"Bean的装配","slug":"bean","date":"2019-01-25T03:09:02.000Z","updated":"2019-07-03T13:51:36.864Z","comments":true,"path":"api/articles/bean.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>对于Bean的获取,完全可以通过Ioc容器来获取.但是这样产生的问题即代码复用率过高.所以使用其他更方便获取Bean的装配方式就显得格外重要.</p>\n<h1><span id=\"基于注解的装配方式\">基于注解的装配方式</span></h1><h2><span id=\"spring-contextxml配置\">Spring-context.xml配置</span></h2><blockquote>\n<p>为了告诉Spring你要用这种注解:</p>\n</blockquote>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;\n       xsi:schemaLocation=&quot;\n       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd \n       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\n&quot;&gt;\n\n    &lt;context:annotation-config /&gt;\n    &lt;context:component-scan base-package=&quot;com.funtl.leeshop&quot;/&gt;\n&lt;/beans&gt;</code></pre><h2><span id=\"注解类型\">注解类型</span></h2><p>注解</p>\n<p>作用</p>\n<p>@Component(value=”name”)</p>\n<p>类上,value属性用于指定类的id</p>\n<p>@Repository</p>\n<p>用于对DAO实现类进行注解</p>\n<p>@Service</p>\n<p>用于对 Service 实现类进行注解</p>\n<p>@Controller</p>\n<p>用于对 Controller 实现类进行注解</p>\n<p>@Scope</p>\n<p>需要在<code>类</code>上使用注解 @Scope，其 value 属性用于指定作用域。默认为 singleton。</p>\n<p>@Value</p>\n<p>需要在<code>属性</code>上使用注解 @Value，该注解的 value 属性用于指定要注入的值。</p>\n<p>@Autowired</p>\n<p>需要在<code>域属性</code>上使用注解 @Autowired，该注解默认使用 按类型自动装配 Bean 的方式。</p>\n<p>@Resource</p>\n<p>需要在<code>域属性</code>上使用注解 @Resource，该注解有一个 name 属性，可以创建指定的 bean</p>\n<p>@PostConstruct</p>\n<p>在方法上使用 @PostConstruct 相当于初始化</p>\n<h1><span id=\"xml配置\">XML配置</span></h1><blockquote>\n<p>之前讲过,用标签</p>\n<blockquote>\n<p>就自动添加到IoC容器中了.</p>\n</blockquote>\n</blockquote>\n","categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"}],"tags":[{"name":"Spring","slug":"Spring","count":6,"path":"api/tags/Spring.json"}]}