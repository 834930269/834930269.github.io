{"title":"Python Flask(五) Email","slug":"python-flask-email","date":"2017-10-10T11:07:25.000Z","updated":"2019-07-03T13:51:36.858Z","comments":true,"path":"api/articles/python-flask-email.json","photos":[],"link":"","excerpt":null,"covers":["http://be-sunshine.cn/wp-content/uploads/2017/10/%E6%8D%95%E8%8E%B77.png","http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010193039.png","http://be-sunshine.cn/wp-content/uploads/2017/10/ASDADASDAWDA1.png"],"content":"<p>moudule:Flask_mail 配置参数: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/%E6%8D%95%E8%8E%B77.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/%E6%8D%95%E8%8E%B77.png\" alt></a> 中文: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/%E6%8D%95%E8%8E%B78.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/%E6%8D%95%E8%8E%B78.png\" alt></a> 如果不进行配置,Flask_Mail会自动连接localhost上的端口25 啊……调了一大堆错,总算搞定了QQ的邮件发送…… :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: <code>1.</code>向QQ发送邮件是通过<code>SMTP协议</code>发送的,所以我们需要在QQ邮箱的设置中<code>开启SMTP协议</code>: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010185347.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010185347.png\" alt></a> <code>2.</code>因为QQ采用的是<code>授权码</code>发送邮件的方式,所以发送邮件时的<code>密码是授权码</code>,需要<code>申请一下</code>(这个授权码会被改变,但我不知道是怎样的条件会改变).如上图的<code>生成授权码</code>. <code>3.</code>千万不要把TTL写成TLE!!!!!! <code>4.</code>set MAIL_USERNAME/PASSWORD=<code>***</code> 这个操作是在cmd界面下直接输入即可,意为将<code>key-value:环境变量-值</code>放在系统内.python取出是依赖<code>os模块</code>的<code>os.environ.get(&#39;key&#39;)</code>取出value的. <code>5.</code>对于QQ邮箱而言,新生成的<code>msg对象</code>的<code>sender</code>需要和你发送到的目标用户一样,否则会出现<code>501</code>错误:发送者与接收者不是同一人. <code>6.</code>发送的<code>shell</code>大概代码为: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010190344.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010190344.png\" alt></a> <code>7.</code>AC <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010190501.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010190501.png\" alt></a> Code:</p>\n<pre><code>#--*--coding:utf-8--*--\nfrom datetime import datetime\nfrom flask import Flask, render_template,session,redirect,url_for,flash\nfrom flask_script import Manager\nfrom flask_bootstrap import Bootstrap   \nfrom flask_moment import Moment\nfrom flask_wtf import FlaskForm\nfrom wtforms import StringField,SubmitField\nfrom wtforms.validators import Required\nfrom flask_sqlalchemy import SQLAlchemy\nimport os\nfrom flask_mail import Mail\n\nclass NameForm(FlaskForm):\n    name=StringField(&apos;What is your name?&apos;,validators=[Required()])\n    submit=SubmitField(&apos;Submit&apos;)\n\napp = Flask(__name__)\n\n#Flask-WTF : secret_key\n#app.config dict used to save config message.\napp.config[&apos;MAIL_SERVER&apos;]=&apos;smtp.qq.com&apos;\napp.config[&apos;MAIL_PORT&apos;]=587\n#app.config[&apos;MAIL_USE_TLE&apos;]=True\napp.config[&apos;MAIL_USE_TLS&apos;] = True\napp.config[&apos;MAIL_USERNAME&apos;]=os.environ.get(&apos;MAIL_USERNAME&apos;)\napp.config[&apos;MAIL_PASSWORD&apos;]=os.environ.get(&apos;MAIL_PASSWORD&apos;)\napp.config[&apos;SECRET_KEY&apos;]=&apos;hard to guess string&apos;\napp.config[&apos;SQLALCHEMY_DATABASE_URI&apos;]=\\\n    &apos;mysql://root:zwt~19970210@localhost/data&apos;\napp.config[&apos;SQLALCHEMY_COMMIT_ON_TEARDOWN&apos;] = True\napp.config[&apos;SQLALCHEMY_TRACK_MODIFICATIONS&apos;] = False\ndb=SQLAlchemy(app)\n\nmanager = Manager(app)\nbootstrap = Bootstrap(app)\nmoment = Moment(app)\nmail=Mail(app)\n\nclass Role(db.Model):\n    __tablename__ = &apos;roles&apos;\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(64), unique=True)\n    users = db.relationship(&apos;User&apos;, backref=&apos;role&apos;, lazy=&apos;dynamic&apos;)\n\n    def __repr__(self):\n        return &apos;&lt;Role %r&gt;&apos; % self.name\n\n\nclass User(db.Model):\n    __tablename__ = &apos;users&apos;\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(64), unique=True, index=True)\n    role_id = db.Column(db.Integer, db.ForeignKey(&apos;roles.id&apos;))\n\n    def __repr__(self):\n        return &apos;&lt;User %r&gt;&apos; % self.username\n@app.errorhandler(404)\ndef page_not_found(e):\n    return render_template(&apos;404.html&apos;), 404\n\n\n@app.errorhandler(500)\ndef internal_server_error(e):\n    return render_template(&apos;500.html&apos;), 500\n\n\n@app.route(&apos;/&apos;,methods=[&apos;GET&apos;,&apos;POST&apos;])\ndef index():\n    form=NameForm()\n    if form.validate_on_submit():\n        user=User.query.filter_by(username=form.name.data).first()\n        if user is None:\n            user =User(username=form.name.data)\n            db.session.add(user)\n            session[&apos;known&apos;]=False\n        else:\n            session[&apos;known&apos;]=True\n        session[&apos;name&apos;]=form.name.data\n        form.name.data=&apos;&apos;\n        return redirect(url_for(&apos;index&apos;))\n    return render_template(&apos;index.html&apos;,\n                           current_time=datetime.utcnow(),form=form,name=session.get(&apos;name&apos;),known=session.get(&apos;known&apos;,False))\n\n\n@app.route(&apos;/user/&lt;name&gt;&apos;)\ndef user(name):\n    return render_template(&apos;user.html&apos;, name=name)\n\n\nif __name__ == &apos;__main__&apos;:\n    db.create_all()\n    manager.run()</code></pre><p>接下来我要试试Gmail.. 9.成功,而且好像知道了怎么用自己的一个账号发送给另一个账号的奇技淫巧…recipients参数是目标邮箱.结果如下: Gmail: 1. 给自己发的结果: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010193039.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010193039.png\" alt></a> 2.给QQ邮箱发的结果: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010193200.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010193200.png\" alt></a> QQ: 接收到Gmail发送的结果: <img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/QQ%E6%88%AA%E5%9B%BE20171010193350.png\" alt=\"Aaron\"><code>10.</code>将发送邮件功能集成到页面. 功能=&gt;每次添加新用户发送到邮箱信息:<code>&#39;User { { username }} has joined.&#39;</code> 主要<code>发送</code>代码如下:</p>\n<pre><code>def send_email(to,subject,template,**k):\n    msg=Message(app.config[&apos;FLASKY_MAIL_SUBJECT_PREFIX&apos;]+subject,\n        sender=app.config[&apos;FLASKY_MAIL_SENDER&apos;],recipients=[to])\n    msg.body=render_template(template+&apos;.txt&apos;,**k)\n    msg.html=render_template(template+&apos;.html&apos;,**k)\n    mail.send(msg)</code></pre><p><code>调用</code>代码:</p>\n<pre><code>@app.route(&apos;/&apos;,methods=[&apos;GET&apos;,&apos;POST&apos;])\ndef index():\n    form=NameForm()\n    if form.validate_on_submit():\n        user=User.query.filter_by(username=form.name.data).first()\n        if user is None:\n            user =User(username=form.name.data)\n            db.session.add(user)\n            session[&apos;known&apos;]=False\n            if app.config[&apos;FLASKY_ADMIN&apos;]:\n                send_email(app.config[&apos;FLASKY_ADMIN&apos;],&apos;New User&apos;,&apos;mail/new_user&apos;,user=user)\n        else:\n            session[&apos;known&apos;]=True\n        session[&apos;name&apos;]=form.name.data\n        form.name.data=&apos;&apos;\n        return redirect(url_for(&apos;index&apos;))\n    return render_template(&apos;index.html&apos;,\n                           current_time=datetime.utcnow(),form=form,name=session.get(&apos;name&apos;),known=session.get(&apos;known&apos;,False))</code></pre><p><code>11.</code>最终结果如下: 添加新用户<code>Aaron Swartz</code>: <a href=\"http://be-sunshine.cn/wp-content/uploads/2017/10/ASDADASDAWDA1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://be-sunshine.cn/wp-content/uploads/2017/10/ASDADASDAWDA1.png\" alt></a> <code>12.</code>用异步的方法发送邮件:这样会产生一种无延迟感,用户体验更好. 代码如下:</p>\n<pre><code>from threading import Thread\n\ndef send_async_email(app,msg):\n    with app.app_context():\n        mail.send(msg)\n\ndef send_email(to,subject,template,**k):\n    msg=Message(app.config[&apos;FLASKY_MAIL_SUBJECT_PREFIX&apos;]+subject,\n        sender=app.config[&apos;FLASKY_MAIL_SENDER&apos;],recipients=[to])\n    msg.body=render_template(template+&apos;.txt&apos;,**k)\n    msg.html=render_template(template+&apos;.html&apos;,**k)\n    thr=Thread(target=send_async_email,args=[app,msg])\n    thr.start()\n    return thr</code></pre><h1><span id=\"done\"><strong>Done!</strong></span></h1>","categories":[{"name":"Flask","slug":"Flask","count":18,"path":"api/categories/Flask.json"},{"name":"Python","slug":"Flask/Python","count":16,"path":"api/categories/Flask/Python.json"},{"name":"未分类","slug":"Flask/Python/未分类","count":2,"path":"api/categories/Flask/Python/未分类.json"}],"tags":[{"name":"Flask","slug":"Flask","count":20,"path":"api/tags/Flask.json"},{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}