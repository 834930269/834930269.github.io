{"title":"Python Flask(一) --by Maxime Bouroumeau-Fuseau","slug":"python-flask-by-maxime-bouroumeau-fuseau","date":"2017-10-08T07:54:30.000Z","updated":"2019-07-03T13:51:36.858Z","comments":true,"path":"api/articles/python-flask-by-maxime-bouroumeau-fuseau.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>第一节的代码</p>\n<pre><code># -*- coding: utf-8 -*-\nimport sqlite3\nfrom flask import Flask, request, session, g, redirect, url_for,abort, render_template, flash, jsonify\n\n# configuration\nDATABASE = &apos;/tmp/flaskr.db&apos;\nDEBUG = True\nSECRET_KEY = &apos;development key&apos;\nUSERNAME = &apos;admin&apos;\nPASSWORD = &apos;default&apos;\n\n# create our little application :)\napp = Flask(__name__)\napp.config.from_envvar(&apos;FLASKR_SETTINGS&apos;, silent=True)\napp.config[&apos;SECRET_KEY&apos;]=&apos;F34TF$($e34D&apos;;\n\n\n@app.route(&apos;/_add_numbers&apos;)\ndef add_numbers():\n    a=request.args.get(&apos;a&apos;,0,type=int)\n    b=request.args.get(&apos;b&apos;,0,type=int)\n    return jsonify(result=a+b)\n\n@app.route(&apos;/&apos;)\ndef home():\n    return render_template(&apos;index.html&apos;)\n\n@app.route(&apos;/signup&apos;,methods=[&apos;POST&apos;])\ndef signup():\n    session[&apos;username&apos;]=request.form[&apos;username&apos;]\n    session[&apos;message&apos;]=request.form[&apos;message&apos;]\n    return redirect(url_for(&apos;message&apos;))\n\n@app.route(&apos;/message&apos;)\ndef message():\n    if not &apos;username&apos; in session:\n        return abort(403)\n    return render_template(&apos;message.html&apos;,username=session[&apos;username&apos;],message=session[&apos;message&apos;])\n\ndef connect_db():\n    return sqlite3.connect(app.config[&apos;DATABASE&apos;])\n\nif __name__ == &apos;__main__&apos;:\n    app.run()</code></pre><p>在这个例子中,用户将输入想要说的信息到第一个页面,即用户和,message,这些数据将被存储在session中并且将被同步显示在/message页面下. Some observations: - <code>app.config</code> is a dict containing configuration parameters - <code>@app.route()</code> is by default limited to GET requests. Allowed HTTP methods of an action can be specified using the methods keyword arg. - <code>url_for(route_name, **kwargs)</code> should be used to generate urls for your handlers. It takes as first parameter the function name and as keyword args any needed parameters to generate the url. - <code>redirect(url)</code> creates an HTTP response with a redirect code and location - <code>abort(http_code)</code> is used to create error responses and stop the executing function. Flask is natively integrated with <code>jinja2</code>, a very good templating engine. Templates should be saved as .html files under the templates/ folder. The <code>render_template(filename, **kwargs)</code> function is a pretty straightforward method to render them. 即render_template()函数接受任意多个参数,第一个参数是位于templates/下的模板文件,之后的参数均是模板文件内定义的数据. 然后我们使用jinja渲染html.代码如下</p>\n<pre><code>index.html:\n\n{% extends \"layout.html\" %}\n{% block content %}\n        <h1>Say something</h1>\n        <form method=\"post\" action=\"{ { url_for('signup') }}\">\n            <p><label>Username:</label> <input type=\"text\" name=\"username\" required></p>\n            <p><label>Message:</label> <textarea name=\"message\"></textarea></p>\n            <p><button type=\"submit\">Send</button></p>\n        </form>\n    {% endblock %}\n\nmessage.html:\n\n{% extends \"layout.html\" %}\n{% block content %}\n        <h1>{ { username }} said:</h1>\n        <p>\n            { { message }}\n        </p>\n        <a href=\"{ { url_for('home') }}\">Say something else</a>\n    {% endblock %}\n\nlayout.html:\n\n&lt;!doctype html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n    &lt;head&gt;\n        &lt;title&gt;Say somthing&lt;/title&gt;\n        &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;\n        &lt;link rel=&quot;shortcut icon&quot; href=&quot;{ { url_for(&apos;static&apos;, filename=&apos;favicon.ico&apos;) }}&quot;&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        {% block content %}{% endblock %}\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre><p>其中,模板中的url_for()是从 static/ 目录下get到当时路由定义函数渲染的页面.比如这里会转到<code>index.html</code></p>\n","categories":[{"name":"Flask","slug":"Flask","count":18,"path":"api/categories/Flask.json"},{"name":"Python","slug":"Flask/Python","count":16,"path":"api/categories/Flask/Python.json"}],"tags":[{"name":"Flask","slug":"Flask","count":20,"path":"api/tags/Flask.json"},{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}