{"title":"python3学习 列表生成式+isinstance","slug":"python3-listcomprehension","date":"2017-07-12T05:44:56.000Z","updated":"2019-07-03T13:51:36.848Z","comments":true,"path":"api/articles/python3-listcomprehension.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><strong>【Source Code】</strong> <strong><a href=\"https://github.com/834930269/python_study/blob/master/List_Comprehensions/%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F.py\" target=\"_blank\" rel=\"noopener\">列表生成式.py</a></strong></p>\n<blockquote>\n<p> **# coding: utf-8</p>\n<p># In[1]:</p>\n<p>#举个例子，要生成list [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]可以用list(range(1, 11))：<br>li=list(range(1,11))<br>print(li)</p>\n<p># In[2]:</p>\n<p>#但如果要生成[1x1, 2x2, 3x3, …, 10x10]怎么做？方法一是循环：<br>L=[]<br>for x in range(1,11):<br>    L.append(x*x)<br>print(L)</p>\n<p># In[3]:</p>\n<p>#但是循环太繁琐，而列表生成式则可以用一行语句代替循环生成上面的list：<br>R=[x*x for x in range(1,11)]<br>print(R)</p>\n<p># In[12]:</p>\n<p>#for循环后还可以加上if这样我们就可以筛出仅偶数的平方</p>\n<p>#x&amp;x-1是判断x是否是2的幂，x&amp;1为1为奇<br>R=[x*x for x in range(1,11) if not(x&amp;1)]<br>print(R)</p>\n<p># In[14]:</p>\n<p>#还可以使用两层循环，可以生成全排列：<br>T=[m+n for m in ‘ABC’ for n in ‘XYZ’]<br>print(T)</p>\n<p># In[2]:</p>\n<p>#运用列表生成式，可以写出非常简洁的代码。例如，列出当前目录下的所有文件和目录名，可以通过一行代码实现：<br>import os # 导入os模块，模块的概念后面讲到<br>OS=[d for d in os.listdir(‘.’)]# os.listdir可以列出文件目录<br>print(OS)<br># Out [1]: [‘.anaconda’, ‘.android’, ‘.bash_history’, ‘.conda’, ‘.condarc’, ‘.gem’, ‘.gemrc’, ‘.gitconfig’, ‘.idlerc’, ‘.ipynb_checkpoints’, ‘.ipython’, ‘.jupyter’, ‘.oracle_jre_usage’, ‘.packettracer’, ‘.ssh’, ‘.viminfo’, ‘360驱动大师.lnk’, ‘ACDSee5.lnk’, ‘AppData’, ‘Application Data’, ‘Cisco Packet Tracer 6.2sv’, ‘Contacts’, ‘Cookies’, ‘Desktop’, ‘Documents’, ‘Downloads’, ‘fancy_deboss.png’, ‘Favorites’, ‘fontawesome-webfont.svg’, ‘IntelGraphicsProfiles’, ‘Links’, ‘Local Settings’, ‘Music’, ‘My Documents’, ‘NetHood’, ‘NTUSER.DAT’, ‘ntuser.dat.LOG1’, ‘ntuser.dat.LOG2’, ‘NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf’, ‘NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms’, ‘NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms’, ‘ntuser.ini’, ‘ntuser.pol’, ‘Pictures’, ‘PrintHood’, ‘Recent’, ‘Saved Games’, ‘Searches’, ‘SendTo’, ‘Templates’, ‘Test.ipynb’, ‘Videos’, ‘wc’, ‘WebpageIcons.db’, ‘WIN7激活工具’, ‘XT.DAT.LOG1’, ‘XT.DAT.LOG2’, ‘xt.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf’, ‘xt.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms’, ‘xt.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms’, ‘「开始」菜单’, ‘列表生成式.ipynb’, ‘宽带连接.lnk’, ‘迭代.ipynb’, ‘迭代.py’]</p>\n<p># In[3]:</p>\n<p>#for循环其实可以同时使用两个甚至多个变量，比如dict的items()可以同时迭代key和value：<br>d={‘x’:’A’,’y’:’B’,’z’:’C’}<br>for k,v in d.items():<br>    print(k,’=’,v)</p>\n<p># In[5]:</p>\n<p>#因此,列表生成式也可以用两个变量生成list:<br>dp=[k+’=’+v for k,v in d.items()]<br>print(dp)</p>\n<p># In[6]:</p>\n<p>#最后把一个list中的字母全变成小写:<br>L=[‘Hello’,’World’,’IBM’,’Apple’]<br>Lp=[s.lower() for s in L]<br>print(Lp)</p>\n<p># In[7]:</p>\n<p>#使用内建的isinstance(key,type)可以判断key是否是type</p>\n<p>#例:<br>L1 = [‘Hello’, ‘World’, 18, ‘Apple’, None]<br>L2=[k.lower() for k in L1 if isinstance(k,str)]<br>print(L2)</p>\n<p># In[ ]:**</p>\n</blockquote>\n","categories":[{"name":"Python","slug":"Python","count":41,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":65,"path":"api/tags/Python.json"}]}