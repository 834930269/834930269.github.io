{"name":"随笔","slug":"tcp/网络编程/随笔","count":1,"postlist":[{"title":"聊天室架构从0开始 – 2 TCP+UDP 实现搜索IP与端口","slug":"ty2","date":"2019-01-14T14:17:07.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/ty2.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Root\"><a href=\"#Root\" class=\"headerlink\" title=\"Root\"></a>Root</h1><h1 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h1><ul>\n<li>java<ul>\n<li>client<ul>\n<li>bean<ul>\n<li>ServerInfo.java(记录服务端所需信息model)</li>\n</ul>\n</li>\n<li>Client.java(客户端执行)</li>\n<li>ClientSearcher.java(客户端广播向服务端,并且接受服务端返回的地址)</li>\n<li>TCPClient.java(TCP连接客户端)</li>\n</ul>\n</li>\n<li>clink(工具包)<ul>\n<li>utils<ul>\n<li>ByteUtils.java</li>\n</ul>\n</li>\n<li>Clink.java</li>\n</ul>\n</li>\n<li>constants(常量)<ul>\n<li>TCPConstants.java</li>\n<li>UDPConstants.java</li>\n</ul>\n</li>\n<li>server<ul>\n<li>Server.java</li>\n<li>ServerProvider.java(服务提供者)</li>\n<li>TCPServer.java(TCP连接服务端)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"UDP向服务端广播搜索TCP地址\"><a href=\"#UDP向服务端广播搜索TCP地址\" class=\"headerlink\" title=\"UDP向服务端广播搜索TCP地址\"></a>UDP向服务端广播搜索TCP地址</h2><blockquote>\n<p>老一套,先开启监听,再发送数据.</p>\n</blockquote>\n<h3 id=\"方式和流程和传输数据结构\"><a href=\"#方式和流程和传输数据结构\" class=\"headerlink\" title=\"方式和流程和传输数据结构\"></a>方式和流程和传输数据结构</h3><blockquote>\n<p>方式,利用UDP独有的广播向服务端request地址和端口.并通过监听的端口等待服务端的回复. 报文格式:</p>\n<blockquote>\n<p>包裹层(HEADER,用于验证) IP - String 数据 - Byte[]</p>\n</blockquote>\n<p>数据格式:</p>\n<blockquote>\n<p>HEADER(验证字段,正式的数据要跳过这一段) cmd - 命令(1为客户端发送,2为服务端回送) LISTEN_PORT - 请求服务端后回复信息时的端口号,或客户端代连接服务端的端口号 - INT</p>\n</blockquote>\n</blockquote>\n<h3 id=\"代码-IDEA-放在Github上\"><a href=\"#代码-IDEA-放在Github上\" class=\"headerlink\" title=\"代码(IDEA,放在Github上)\"></a>代码(IDEA,放在Github上)</h3><p><a href=\"https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5\" target=\"_blank\" rel=\"noopener\">https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5</a></p>\n<h2 id=\"在上一步基础上建立TCP连接\"><a href=\"#在上一步基础上建立TCP连接\" class=\"headerlink\" title=\"在上一步基础上建立TCP连接\"></a>在上一步基础上建立TCP连接</h2><h3 id=\"方式\"><a href=\"#方式\" class=\"headerlink\" title=\"方式\"></a>方式</h3><blockquote>\n<p>通过UDP获取到的服务端的IP和端口.</p>\n<blockquote>\n<p>用Socket连接之.</p>\n</blockquote>\n</blockquote>\n<h3 id=\"通过键盘流输入\"><a href=\"#通过键盘流输入\" class=\"headerlink\" title=\"通过键盘流输入\"></a>通过键盘流输入</h3><pre><code>InputStream in=System.in;\nBufferedReader input=new BufferedReader(new InputStreamReader(in));\n//键盘读取一行\nString str=input.readLine();</code></pre><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p><a href=\"https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-2/SocketDemo-L5\" target=\"_blank\" rel=\"noopener\">https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-2/SocketDemo-L5</a></p>\n<h2 id=\"完成当前目标-服务端与客户端发送与接收并行\"><a href=\"#完成当前目标-服务端与客户端发送与接收并行\" class=\"headerlink\" title=\"完成当前目标,服务端与客户端发送与接收并行\"></a>完成当前目标,服务端与客户端发送与接收并行</h2><h3 id=\"方式-1\"><a href=\"#方式-1\" class=\"headerlink\" title=\"方式\"></a>方式</h3><blockquote>\n<p>将读写分开,读继承Thread,写重写Runnable. 广播： 用一个list记录,每当有客户端连接来时,就记录下那个客户端的Socket.</p>\n<blockquote>\n<p>遍历广播即可</p>\n</blockquote>\n</blockquote>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p><a href=\"https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-3/SocketDemo-L5\" target=\"_blank\" rel=\"noopener\">https://github.com/834930269/TCP_AND_UDP/tree/master/SocketDemo-L5-3/SocketDemo-L5</a></p>\n","text":"Root目录结构javaclientbeanServerInfo.java(记录服务端所需信息model)Client.java(客户端执行)ClientSearcher.java(客户端广播向服务端,并且接受服务端返回的地址)TCPClient.java(TCP连接客户端)cl","link":"","raw":null,"photos":[],"categories":[{"name":"tcp","slug":"tcp","count":2,"path":"api/categories/tcp.json"},{"name":"网络编程","slug":"tcp/网络编程","count":2,"path":"api/categories/tcp/网络编程.json"},{"name":"随笔","slug":"tcp/网络编程/随笔","count":1,"path":"api/categories/tcp/网络编程/随笔.json"}],"tags":[{"name":"网络编程","slug":"网络编程","count":4,"path":"api/tags/网络编程.json"},{"name":"tcp","slug":"tcp","count":3,"path":"api/tags/tcp.json"}]}]}