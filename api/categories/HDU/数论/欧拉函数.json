{"name":"欧拉函数","slug":"HDU/数论/欧拉函数","count":1,"postlist":[{"title":"HDU 2588 GCD","slug":"hdu-2588-gcd","date":"2017-11-25T11:45:09.000Z","updated":"2019-07-03T13:51:36.859Z","comments":true,"path":"api/articles/hdu-2588-gcd.json","excerpt":"","keywords":null,"cover":null,"content":"<p>类型: 数论-欧拉函数-折半枚举 原题连接: <a href=\"https://vjudge.net/problem/HDU-2588\" target=\"_blank\" rel=\"noopener\">https://vjudge.net/problem/HDU-2588</a></p>\n<blockquote>\n<p>题意</p>\n<blockquote>\n<p>输入N,M,对于每个 X (1=&lt;X&lt;=N)判断是否 GCD(X,N)&gt;=M,输出有多少这样的X.</p>\n</blockquote>\n<p>题解</p>\n<blockquote>\n<p>首先无法枚举X求GCD(X,N) 我们考虑 (X,N) = (q*d,b*d) 其中d是X,N的最大公约数. 可以知道 b&gt;=q 且 b与q互质①. 所以就转换成了对每个这样的d求 euler(b)(见①) 且 d&gt;=M 的个数. 也就转换成了枚举d求euler(b)之和.但是这仍是O(TNlgN)复杂度的. 所以我们采用折半枚举的做法,因为要枚举的是d,而d*b在sqrt(N)之后就变成了b*d了.所以我们可以只需要枚举sqrt(N)个数,将b,d都看做b即可.</p>\n</blockquote>\n</blockquote>\n<p>Code:</p>\n<pre><code>#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#include&lt;cstdio&gt;\nusing namespace std;\n\nint euler(int n){\n    int res=n,a=n;\n    for(int i=2;i*i&lt;=a;++i){\n        if(a%i==0){\n            ///φ(N)=N*(1-1/P1)*(1-1/P2)...其中P是素因子\n            res=res/i*(i-1);//先进行除法方为了预防溢出\n            while(a%i==0) a/=i;\n        }\n    }\n    if(a&gt;1) res=res/a*(a-1);\n    return res;\n}\n\nint main(){\n    int T;\n    scanf(&quot;%d&quot;,&amp;T);\n    for(int i=0;i&lt;T;++i){\n        int ans=0;\n        int N,M;\n        scanf(&quot;%d%d&quot;,&amp;N,&amp;M);\n        for(int i=1;i*i&lt;=N;++i){\n            if(N%i==0){\n                if(i&gt;=M)\n                    ans+=euler(N/i);\n                if((N/i)!=i &amp;&amp; (N/i)&gt;=M)\n                ///如果==i且&gt;=M的话证明i&gt;=M,而不需要计算两次,所以排除掉\n                    ans+=euler(i);\n            }\n        }\n        printf(&quot;%d\\n&quot;,ans);\n    }\n    return 0;\n}</code></pre>","text":"类型: 数论-欧拉函数-折半枚举 原题连接: https://vjudge.net/problem/HDU-2588题意输入N,M,对于每个 X (1=&lt;X&lt;=N)判断是否 GCD(X,N)&gt;=M,输出有多少这样的X.题解首先无法枚举X求GCD(X,N) 我们考","link":"","raw":null,"photos":[],"categories":[{"name":"HDU","slug":"HDU","count":12,"path":"api/categories/HDU.json"},{"name":"数论","slug":"HDU/数论","count":1,"path":"api/categories/HDU/数论.json"},{"name":"欧拉函数","slug":"HDU/数论/欧拉函数","count":1,"path":"api/categories/HDU/数论/欧拉函数.json"}],"tags":[{"name":"数论","slug":"数论","count":28,"path":"api/tags/数论.json"},{"name":"欧拉函数","slug":"欧拉函数","count":7,"path":"api/tags/欧拉函数.json"},{"name":"HDU","slug":"HDU","count":14,"path":"api/tags/HDU.json"}]}]}