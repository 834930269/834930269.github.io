{"name":"数位DP","slug":"动态规划/数位DP","count":1,"postlist":[{"title":"动态规划","slug":"dynamic-program","date":"2018-03-13T13:24:32.000Z","updated":"2019-07-03T13:51:36.863Z","comments":true,"path":"api/articles/dynamic-program.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>痛并不快乐着..</p>\n</blockquote>\n<h1><span id=\"数位dp\">数位dp</span></h1><blockquote>\n<p>HDU 3555</p>\n<blockquote>\n<p>不要49</p>\n</blockquote>\n</blockquote>\n<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long LL;\n\nLL dp[20][3];\nint digit[20];\n\nLL dfs(int pos,int pre,int state,bool jud){\n    //cout&lt;&lt;pos&lt;&lt;&quot; &quot;&lt;&lt;state&lt;&lt;endl;\n    ///数位递归到0则返回\n    if(pos==0)\n        return 1;\n    ///如果有数据就返回数据\n    if(!jud&amp;&amp;dp[pos][state]!=-1)\n        return dp[pos][state];\n\n    LL ans=0;\n    int ed=jud?digit[pos]:9;\n    //cout&lt;&lt;ed&lt;&lt;endl;\n    for(int i=0;i&lt;=ed;++i){\n        if(pre==4&amp;&amp;i==9)continue;\n        ans+=dfs(pos-1,i,i==4,jud&amp;&amp;i==ed);\n    }\n    if(!jud){///不取上界时,可以取满\n        dp[pos][state]=ans;\n    }\n    return ans;\n}\n\n///数字处理函数\nLL cal(LL x){\n    int pos=0;\n    while(x){\n        digit[++pos]=x%10;\n        x/=10;\n    }\n    return dfs(pos,0,0,true);\n}\n\nint main(){\n    memset(dp,-1,sizeof(dp));\n    int T;\n    for(scanf(&quot;%d&quot;,&amp;T);T;T--){\n        LL n;\n        scanf(&quot;%lld&quot;,&amp;n);\n        printf(&quot;%lld\\n&quot;,n-cal(n)+1);\n    }\n    return 0;\n}</code></pre><blockquote>\n<p>HDU 2089</p>\n</blockquote>\n<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long LL;\nconst int maxn=1000000+7;\nLL dp[20][3];\nint digit[20];\n\nLL dfs(int pos,int pre,int state,bool jud){\n    //cout&lt;&lt;pos&lt;&lt;&quot; &quot;&lt;&lt;state&lt;&lt;endl;\n    ///数位递归到0则返回\n    if(pos==0)\n        return 1;\n    ///如果有数据就返回数据\n    if(!jud&amp;&amp;dp[pos][state]!=-1)\n        return dp[pos][state];\n\n    LL ans=0;\n    int ed=jud?digit[pos]:9;//这句是判断他的上界\n    //cout&lt;&lt;ed&lt;&lt;endl;\n    for(int i=0;i&lt;=ed;++i){\n        if(pre==6&amp;&amp;i==2)continue;\n        if(i==4)continue;\n        ans+=dfs(pos-1,i,i==6,jud&amp;&amp;i==ed);\n    }\n    if(!jud){///不取上界时,可以取满\n        dp[pos][state]=ans;\n    }\n    return ans;\n}\n\n///数字处理函数\nLL cal(LL x){\n    int pos=0;\n    //cout&lt;&lt;&quot;tx: &quot;;\n    while(x){\n        digit[++pos]=x%10;\n        //cout&lt;&lt;x%10&lt;&lt;endl;\n        x/=10;\n    }\n    return dfs(pos,0,0,true);\n}\n\nint main(){\n    memset(dp,-1,sizeof(dp));\n    LL n,m;\n    while(~scanf(&quot;%lld%lld&quot;,&amp;n,&amp;m) &amp;&amp; n+m){\n        printf(&quot;%lld\\n&quot;,cal(m)-cal(n-1));\n    }\n    return 0;\n}</code></pre>","text":"痛并不快乐着..数位dpHDU 3555不要49#include&lt;bits/stdc++.h&gt;using namespace std;typedef long long LL;LL dp[20][3];int digit[20];LL dfs(int pos,int ","link":"","raw":null,"photos":[],"categories":[{"name":"动态规划","slug":"动态规划","count":6,"path":"api/categories/动态规划.json"},{"name":"数位DP","slug":"动态规划/数位DP","count":1,"path":"api/categories/动态规划/数位DP.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":24,"path":"api/tags/动态规划.json"},{"name":"数位DP","slug":"数位DP","count":3,"path":"api/tags/数位DP.json"}]}]}