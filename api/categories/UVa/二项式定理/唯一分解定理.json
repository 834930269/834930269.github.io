{"name":"唯一分解定理","slug":"UVa/二项式定理/唯一分解定理","count":1,"postlist":[{"title":"UVa 1635","slug":"uva-1635","date":"2017-01-10T11:13:32.000Z","updated":"2019-07-03T13:51:36.845Z","comments":true,"path":"api/articles/uva-1635.json","excerpt":"","keywords":null,"cover":null,"content":"<p>【类型】 唯一分解定理,二项式定理(组合数学) 【题目来源】 算法竞赛入门经典P320 例题10-6 <a href=\"https://vjudge.net/problem/UVA-1635\" target=\"_blank\" rel=\"noopener\">UVa-1635-Irrelevant Elements</a> 【Tip】 二项式定理展开式:C(n,k)=C(n,k-1)<em>(n-k+1)/k. 即 C[i]=C[i-1]</em>(n-i+1)/i. 注意,应该先乘再除,因为C[i-1]/i可能不是整数.但结果一定是整数.而且,因为二项式是递归乘法,所以有时可能会溢出long long,这题就是个例子. 【思路】 因为C(n,i)可能会爆long long,所以先对m做唯一分解，分解成若干素数,并记录每个素数的指数.然后以此计算m的唯一分解式中哥哥素因子在C(n-1,i-1)中的指数即可完成判断.这些指数依然可以用上面那个递推式递推,并且不会涉及高精度. 【参考】 <a href=\"http://blog.csdn.net/u014800748/article/details/43927205\" target=\"_blank\" rel=\"noopener\">Hengjie Yang</a> 【Code】</p>\n<p>#include<iostream></iostream></p>\n<p>#include<algorithm></algorithm></p>\n<p>#include<cstdio></cstdio></p>\n<p>#include<cmath></cmath></p>\n<p>#include<cstring><br>using namespace std;<br>typedef long long LL;<br>LL C[100005];<br>int prime[101][2];<br>int fac_c[100];<br>int N,M;</cstring></p>\n<p>int initM(int m){<br>    int primenum=0;<br>    for(int i=2;i&lt;=sqrt(m);++i){<br>        if(m%i==0){<br>            prime[++primenum][0]=i;<br>            prime[primenum][1]=0;<br>            while(m%i==0){<br>                prime[primenum][1]++;<br>                m/=i;<br>            }<br>        }<br>    }<br>    if(m&gt;1){<br>        prime[++primenum][0]=m;<br>        prime[primenum][1]=1;<br>    }<br>    return primenum;<br>}</p>\n<p>bool check(int m,int k,int primenum){<br>    int a=m-k;<br>    int b=k;<br>    for(int i=1;i&lt;=primenum;++i){<br>        for(;a%prime[i][0]==0;a/=prime[i][0],fac_c[i]++);<br>        for(;b%prime[i][0]==0;b/=prime[i][0],fac_c[i]–);<br>    }<br>    for(int i=1;i&lt;=primenum;++i)<br>        if(prime[i][1]&gt;fac_c[i])<br>        return false;<br>    return true;<br>}</p>\n<p>int main(){<br>    while(cin&gt;&gt;N&gt;&gt;M){<br>        int primenum=initM(M);//唯一分解M,防止爆LL<br>        memset(fac_c,0,sizeof(fac_c));<br>        int cnt=0;//无关数个数<br>        for(int i=1;i&lt;N;++i){<br>            //0~(n-1),这个是组合数C(m,n)的n.  m=n-1 index=i+1<br>            if(check(N,i,primenum))<br>                C[cnt++]=i+1;<br>        }<br>        printf(“%d\\n”,cnt);<br>        for(int i=0;i&lt;cnt;++i)<br>            printf(i==(cnt-1)?”%d\\n”:”%d “,C[i]);<br>    }<br>    return 0;<br>}</p>\n","text":"【类型】 唯一分解定理,二项式定理(组合数学) 【题目来源】 算法竞赛入门经典P320 例题10-6 UVa-1635-Irrelevant Elements 【Tip】 二项式定理展开式:C(n,k)=C(n,k-1)(n-k+1)/k. 即 C[i]=C[i-1](n-i+1","link":"","raw":null,"photos":[],"categories":[{"name":"UVa","slug":"UVa","count":35,"path":"api/categories/UVa.json"},{"name":"二项式定理","slug":"UVa/二项式定理","count":1,"path":"api/categories/UVa/二项式定理.json"},{"name":"唯一分解定理","slug":"UVa/二项式定理/唯一分解定理","count":1,"path":"api/categories/UVa/二项式定理/唯一分解定理.json"},{"name":"数论","slug":"UVa/二项式定理/唯一分解定理/数论","count":1,"path":"api/categories/UVa/二项式定理/唯一分解定理/数论.json"},{"name":"组合数学","slug":"UVa/二项式定理/唯一分解定理/数论/组合数学","count":1,"path":"api/categories/UVa/二项式定理/唯一分解定理/数论/组合数学.json"}],"tags":[{"name":"数论","slug":"数论","count":28,"path":"api/tags/数论.json"},{"name":"组合数学","slug":"组合数学","count":12,"path":"api/tags/组合数学.json"},{"name":"UVa","slug":"UVa","count":39,"path":"api/tags/UVa.json"}]}]}