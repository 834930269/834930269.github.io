{"name":"母函数","slug":"51nod/母函数","count":1,"postlist":[{"title":"51nod 1383 整数分解为2的幂","slug":"51nod-1383-2-mo","date":"2018-03-07T04:50:34.000Z","updated":"2019-07-03T13:51:36.862Z","comments":true,"path":"api/articles/51nod-1383-2-mo.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Type-组合数学-母函数\"><a href=\"#Type-组合数学-母函数\" class=\"headerlink\" title=\"Type: 组合数学,母函数\"></a>Type: 组合数学,母函数</h1><h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>任何正整数都能分解成2的幂，给定整数N，求N的此类划分方法的数量！由于方案数量较大，输出Mod 1000000007的结果。 比如N = 7时，共有6种划分方法。 7=1+1+1+1+1+1+1 =1+1+1+1+1+2 =1+1+1+2+2 =1+2+2+2 =1+1+1+4 =1+2+4</p>\n<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><p>输入一个数N（1 &lt;= N &lt;= 10^6)</p>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><p>输出划分方法的数量Mod 1000000007</p>\n<h1 id=\"Input示例\"><a href=\"#Input示例\" class=\"headerlink\" title=\"Input示例\"></a>Input示例</h1><p>7</p>\n<h1 id=\"Output示例\"><a href=\"#Output示例\" class=\"headerlink\" title=\"Output示例\"></a>Output示例</h1><p>6</p>\n<h1 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h1><blockquote>\n<p>生成函数</p>\n<blockquote>\n<p>我们可以将题意理解为:</p>\n<blockquote>\n<p>有1,2,4,…,2^N&lt;=1000000 种物品可以选择,每种物品可以选择数量为无限,问你当背包重量为 M 时有多少种选择.</p>\n</blockquote>\n</blockquote>\n<p>列出生成函数为:</p>\n<blockquote>\n<p>g(m)=(1+x+x^2+x^3+…)(1+x^2+x^4+x^6+…) (1+x^4+x^8+x^12+…)(1+x^8+x^16+x^24+…) …(1+x^19) | (因为x^20&gt;1e6)</p>\n</blockquote>\n<p>只需要求出展开式中每项的序数即可,输入 N 输出 K[N] 我们给定一个数组 c1 作为储存系数用.</p>\n<blockquote>\n<p>只需要将每个括号内的式子乘入数组 c1 即可.</p>\n<blockquote>\n<p>限制条件为 i=2^t &lt;= 1000000 j+i &lt;= 1000000</p>\n</blockquote>\n</blockquote>\n<p>所有的计算都向第一个括号 (1+x+x^2+…+x^1000000) 为基准进行合并，合并到 j+i&gt;1000000 为止. 其他部分解释放在代码中</p>\n</blockquote>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int mod=1e9+7;\nconst int maxn=1000100;\nint c1[maxn]={1};\n\ninline void init(int n){\n    for(int i=1;i&lt;=n;i&lt;&lt;=1){\n        for(int j=0;(j+i)&lt;=n;++j){\n            ///j+i是 当前值为j,加上第log2(i)括号内的等差幂次i\n            ///后计算出目标待加值为 (j+i)\n            ///即幂次为(j+i)的母函数系数计算过程为:\n            /// (k)x^(i+j)=(k1)x^j*x^i*(k2)x^(i+j)\n            /// 即 k=k1+k2\n            /// 即 c1[j+i]=c[j]+c[j+i]\n            ///x^i系数为1因为生成函数第log2(i)个括\n            ///号中所有x^i的系数为1\n            c1[j+i]=(c1[j+i]+c1[j])%mod;\n        }\n    }\n}\n\n\nint main(){\n    init(1000000);\n    int N;\n\n    while(cin&gt;&gt;N){\n        cout&lt;&lt;c1[N]&lt;&lt;endl;\n    }\n    return 0;\n}</code></pre>","text":"Type: 组合数学,母函数题目任何正整数都能分解成2的幂，给定整数N，求N的此类划分方法的数量！由于方案数量较大，输出Mod 1000000007的结果。 比如N = 7时，共有6种划分方法。 7=1+1+1+1+1+1+1 =1+1+1+1+1+2 =1+1+1+2+2 =1","link":"","raw":null,"photos":[],"categories":[{"name":"51nod","slug":"51nod","count":12,"path":"api/categories/51nod.json"},{"name":"母函数","slug":"51nod/母函数","count":1,"path":"api/categories/51nod/母函数.json"},{"name":"组合数学","slug":"51nod/母函数/组合数学","count":1,"path":"api/categories/51nod/母函数/组合数学.json"}],"tags":[{"name":"51nod","slug":"51nod","count":12,"path":"api/tags/51nod.json"},{"name":"组合数学","slug":"组合数学","count":12,"path":"api/tags/组合数学.json"},{"name":"母函数","slug":"母函数","count":1,"path":"api/tags/母函数.json"}]}]}